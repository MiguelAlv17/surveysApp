import { openBlock as w, createElementBlock as V, createElementVNode as fe, unref as v, reactive as Ht, computed as j, ref as ee, toRef as xt, watch as mt, h as Ga, render as Qn, defineComponent as Ie, renderSlot as le, createCommentVNode as W, normalizeClass as we, withKeys as ce, createBlock as he, withModifiers as De, onMounted as Le, normalizeStyle as Xe, normalizeProps as Re, mergeProps as Ne, Fragment as ye, createTextVNode as it, toDisplayString as Be, onBeforeUpdate as qa, nextTick as gt, onUnmounted as Yn, renderList as Ae, withDirectives as Zt, vShow as Qt, withCtx as ge, createVNode as qe, Transition as Rt, createSlots as Ve, useSlots as Dt, guardReactiveProps as We, resolveDynamicComponent as Nn, getCurrentScope as Za, onScopeDispose as Qa, isRef as Xn, Teleport as Xa } from "vue";
import { format as ct, isBefore as It, isEqual as St, isAfter as Bt, set as Te, setHours as pa, setMinutes as ba, setSeconds as In, setMilliseconds as Bn, getYear as ve, getMonth as pe, setMonth as Ja, setYear as nt, addMonths as bt, subMonths as Et, isValid as Xt, parseISO as xa, eachDayOfInterval as ka, getHours as Je, getMinutes as at, getSeconds as Pt, startOfWeek as wa, endOfWeek as er, parse as Tn, isDate as tr, addYears as Da, subYears as Ma, addDays as pt, getDay as nr, differenceInCalendarDays as ar, add as $a, sub as rr, getWeek as lr, getISOWeek as or, isSameQuarter as Jn, eachQuarterOfInterval as sr, startOfYear as ir, endOfYear as ur, startOfQuarter as dr, endOfQuarter as xn, getQuarter as ea } from "date-fns";
function Vt() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M29.333 8c0-2.208-1.792-4-4-4h-18.667c-2.208 0-4 1.792-4 4v18.667c0 2.208 1.792 4 4 4h18.667c2.208 0 4-1.792 4-4v-18.667zM26.667 8v18.667c0 0.736-0.597 1.333-1.333 1.333 0 0-18.667 0-18.667 0-0.736 0-1.333-0.597-1.333-1.333 0 0 0-18.667 0-18.667 0-0.736 0.597-1.333 1.333-1.333 0 0 18.667 0 18.667 0 0.736 0 1.333 0.597 1.333 1.333z"
      }),
      fe("path", {
        d: "M20 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      fe("path", {
        d: "M9.333 2.667v5.333c0 0.736 0.597 1.333 1.333 1.333s1.333-0.597 1.333-1.333v-5.333c0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      }),
      fe("path", {
        d: "M4 14.667h24c0.736 0 1.333-0.597 1.333-1.333s-0.597-1.333-1.333-1.333h-24c-0.736 0-1.333 0.597-1.333 1.333s0.597 1.333 1.333 1.333z"
      })
    ]
  );
}
Vt.compatConfig = {
  MODE: 3
};
function Ta() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M23.057 7.057l-16 16c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l16-16c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0z"
      }),
      fe("path", {
        d: "M7.057 8.943l16 16c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885l-16-16c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
Ta.compatConfig = {
  MODE: 3
};
function En() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M20.943 23.057l-7.057-7.057c0 0 7.057-7.057 7.057-7.057 0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-8 8c-0.521 0.521-0.521 1.365 0 1.885l8 8c0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
En.compatConfig = {
  MODE: 3
};
function Fn() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M12.943 24.943l8-8c0.521-0.521 0.521-1.365 0-1.885l-8-8c-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885l7.057 7.057c0 0-7.057 7.057-7.057 7.057-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0z"
      })
    ]
  );
}
Fn.compatConfig = {
  MODE: 3
};
function Hn() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M16 1.333c-8.095 0-14.667 6.572-14.667 14.667s6.572 14.667 14.667 14.667c8.095 0 14.667-6.572 14.667-14.667s-6.572-14.667-14.667-14.667zM16 4c6.623 0 12 5.377 12 12s-5.377 12-12 12c-6.623 0-12-5.377-12-12s5.377-12 12-12z"
      }),
      fe("path", {
        d: "M14.667 8v8c0 0.505 0.285 0.967 0.737 1.193l5.333 2.667c0.658 0.329 1.46 0.062 1.789-0.596s0.062-1.46-0.596-1.789l-4.596-2.298c0 0 0-7.176 0-7.176 0-0.736-0.597-1.333-1.333-1.333s-1.333 0.597-1.333 1.333z"
      })
    ]
  );
}
Hn.compatConfig = {
  MODE: 3
};
function Vn() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M24.943 19.057l-8-8c-0.521-0.521-1.365-0.521-1.885 0l-8 8c-0.52 0.52-0.52 1.365 0 1.885s1.365 0.52 1.885 0l7.057-7.057c0 0 7.057 7.057 7.057 7.057 0.52 0.52 1.365 0.52 1.885 0s0.52-1.365 0-1.885z"
      })
    ]
  );
}
Vn.compatConfig = {
  MODE: 3
};
function Ln() {
  return w(), V(
    "svg",
    {
      xmlns: "http://www.w3.org/2000/svg",
      viewBox: "0 0 32 32",
      fill: "currentColor",
      "aria-hidden": "true",
      class: "dp__icon"
    },
    [
      fe("path", {
        d: "M7.057 12.943l8 8c0.521 0.521 1.365 0.521 1.885 0l8-8c0.52-0.52 0.52-1.365 0-1.885s-1.365-0.52-1.885 0l-7.057 7.057c0 0-7.057-7.057-7.057-7.057-0.52-0.52-1.365-0.52-1.885 0s-0.52 1.365 0 1.885z"
      })
    ]
  );
}
Ln.compatConfig = {
  MODE: 3
};
function Un(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
}
var Aa = { exports: {} };
(function(e) {
  function t(r) {
    return r && r.__esModule ? r : {
      default: r
    };
  }
  e.exports = t, e.exports.__esModule = !0, e.exports.default = e.exports;
})(Aa);
var cr = Aa.exports, An = { exports: {} };
(function(e, t) {
  Object.defineProperty(t, "__esModule", {
    value: !0
  }), t.default = r;
  function r(a) {
    if (a === null || a === !0 || a === !1)
      return NaN;
    var n = Number(a);
    return isNaN(n) ? n : n < 0 ? Math.ceil(n) : Math.floor(n);
  }
  e.exports = t.default;
})(An, An.exports);
var fr = An.exports;
const vr = /* @__PURE__ */ Un(fr);
var Sn = { exports: {} };
(function(e, t) {
  Object.defineProperty(t, "__esModule", {
    value: !0
  }), t.default = r;
  function r(a) {
    var n = new Date(Date.UTC(a.getFullYear(), a.getMonth(), a.getDate(), a.getHours(), a.getMinutes(), a.getSeconds(), a.getMilliseconds()));
    return n.setUTCFullYear(a.getFullYear()), a.getTime() - n.getTime();
  }
  e.exports = t.default;
})(Sn, Sn.exports);
var mr = Sn.exports;
const ta = /* @__PURE__ */ Un(mr);
function gr(e, t) {
  var r = br(t);
  return r.formatToParts ? hr(r, e) : pr(r, e);
}
var yr = {
  year: 0,
  month: 1,
  day: 2,
  hour: 3,
  minute: 4,
  second: 5
};
function hr(e, t) {
  try {
    for (var r = e.formatToParts(t), a = [], n = 0; n < r.length; n++) {
      var o = yr[r[n].type];
      o >= 0 && (a[o] = parseInt(r[n].value, 10));
    }
    return a;
  } catch (i) {
    if (i instanceof RangeError)
      return [NaN];
    throw i;
  }
}
function pr(e, t) {
  var r = e.format(t).replace(/\u200E/g, ""), a = /(\d+)\/(\d+)\/(\d+),? (\d+):(\d+):(\d+)/.exec(r);
  return [a[3], a[1], a[2], a[4], a[5], a[6]];
}
var fn = {};
function br(e) {
  if (!fn[e]) {
    var t = new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: "America/New_York",
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }).format(/* @__PURE__ */ new Date("2014-06-25T04:00:00.123Z")), r = t === "06/25/2014, 00:00:00" || t === "‎06‎/‎25‎/‎2014‎ ‎00‎:‎00‎:‎00";
    fn[e] = r ? new Intl.DateTimeFormat("en-US", {
      hour12: !1,
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    }) : new Intl.DateTimeFormat("en-US", {
      hourCycle: "h23",
      timeZone: e,
      year: "numeric",
      month: "numeric",
      day: "2-digit",
      hour: "2-digit",
      minute: "2-digit",
      second: "2-digit"
    });
  }
  return fn[e];
}
function zn(e, t, r, a, n, o, i) {
  var c = /* @__PURE__ */ new Date(0);
  return c.setUTCFullYear(e, t, r), c.setUTCHours(a, n, o, i), c;
}
var na = 36e5, kr = 6e4, vn = {
  timezone: /([Z+-].*)$/,
  timezoneZ: /^(Z)$/,
  timezoneHH: /^([+-]\d{2})$/,
  timezoneHHMM: /^([+-]\d{2}):?(\d{2})$/
};
function Wn(e, t, r) {
  var a, n;
  if (e === "" || (a = vn.timezoneZ.exec(e), a))
    return 0;
  var o;
  if (a = vn.timezoneHH.exec(e), a)
    return o = parseInt(a[1], 10), aa(o) ? -(o * na) : NaN;
  if (a = vn.timezoneHHMM.exec(e), a) {
    o = parseInt(a[1], 10);
    var i = parseInt(a[2], 10);
    return aa(o, i) ? (n = Math.abs(o) * na + i * kr, o > 0 ? -n : n) : NaN;
  }
  if (Mr(e)) {
    t = new Date(t || Date.now());
    var c = r ? t : wr(t), p = Pn(c, e), M = r ? p : Dr(t, p, e);
    return -M;
  }
  return NaN;
}
function wr(e) {
  return zn(
    e.getFullYear(),
    e.getMonth(),
    e.getDate(),
    e.getHours(),
    e.getMinutes(),
    e.getSeconds(),
    e.getMilliseconds()
  );
}
function Pn(e, t) {
  var r = gr(e, t), a = zn(
    r[0],
    r[1] - 1,
    r[2],
    r[3] % 24,
    r[4],
    r[5],
    0
  ).getTime(), n = e.getTime(), o = n % 1e3;
  return n -= o >= 0 ? o : 1e3 + o, a - n;
}
function Dr(e, t, r) {
  var a = e.getTime(), n = a - t, o = Pn(new Date(n), r);
  if (t === o)
    return t;
  n -= o - t;
  var i = Pn(new Date(n), r);
  return o === i ? o : Math.max(o, i);
}
function aa(e, t) {
  return -23 <= e && e <= 23 && (t == null || 0 <= t && t <= 59);
}
var ra = {};
function Mr(e) {
  if (ra[e])
    return !0;
  try {
    return new Intl.DateTimeFormat(void 0, { timeZone: e }), ra[e] = !0, !0;
  } catch {
    return !1;
  }
}
var Sa = /(Z|[+-]\d{2}(?::?\d{2})?| UTC| [a-zA-Z]+\/[a-zA-Z_]+(?:\/[a-zA-Z_]+)?)$/, mn = 36e5, la = 6e4, $r = 2, He = {
  dateTimePattern: /^([0-9W+-]+)(T| )(.*)/,
  datePattern: /^([0-9W+-]+)(.*)/,
  plainTime: /:/,
  // year tokens
  YY: /^(\d{2})$/,
  YYY: [
    /^([+-]\d{2})$/,
    // 0 additional digits
    /^([+-]\d{3})$/,
    // 1 additional digit
    /^([+-]\d{4})$/
    // 2 additional digits
  ],
  YYYY: /^(\d{4})/,
  YYYYY: [
    /^([+-]\d{4})/,
    // 0 additional digits
    /^([+-]\d{5})/,
    // 1 additional digit
    /^([+-]\d{6})/
    // 2 additional digits
  ],
  // date tokens
  MM: /^-(\d{2})$/,
  DDD: /^-?(\d{3})$/,
  MMDD: /^-?(\d{2})-?(\d{2})$/,
  Www: /^-?W(\d{2})$/,
  WwwD: /^-?W(\d{2})-?(\d{1})$/,
  HH: /^(\d{2}([.,]\d*)?)$/,
  HHMM: /^(\d{2}):?(\d{2}([.,]\d*)?)$/,
  HHMMSS: /^(\d{2}):?(\d{2}):?(\d{2}([.,]\d*)?)$/,
  // time zone tokens (to identify the presence of a tz)
  timeZone: Sa
};
function Cn(e, t) {
  if (arguments.length < 1)
    throw new TypeError("1 argument required, but only " + arguments.length + " present");
  if (e === null)
    return /* @__PURE__ */ new Date(NaN);
  var r = t || {}, a = r.additionalDigits == null ? $r : vr(r.additionalDigits);
  if (a !== 2 && a !== 1 && a !== 0)
    throw new RangeError("additionalDigits must be 0, 1 or 2");
  if (e instanceof Date || typeof e == "object" && Object.prototype.toString.call(e) === "[object Date]")
    return new Date(e.getTime());
  if (typeof e == "number" || Object.prototype.toString.call(e) === "[object Number]")
    return new Date(e);
  if (!(typeof e == "string" || Object.prototype.toString.call(e) === "[object String]"))
    return /* @__PURE__ */ new Date(NaN);
  var n = Tr(e), o = Ar(n.date, a), i = o.year, c = o.restDateString, p = Sr(c, i);
  if (isNaN(p))
    return /* @__PURE__ */ new Date(NaN);
  if (p) {
    var M = p.getTime(), $ = 0, C;
    if (n.time && ($ = Pr(n.time), isNaN($)))
      return /* @__PURE__ */ new Date(NaN);
    if (n.timeZone || r.timeZone) {
      if (C = Wn(n.timeZone || r.timeZone, new Date(M + $)), isNaN(C))
        return /* @__PURE__ */ new Date(NaN);
    } else
      C = ta(new Date(M + $)), C = ta(new Date(M + $ + C));
    return new Date(M + $ + C);
  } else
    return /* @__PURE__ */ new Date(NaN);
}
function Tr(e) {
  var t = {}, r = He.dateTimePattern.exec(e), a;
  if (r ? (t.date = r[1], a = r[3]) : (r = He.datePattern.exec(e), r ? (t.date = r[1], a = r[2]) : (t.date = null, a = e)), a) {
    var n = He.timeZone.exec(a);
    n ? (t.time = a.replace(n[1], ""), t.timeZone = n[1].trim()) : t.time = a;
  }
  return t;
}
function Ar(e, t) {
  var r = He.YYY[t], a = He.YYYYY[t], n;
  if (n = He.YYYY.exec(e) || a.exec(e), n) {
    var o = n[1];
    return {
      year: parseInt(o, 10),
      restDateString: e.slice(o.length)
    };
  }
  if (n = He.YY.exec(e) || r.exec(e), n) {
    var i = n[1];
    return {
      year: parseInt(i, 10) * 100,
      restDateString: e.slice(i.length)
    };
  }
  return {
    year: null
  };
}
function Sr(e, t) {
  if (t === null)
    return null;
  var r, a, n, o;
  if (e.length === 0)
    return a = /* @__PURE__ */ new Date(0), a.setUTCFullYear(t), a;
  if (r = He.MM.exec(e), r)
    return a = /* @__PURE__ */ new Date(0), n = parseInt(r[1], 10) - 1, sa(t, n) ? (a.setUTCFullYear(t, n), a) : /* @__PURE__ */ new Date(NaN);
  if (r = He.DDD.exec(e), r) {
    a = /* @__PURE__ */ new Date(0);
    var i = parseInt(r[1], 10);
    return Rr(t, i) ? (a.setUTCFullYear(t, 0, i), a) : /* @__PURE__ */ new Date(NaN);
  }
  if (r = He.MMDD.exec(e), r) {
    a = /* @__PURE__ */ new Date(0), n = parseInt(r[1], 10) - 1;
    var c = parseInt(r[2], 10);
    return sa(t, n, c) ? (a.setUTCFullYear(t, n, c), a) : /* @__PURE__ */ new Date(NaN);
  }
  if (r = He.Www.exec(e), r)
    return o = parseInt(r[1], 10) - 1, ia(t, o) ? oa(t, o) : /* @__PURE__ */ new Date(NaN);
  if (r = He.WwwD.exec(e), r) {
    o = parseInt(r[1], 10) - 1;
    var p = parseInt(r[2], 10) - 1;
    return ia(t, o, p) ? oa(t, o, p) : /* @__PURE__ */ new Date(NaN);
  }
  return null;
}
function Pr(e) {
  var t, r, a;
  if (t = He.HH.exec(e), t)
    return r = parseFloat(t[1].replace(",", ".")), gn(r) ? r % 24 * mn : NaN;
  if (t = He.HHMM.exec(e), t)
    return r = parseInt(t[1], 10), a = parseFloat(t[2].replace(",", ".")), gn(r, a) ? r % 24 * mn + a * la : NaN;
  if (t = He.HHMMSS.exec(e), t) {
    r = parseInt(t[1], 10), a = parseInt(t[2], 10);
    var n = parseFloat(t[3].replace(",", "."));
    return gn(r, a, n) ? r % 24 * mn + a * la + n * 1e3 : NaN;
  }
  return null;
}
function oa(e, t, r) {
  t = t || 0, r = r || 0;
  var a = /* @__PURE__ */ new Date(0);
  a.setUTCFullYear(e, 0, 4);
  var n = a.getUTCDay() || 7, o = t * 7 + r + 1 - n;
  return a.setUTCDate(a.getUTCDate() + o), a;
}
var Cr = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31], _r = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
function Pa(e) {
  return e % 400 === 0 || e % 4 === 0 && e % 100 !== 0;
}
function sa(e, t, r) {
  if (t < 0 || t > 11)
    return !1;
  if (r != null) {
    if (r < 1)
      return !1;
    var a = Pa(e);
    if (a && r > _r[t] || !a && r > Cr[t])
      return !1;
  }
  return !0;
}
function Rr(e, t) {
  if (t < 1)
    return !1;
  var r = Pa(e);
  return !(r && t > 366 || !r && t > 365);
}
function ia(e, t, r) {
  return !(t < 0 || t > 52 || r != null && (r < 0 || r > 6));
}
function gn(e, t, r) {
  return !(e != null && (e < 0 || e >= 25) || t != null && (t < 0 || t >= 60) || r != null && (r < 0 || r >= 60));
}
var _n = { exports: {} }, Rn = { exports: {} };
(function(e, t) {
  Object.defineProperty(t, "__esModule", {
    value: !0
  }), t.default = r;
  function r(a, n) {
    if (a == null)
      throw new TypeError("assign requires that input parameter not be null or undefined");
    for (var o in n)
      Object.prototype.hasOwnProperty.call(n, o) && (a[o] = n[o]);
    return a;
  }
  e.exports = t.default;
})(Rn, Rn.exports);
var Or = Rn.exports;
(function(e, t) {
  var r = cr.default;
  Object.defineProperty(t, "__esModule", {
    value: !0
  }), t.default = n;
  var a = r(Or);
  function n(o) {
    return (0, a.default)({}, o);
  }
  e.exports = t.default;
})(_n, _n.exports);
var Yr = _n.exports;
const Nr = /* @__PURE__ */ Un(Yr);
function Ir(e, t, r) {
  var a = Cn(e, r), n = Wn(t, a, !0), o = new Date(a.getTime() - n), i = /* @__PURE__ */ new Date(0);
  return i.setFullYear(o.getUTCFullYear(), o.getUTCMonth(), o.getUTCDate()), i.setHours(o.getUTCHours(), o.getUTCMinutes(), o.getUTCSeconds(), o.getUTCMilliseconds()), i;
}
function Br(e, t, r) {
  if (typeof e == "string" && !e.match(Sa)) {
    var a = Nr(r);
    return a.timeZone = t, Cn(e, a);
  }
  var n = Cn(e, r), o = zn(
    n.getFullYear(),
    n.getMonth(),
    n.getDate(),
    n.getHours(),
    n.getMinutes(),
    n.getSeconds(),
    n.getMilliseconds()
  ).getTime(), i = Wn(t, new Date(o));
  return new Date(o + i);
}
function ua(e) {
  return (t) => new Intl.DateTimeFormat(e, { weekday: "short", timeZone: "UTC" }).format(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`)).slice(0, 2);
}
function Er(e) {
  return (t) => ct(/* @__PURE__ */ new Date(`2017-01-0${t}T00:00:00+00:00`), "EEEEEE", { locale: e });
}
const Fr = (e, t, r) => {
  const a = [1, 2, 3, 4, 5, 6, 7];
  let n;
  if (e !== null)
    try {
      n = a.map(Er(e));
    } catch {
      n = a.map(ua(t));
    }
  else
    n = a.map(ua(t));
  const o = n.slice(0, r), i = n.slice(r + 1, n.length);
  return [n[r]].concat(...i).concat(...o);
}, jn = (e, t) => {
  const r = [];
  for (let a = +e[0]; a <= +e[1]; a++)
    r.push({ value: +a, text: `${a}` });
  return t ? r.reverse() : r;
}, Ca = (e, t, r) => {
  const a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12].map((o) => {
    const i = o < 10 ? `0${o}` : o;
    return /* @__PURE__ */ new Date(`2017-${i}-01T00:00:00+00:00`);
  });
  if (e !== null)
    try {
      const o = r === "long" ? "MMMM" : "MMM";
      return a.map((i, c) => {
        const p = ct(i, o, { locale: e });
        return {
          text: p.charAt(0).toUpperCase() + p.substring(1),
          value: c
        };
      });
    } catch {
    }
  const n = new Intl.DateTimeFormat(t, { month: r, timeZone: "UTC" });
  return a.map((o, i) => {
    const c = n.format(o);
    return {
      text: c.charAt(0).toUpperCase() + c.substring(1),
      value: i
    };
  });
}, Hr = (e) => [12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11][e], _e = (e) => {
  const t = v(e);
  return t != null && t.$el ? t == null ? void 0 : t.$el : t;
}, Vr = (e) => Object.assign({ type: "dot" }, e), _a = (e) => Array.isArray(e) ? !!e[0] && !!e[1] : !1, en = {
  prop: (e) => `"${e}" prop must be enabled!`,
  dateArr: (e) => `You need to use array as "model-value" binding in order to support "${e}"`
}, Ce = (e) => e, da = (e) => e === 0 ? e : !e || isNaN(+e) ? null : +e, ca = (e) => e === null, Lr = (e) => {
  if (e)
    return [...e.querySelectorAll("input, button, select, textarea, a[href]")][0];
}, Ur = (e) => {
  const t = [], r = (a) => a.filter((n) => n);
  for (let a = 0; a < e.length; a += 3) {
    const n = [e[a], e[a + 1], e[a + 2]];
    t.push(r(n));
  }
  return t;
}, Ft = (e, t, r) => {
  const a = r ?? r === 0, n = t ?? t === 0;
  if (!a && !n)
    return !1;
  const o = +r, i = +t;
  return a && n ? +e > o || +e < i : a ? +e > o : n ? +e < i : !1;
}, Ct = (e, t) => Ur(e).map((r) => r.map((a) => {
  const { active: n, disabled: o, isBetween: i, highlighted: c } = t(a);
  return {
    ...a,
    active: n,
    disabled: o,
    className: {
      dp__overlay_cell_active: n,
      dp__overlay_cell: !n,
      dp__overlay_cell_disabled: o,
      dp__overlay_cell_pad: !0,
      dp__overlay_cell_active_disabled: o && n,
      dp__cell_in_between: i,
      "dp--highlighted": c
    }
  };
})), ft = (e, t, r = !1) => {
  e && t.allowStopPropagation && (r && e.stopImmediatePropagation(), e.stopPropagation());
}, zr = () => [
  "a[href]",
  "area[href]",
  "input:not([disabled]):not([type='hidden'])",
  "select:not([disabled])",
  "textarea:not([disabled])",
  "button:not([disabled])",
  "[tabindex]:not([tabindex='-1'])",
  "[data-datepicker-instance]"
].join(", ");
function Wr(e, t) {
  let r = [...document.querySelectorAll(zr())];
  r = r.filter((n) => !e.contains(n) || n.hasAttribute("data-datepicker-instance"));
  const a = r.indexOf(e);
  if (a >= 0 && (t ? a - 1 >= 0 : a + 1 <= r.length))
    return r[a + (t ? -1 : 1)];
}
const jr = (e, t) => {
  let r;
  return function(...a) {
    clearTimeout(r), r = setTimeout(() => {
      e(...a);
    }, t);
  };
}, fa = (e, t, r, a, n) => {
  const o = Tn(e, t.slice(0, e.length), /* @__PURE__ */ new Date());
  return Xt(o) && tr(o) ? a || n ? o : Te(o, {
    hours: +r.hours,
    minutes: +(r == null ? void 0 : r.minutes),
    seconds: +(r == null ? void 0 : r.seconds),
    milliseconds: 0
  }) : null;
}, Kr = (e, t, r, a, n) => {
  const o = Array.isArray(r) ? r[0] : r;
  if (typeof t == "string")
    return fa(e, t, o, a, n);
  if (Array.isArray(t)) {
    let i = null;
    for (const c of t)
      if (i = fa(e, c, o, a, n), i)
        break;
    return i;
  }
  return typeof t == "function" ? t(e) : null;
}, B = (e) => e ? new Date(e) : /* @__PURE__ */ new Date(), Gr = (e, t, r) => {
  if (t) {
    const n = (e.getMonth() + 1).toString().padStart(2, "0"), o = e.getDate().toString().padStart(2, "0"), i = e.getHours().toString().padStart(2, "0"), c = e.getMinutes().toString().padStart(2, "0"), p = r ? e.getSeconds().toString().padStart(2, "0") : "00";
    return `${e.getFullYear()}-${n}-${o}T${i}:${c}:${p}.000Z`;
  }
  const a = Date.UTC(
    e.getUTCFullYear(),
    e.getUTCMonth(),
    e.getUTCDate(),
    e.getUTCHours(),
    e.getUTCMinutes(),
    e.getUTCSeconds()
  );
  return new Date(a).toISOString();
}, je = (e) => {
  let t = B(JSON.parse(JSON.stringify(e)));
  return t = pa(t, 0), t = ba(t, 0), t = In(t, 0), t = Bn(t, 0), t;
}, vt = (e, t, r, a) => {
  let n = e ? B(e) : B();
  return (t || t === 0) && (n = pa(n, +t)), (r || r === 0) && (n = ba(n, +r)), (a || a === 0) && (n = In(n, +a)), Bn(n, 0);
}, Ye = (e, t) => !e || !t ? !1 : It(je(e), je(t)), ke = (e, t) => !e || !t ? !1 : St(je(e), je(t)), Ee = (e, t) => !e || !t ? !1 : Bt(je(e), je(t)), tn = (e, t, r) => e != null && e[0] && (e != null && e[1]) ? Ee(r, e[0]) && Ye(r, e[1]) : e != null && e[0] && t ? Ee(r, e[0]) && Ye(r, t) || Ye(r, e[0]) && Ee(r, t) : !1, Qe = (e) => {
  const t = Te(new Date(e), { date: 1 });
  return je(t);
}, yn = (e, t, r) => t && (r || r === 0) ? Object.fromEntries(
  ["hours", "minutes", "seconds"].map((a) => a === t ? [a, r] : [a, isNaN(+e[a]) ? void 0 : +e[a]])
) : {
  hours: isNaN(+e.hours) ? void 0 : +e.hours,
  minutes: isNaN(+e.minutes) ? void 0 : +e.minutes,
  seconds: isNaN(+e.seconds) ? void 0 : +e.seconds
}, kt = (e) => ({
  hours: Je(e),
  minutes: at(e),
  seconds: Pt(e)
}), Ra = (e, t) => {
  if (t) {
    const r = ve(B(t));
    if (r > e)
      return 12;
    if (r === e)
      return pe(B(t));
  }
}, Oa = (e, t) => {
  if (t) {
    const r = ve(B(t));
    return r < e ? -1 : r === e ? pe(B(t)) : void 0;
  }
}, _t = (e) => {
  if (e)
    return ve(B(e));
}, xe = (e, t) => t ? Ir(e, t) : e, Ya = (e, t) => t ? Br(e, t) : e, qr = (e) => e instanceof Date ? e : xa(e), Na = (e, t) => {
  const r = Ee(e, t) ? t : e, a = Ee(t, e) ? t : e;
  return ka({ start: r, end: a });
}, Zr = (e) => {
  const t = bt(e, 1);
  return { month: pe(t), year: ve(t) };
}, Jt = (e, t, r) => {
  const a = wa(xe(e, t), { weekStartsOn: +r }), n = er(xe(e, t), { weekStartsOn: +r });
  return [a, n];
}, Ia = (e, t) => {
  const r = {
    hours: Je(B()),
    minutes: at(B()),
    seconds: t ? Pt(B()) : 0
  };
  return Object.assign(r, e);
}, dt = (e, t, r) => [Te(B(e), { date: 1 }), Te(B(), { month: t, year: r, date: 1 })], st = (e, t, r) => {
  let a = e ? B(e) : B();
  return (t || t === 0) && (a = Ja(a, t)), r && (a = nt(a, r)), a;
}, Ba = (e, t, r, a, n) => {
  if (!a || n && !t || !n && !r)
    return !1;
  const o = n ? bt(e, 1) : Et(e, 1), i = [pe(o), ve(o)];
  return n ? !Xr(...i, t) : !Qr(...i, r);
}, Qr = (e, t, r) => Ye(...dt(r, e, t)) || ke(...dt(r, e, t)), Xr = (e, t, r) => Ee(...dt(r, e, t)) || ke(...dt(r, e, t)), Ea = (e, t, r, a, n, o, i) => {
  if (typeof t == "function" && !i)
    return t(e);
  const c = r ? { locale: r } : void 0;
  return Array.isArray(e) ? `${ct(e[0], o, c)}${n && !e[1] ? "" : a}${e[1] ? ct(e[1], o, c) : ""}` : ct(e, o, c);
}, Tt = (e) => {
  if (e)
    return null;
  throw new Error(en.prop("partial-range"));
}, Gt = (e, t) => {
  if (t)
    return e();
  throw new Error(en.prop("range"));
}, On = (e) => Array.isArray(e) ? Xt(e[0]) && (e[1] ? Xt(e[1]) : !0) : e ? Xt(e) : !1, Jr = (e, t) => Te(t ?? B(), {
  hours: +e.hours || 0,
  minutes: +e.minutes || 0,
  seconds: +e.seconds || 0
}), hn = (e, t, r, a) => {
  if (!e)
    return !0;
  if (a) {
    const n = r === "max" ? It(e, t) : Bt(e, t), o = { seconds: 0, milliseconds: 0 };
    return n || St(Te(e, o), Te(t, o));
  }
  return r === "max" ? e.getTime() <= t.getTime() : e.getTime() >= t.getTime();
}, pn = (e, t, r) => e ? Jr(e, t) : B(r ?? t), va = (e, t, r, a, n) => {
  if (Array.isArray(a)) {
    const i = pn(e, a[0], t), c = pn(e, a[1], t);
    return hn(a[0], i, r, !!t) && hn(a[1], c, r, !!t) && n;
  }
  const o = pn(e, a, t);
  return hn(a, o, r, !!t) && n;
}, bn = (e) => Te(B(), kt(e)), xr = (e, t) => Array.isArray(e) ? e.map((r) => B(r)).filter((r) => ve(B(r)) === t).map((r) => pe(r)) : [], Fa = (e, t, r) => typeof e == "function" ? e({ month: t, year: r }) : !!e.months.find((a) => a.month === t && a.year === r), Kn = (e, t) => typeof e == "function" ? e(t) : e.years.includes(t), Yt = Ht({
  menuFocused: !1,
  shiftKeyInMenu: !1
}), Ha = () => {
  const e = (a) => {
    Yt.menuFocused = a;
  }, t = (a) => {
    Yt.shiftKeyInMenu !== a && (Yt.shiftKeyInMenu = a);
  };
  return {
    control: j(() => ({ shiftKeyInMenu: Yt.shiftKeyInMenu, menuFocused: Yt.menuFocused })),
    setMenuFocused: e,
    setShiftKey: t
  };
}, $e = Ht({
  monthYear: [],
  calendar: [],
  time: [],
  actionRow: [],
  selectionGrid: [],
  timePicker: {
    0: [],
    1: []
  },
  monthPicker: []
}), kn = ee(null), qt = ee(!1), wn = ee(!1), Dn = ee(!1), Mn = ee(!1), Fe = ee(0), Oe = ee(0), yt = () => {
  const e = j(() => qt.value ? [...$e.selectionGrid, $e.actionRow].filter((g) => g.length) : wn.value ? [
    ...$e.timePicker[0],
    ...$e.timePicker[1],
    Mn.value ? [] : [kn.value],
    $e.actionRow
  ].filter((g) => g.length) : Dn.value ? [...$e.monthPicker, $e.actionRow] : [$e.monthYear, ...$e.calendar, $e.time, $e.actionRow].filter((g) => g.length)), t = (g) => {
    Fe.value = g ? Fe.value + 1 : Fe.value - 1;
    let S = null;
    e.value[Oe.value] && (S = e.value[Oe.value][Fe.value]), S || (Fe.value = g ? Fe.value - 1 : Fe.value + 1);
  }, r = (g) => {
    if (Oe.value === 0 && !g || Oe.value === e.value.length && g)
      return;
    Oe.value = g ? Oe.value + 1 : Oe.value - 1, e.value[Oe.value] ? e.value[Oe.value] && !e.value[Oe.value][Fe.value] && Fe.value !== 0 && (Fe.value = e.value[Oe.value].length - 1) : Oe.value = g ? Oe.value - 1 : Oe.value + 1;
  }, a = (g) => {
    let S = null;
    e.value[Oe.value] && (S = e.value[Oe.value][Fe.value]), S ? S.focus({ preventScroll: !qt.value }) : Fe.value = g ? Fe.value - 1 : Fe.value + 1;
  }, n = () => {
    t(!0), a(!0);
  }, o = () => {
    t(!1), a(!1);
  }, i = () => {
    r(!1), a(!0);
  }, c = () => {
    r(!0), a(!0);
  }, p = (g, S) => {
    $e[S] = g;
  }, M = (g, S) => {
    $e[S] = g;
  }, $ = () => {
    Fe.value = 0, Oe.value = 0;
  };
  return {
    buildMatrix: p,
    buildMultiLevelMatrix: M,
    setTimePickerBackRef: (g) => {
      kn.value = g;
    },
    setSelectionGrid: (g) => {
      qt.value = g, $(), g || ($e.selectionGrid = []);
    },
    setTimePicker: (g, S = !1) => {
      wn.value = g, Mn.value = S, $(), g || ($e.timePicker[0] = [], $e.timePicker[1] = []);
    },
    setTimePickerElements: (g, S = 0) => {
      $e.timePicker[S] = g;
    },
    arrowRight: n,
    arrowLeft: o,
    arrowUp: i,
    arrowDown: c,
    clearArrowNav: () => {
      $e.monthYear = [], $e.calendar = [], $e.time = [], $e.actionRow = [], $e.selectionGrid = [], $e.timePicker[0] = [], $e.timePicker[1] = [], qt.value = !1, wn.value = !1, Mn.value = !1, Dn.value = !1, $(), kn.value = null;
    },
    setMonthPicker: (g) => {
      Dn.value = g, $();
    },
    refSets: $e
    // exposed for testing
  };
}, ma = (e) => ({
  menuAppearTop: "dp-menu-appear-top",
  menuAppearBottom: "dp-menu-appear-bottom",
  open: "dp-slide-down",
  close: "dp-slide-up",
  next: "calendar-next",
  previous: "calendar-prev",
  vNext: "dp-slide-up",
  vPrevious: "dp-slide-down",
  ...e ?? {}
}), el = (e) => ({
  toggleOverlay: "Toggle overlay",
  menu: "Datepicker menu",
  input: "Datepicker input",
  calendarWrap: "Calendar wrapper",
  calendarDays: "Calendar days",
  openTimePicker: "Open time picker",
  closeTimePicker: "Close time Picker",
  incrementValue: (t) => `Increment ${t}`,
  decrementValue: (t) => `Decrement ${t}`,
  openTpOverlay: (t) => `Open ${t} overlay`,
  amPmButton: "Switch AM/PM mode",
  openYearsOverlay: "Open years overlay",
  openMonthsOverlay: "Open months overlay",
  nextMonth: "Next month",
  prevMonth: "Previous month",
  nextYear: "Next year",
  prevYear: "Previous year",
  day: () => "",
  ...e ?? {}
}), ga = (e) => e ? typeof e == "boolean" ? e ? 2 : 0 : +e >= 2 ? +e : 2 : 0, tl = (e) => {
  const t = typeof e == "object" && e, r = {
    static: !0,
    solo: !1
  };
  if (!e)
    return { ...r, count: ga(!1) };
  const a = t ? e : {}, n = t ? a.count ?? !0 : e, o = ga(n);
  return Object.assign(r, a, { count: o });
}, nl = (e, t, r) => e || (typeof r == "string" ? r : t), al = (e) => typeof e == "boolean" ? e ? ma({}) : !1 : ma(e), rl = (e) => {
  const t = {
    enterSubmit: !0,
    tabSubmit: !0,
    openMenu: !0,
    selectOnFocus: !1,
    rangeSeparator: " - "
  };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : { ...t, enabled: e };
}, ll = (e) => ({
  months: [],
  years: [],
  times: { hours: [], minutes: [], seconds: [] },
  ...e ?? {}
}), ol = (e) => ({
  showSelect: !0,
  showCancel: !0,
  showNow: !1,
  showPreview: !0,
  ...e ?? {}
}), sl = (e) => {
  const t = { input: !1 };
  return typeof e == "object" ? { ...t, ...e ?? {}, enabled: !0 } : {
    enabled: e,
    ...t
  };
}, il = (e) => ({ ...{
  allowStopPropagation: !0,
  closeOnScroll: !1,
  modeHeight: 255,
  allowPreventDefault: !1,
  closeOnClearValue: !0,
  closeOnAutoApply: !0,
  noSwipe: !1,
  keepActionRow: !1,
  onClickOutside: void 0,
  tabOutClosesMenu: !0
}, ...e ?? {} }), ul = (e, t, r) => {
  const a = {
    dates: Array.isArray(e) ? e.map((n) => B(n)) : [],
    years: [],
    months: [],
    quarters: [],
    weeks: [],
    weekdays: t,
    options: { highlightDisabled: r }
  };
  return typeof e == "function" ? e : { ...a, ...e ?? {} };
}, dl = (e) => typeof e == "object" ? {
  type: e.type,
  hideOnOffsetDates: e.hideOnOffsetDates ?? !1
} : {
  type: e,
  hideOnOffsetDates: !1
}, Pe = (e) => {
  const t = () => {
    const g = e.enableSeconds ? ":ss" : "";
    return e.is24 ? `HH:mm${g}` : `hh:mm${g} aa`;
  }, r = () => e.format ? e.format : e.monthPicker ? "MM/yyyy" : e.timePicker ? t() : e.weekPicker ? "MM/dd/yyyy" : e.yearPicker ? "yyyy" : e.quarterPicker ? "QQQ/yyyy" : e.enableTimePicker ? `MM/dd/yyyy, ${t()}` : "MM/dd/yyyy", a = (g) => Ia(g, e.enableSeconds), n = () => e.range ? e.startTime && Array.isArray(e.startTime) ? [a(e.startTime[0]), a(e.startTime[1])] : null : e.startTime && !Array.isArray(e.startTime) ? a(e.startTime) : null, o = j(() => tl(e.multiCalendars)), i = j(() => n()), c = j(() => el(e.ariaLabels)), p = j(() => ll(e.filters)), M = j(() => al(e.transitions)), $ = j(() => ol(e.actionRow)), C = j(
    () => nl(e.previewFormat, e.format, r())
  ), k = j(() => rl(e.textInput)), I = j(() => sl(e.inline)), R = j(() => il(e.config)), A = j(
    () => ul(e.highlight, e.highlightWeekDays, e.highlightDisabledDays)
  ), x = j(() => dl(e.weekNumbers));
  return {
    defaultedTransitions: M,
    defaultedMultiCalendars: o,
    defaultedStartTime: i,
    defaultedAriaLabels: c,
    defaultedFilters: p,
    defaultedActionRow: $,
    defaultedPreviewFormat: C,
    defaultedTextInput: k,
    defaultedInline: I,
    defaultedConfig: R,
    defaultedHighlight: A,
    defaultedWeekNumbers: x,
    getDefaultPattern: r,
    getDefaultStartTime: n
  };
}, cl = (e, t, r) => {
  const a = ee(), { defaultedTextInput: n, getDefaultPattern: o } = Pe(t), i = ee(""), c = xt(t, "format");
  mt(a, () => {
    e("internal-model-change", a.value);
  }), mt(c, () => {
    ne();
  });
  const p = (s) => Ya(s, t.timezone), M = (s) => xe(s, t.timezone), $ = (s, X, de = !1) => Ea(
    s,
    t.format,
    t.formatLocale,
    n.value.rangeSeparator,
    t.modelAuto,
    X ?? o(),
    de
  ), C = (s) => s ? t.modelType ? d(s) : {
    hours: Je(s),
    minutes: at(s),
    seconds: t.enableSeconds ? Pt(s) : 0
  } : null, k = (s) => t.modelType ? d(s) : { month: pe(s), year: ve(s) }, I = (s) => Array.isArray(s) ? t.multiDates ? s.map((X) => R(X, nt(B(), X))) : Gt(
    () => [
      nt(B(), s[0]),
      s[1] ? nt(B(), s[1]) : Tt(t.partialRange)
    ],
    t.range
  ) : nt(B(), +s), R = (s, X) => (typeof s == "string" || typeof s == "number") && t.modelType ? _(s) : X, A = (s) => Array.isArray(s) ? [
    R(
      s[0],
      vt(null, +s[0].hours, +s[0].minutes, s[0].seconds)
    ),
    R(
      s[1],
      vt(null, +s[1].hours, +s[1].minutes, s[1].seconds)
    )
  ] : R(s, vt(null, s.hours, s.minutes, s.seconds)), x = (s) => Array.isArray(s) ? t.multiDates ? s.map((X) => R(X, st(null, +X.month, +X.year))) : Gt(
    () => [
      R(s[0], st(null, +s[0].month, +s[0].year)),
      R(
        s[1],
        s[1] ? st(null, +s[1].month, +s[1].year) : Tt(t.partialRange)
      )
    ],
    t.range
  ) : R(s, st(null, +s.month, +s.year)), g = (s) => {
    if (Array.isArray(s))
      return s.map((X) => _(X));
    throw new Error(en.dateArr("multi-dates"));
  }, S = (s) => {
    if (Array.isArray(s))
      return [B(s[0]), B(s[1])];
    throw new Error(en.dateArr("week-picker"));
  }, F = (s) => t.modelAuto ? Array.isArray(s) ? [_(s[0]), _(s[1])] : t.autoApply ? [_(s)] : [_(s), null] : Array.isArray(s) ? Gt(
    () => [
      _(s[0]),
      s[1] ? _(s[1]) : Tt(t.partialRange)
    ],
    t.range
  ) : _(s), b = () => {
    Array.isArray(a.value) && t.range && a.value.length === 1 && a.value.push(Tt(t.partialRange));
  }, P = () => {
    const s = a.value;
    return [
      d(s[0]),
      s[1] ? d(s[1]) : Tt(t.partialRange)
    ];
  }, Q = () => a.value[1] ? P() : d(Ce(a.value[0])), ae = () => (a.value || []).map((s) => d(s)), L = () => (b(), t.modelAuto ? Q() : t.multiDates ? ae() : Array.isArray(a.value) ? Gt(() => P(), t.range) : d(Ce(a.value))), ie = (s) => !s || Array.isArray(s) && !s.length ? null : t.timePicker ? A(Ce(s)) : t.monthPicker ? x(Ce(s)) : t.yearPicker ? I(Ce(s)) : t.multiDates ? g(Ce(s)) : t.weekPicker ? S(Ce(s)) : F(Ce(s)), E = (s) => {
    const X = ie(s);
    On(Ce(X)) ? (a.value = Ce(X), ne()) : (a.value = null, i.value = "");
  }, f = () => {
    const s = (X) => ct(X, n.value.format);
    return `${s(a.value[0])} ${n.value.rangeSeparator} ${a.value[1] ? s(a.value[1]) : ""}`;
  }, D = () => r.value && a.value ? Array.isArray(a.value) ? f() : ct(a.value, n.value.format) : $(a.value), H = () => a.value ? t.multiDates ? a.value.map((s) => $(s)).join("; ") : n.value.enabled && typeof n.value.format == "string" ? D() : $(a.value) : "", ne = () => {
    !t.format || typeof t.format == "string" || n.value.enabled && typeof n.value.format == "string" ? i.value = H() : i.value = t.format(a.value);
  }, _ = (s) => {
    if (t.utc) {
      const X = new Date(s);
      return t.utc === "preserve" ? new Date(X.getTime() + X.getTimezoneOffset() * 6e4) : X;
    }
    return t.modelType ? t.modelType === "date" || t.modelType === "timestamp" ? M(new Date(s)) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? Tn(s, o(), /* @__PURE__ */ new Date()) : M(Tn(s, t.modelType, /* @__PURE__ */ new Date())) : M(new Date(s));
  }, d = (s) => s ? t.utc ? Gr(s, t.utc === "preserve", t.enableSeconds) : t.modelType ? t.modelType === "timestamp" ? +p(s) : t.modelType === "format" && (typeof t.format == "string" || !t.format) ? $(p(s)) : $(p(s), t.modelType, !0) : p(s) : "", O = (s, X = !1) => {
    if (e("update:model-value", s), t.emitTimezone && X) {
      const de = Array.isArray(s) ? s.map((T) => xe(Ce(T)), t.emitTimezone) : xe(Ce(s), t.emitTimezone);
      e("update:model-timezone-value", de);
    }
  }, G = (s) => Array.isArray(a.value) ? t.multiDates ? a.value.map((X) => s(X)) : [
    s(a.value[0]),
    a.value[1] ? s(a.value[1]) : Tt(t.partialRange)
  ] : s(Ce(a.value)), y = (s) => O(Ce(G(s)));
  return {
    inputValue: i,
    internalModelValue: a,
    checkBeforeEmit: () => a.value ? t.range ? t.partialRange ? a.value.length >= 1 : a.value.length === 2 : !!a.value : !1,
    parseExternalModelValue: E,
    formatInputValue: ne,
    emitModelValue: () => (ne(), t.monthPicker ? y(k) : t.timePicker ? y(C) : t.yearPicker ? y(ve) : t.weekPicker ? O(
      a.value.map((s) => d(s)),
      !0
    ) : O(L(), !0))
  };
}, fl = (e, t) => {
  const { defaultedFilters: r } = Pe(e), { validateMonthYearInRange: a } = Mt(e), n = (M, $) => {
    let C = M;
    return r.value.months.includes(pe(C)) ? (C = $ ? bt(M, 1) : Et(M, 1), n(C, $)) : C;
  }, o = (M, $) => {
    let C = M;
    return r.value.years.includes(ve(C)) ? (C = $ ? Da(M, 1) : Ma(M, 1), o(C, $)) : C;
  }, i = (M, $ = !1) => {
    const C = Te(/* @__PURE__ */ new Date(), { month: e.month, year: e.year });
    let k = M ? bt(C, 1) : Et(C, 1);
    e.disableYearSelect && (k = nt(k, e.year));
    let I = pe(k), R = ve(k);
    r.value.months.includes(I) && (k = n(k, M), I = pe(k), R = ve(k)), r.value.years.includes(R) && (k = o(k, M), R = ve(k)), a(I, R, M, e.preventMinMaxNavigation) && c(I, R, $);
  }, c = (M, $, C) => {
    t("update-month-year", { month: M, year: $, fromNav: C });
  }, p = j(() => (M) => Ba(
    Te(/* @__PURE__ */ new Date(), { month: e.month, year: e.year }),
    e.maxDate,
    e.minDate,
    e.preventMinMaxNavigation,
    M
  ));
  return { handleMonthYearChange: i, isDisabled: p, updateMonthYear: c };
};
var At = /* @__PURE__ */ ((e) => (e.center = "center", e.left = "left", e.right = "right", e))(At || {}), Ze = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e))(Ze || {}), ht = /* @__PURE__ */ ((e) => (e.top = "top", e.bottom = "bottom", e))(ht || {}), wt = /* @__PURE__ */ ((e) => (e.header = "header", e.calendar = "calendar", e.timePicker = "timePicker", e))(wt || {}), tt = /* @__PURE__ */ ((e) => (e.month = "month", e.year = "year", e.calendar = "calendar", e.time = "time", e.minutes = "minutes", e.hours = "hours", e.seconds = "seconds", e))(tt || {});
const vl = ({
  menuRef: e,
  menuRefInner: t,
  inputRef: r,
  pickerWrapperRef: a,
  inline: n,
  emit: o,
  props: i,
  slots: c
}) => {
  const p = ee({}), M = ee(!1), $ = ee({
    top: "0",
    left: "0"
  }), C = ee(!1), k = xt(i, "teleportCenter");
  mt(k, () => {
    $.value = JSON.parse(JSON.stringify({})), b();
  });
  const I = (d) => {
    if (i.teleport) {
      const O = d.getBoundingClientRect();
      return {
        left: O.left + window.scrollX,
        top: O.top + window.scrollY
      };
    }
    return { top: 0, left: 0 };
  }, R = (d, O) => {
    $.value.left = `${d + O - p.value.width}px`;
  }, A = (d) => {
    $.value.left = `${d}px`;
  }, x = (d, O) => {
    i.position === At.left && A(d), i.position === At.right && R(d, O), i.position === At.center && ($.value.left = `${d + O / 2 - p.value.width / 2}px`);
  }, g = (d) => {
    const { width: O, height: G } = d.getBoundingClientRect(), { top: y, left: l } = i.altPosition ? i.altPosition(d) : I(d);
    return { top: +y, left: +l, width: O, height: G };
  }, S = () => {
    $.value.left = "50%", $.value.top = "50%", $.value.transform = "translate(-50%, -50%)", $.value.position = "fixed", delete $.value.opacity;
  }, F = () => {
    const d = _e(r), { top: O, left: G, transform: y } = i.altPosition(d);
    $.value = { top: `${O}px`, left: `${G}px`, transform: y ?? "" };
  }, b = (d = !0) => {
    var O;
    if (!n.value.enabled) {
      if (k.value)
        return S();
      if (i.altPosition !== null)
        return F();
      if (d) {
        const G = i.teleport ? (O = t.value) == null ? void 0 : O.$el : e.value;
        G && (p.value = G.getBoundingClientRect()), o("recalculate-position");
      }
      return f();
    }
  }, P = ({ inputEl: d, left: O, width: G }) => {
    window.screen.width > 768 && !M.value && x(O, G), L(d);
  }, Q = (d) => {
    const { top: O, left: G, height: y, width: l } = g(d);
    $.value.top = `${y + O + +i.offset}px`, C.value = !1, M.value || ($.value.left = `${G + l / 2 - p.value.width / 2}px`), P({ inputEl: d, left: G, width: l });
  }, ae = (d) => {
    const { top: O, left: G, width: y } = g(d);
    $.value.top = `${O - +i.offset - p.value.height}px`, C.value = !0, P({ inputEl: d, left: G, width: y });
  }, L = (d) => {
    if (i.autoPosition) {
      const { left: O, width: G } = g(d), { left: y, right: l } = p.value;
      if (!M.value) {
        if (Math.abs(y) !== Math.abs(l)) {
          if (y <= 0)
            return M.value = !0, A(O);
          if (l >= document.documentElement.clientWidth)
            return M.value = !0, R(O, G);
        }
        return x(O, G);
      }
    }
  }, ie = () => {
    const d = _e(r);
    if (d) {
      const { height: O } = p.value, { top: G, height: y } = d.getBoundingClientRect(), h = window.innerHeight - G - y, s = G;
      return O <= h ? ht.bottom : O > h && O <= s ? ht.top : h >= s ? ht.bottom : ht.top;
    }
    return ht.bottom;
  }, E = (d) => ie() === ht.bottom ? Q(d) : ae(d), f = () => {
    const d = _e(r);
    if (d)
      return i.autoPosition ? E(d) : Q(d);
  }, D = function(d) {
    if (d) {
      const O = d.scrollHeight > d.clientHeight, y = window.getComputedStyle(d).overflowY.indexOf("hidden") !== -1;
      return O && !y;
    }
    return !0;
  }, H = function(d) {
    return !d || d === document.body || d.nodeType === Node.DOCUMENT_FRAGMENT_NODE ? window : D(d) ? d : H(d.parentNode);
  }, ne = (d) => {
    if (d)
      switch (i.position) {
        case At.left:
          return { left: 0, transform: "translateX(0)" };
        case At.right:
          return { left: `${d.width}px`, transform: "translateX(-100%)" };
        default:
          return { left: `${d.width / 2}px`, transform: "translateX(-50%)" };
      }
    return {};
  };
  return {
    openOnTop: C,
    menuStyle: $,
    xCorrect: M,
    setMenuPosition: b,
    getScrollableParent: H,
    shadowRender: (d, O) => {
      var X, de, T;
      const G = document.createElement("div"), y = (X = _e(r)) == null ? void 0 : X.getBoundingClientRect();
      G.setAttribute("id", "dp--temp-container");
      const l = (de = a.value) != null && de.clientWidth ? a.value : document.body;
      l.append(G);
      const h = ne(y), s = Ga(
        d,
        {
          ...O,
          shadow: !0,
          style: { opacity: 0, position: "absolute", ...h }
        },
        Object.fromEntries(
          Object.keys(c).filter((u) => ["right-sidebar", "left-sidebar"].includes(u)).map((u) => [u, c[u]])
        )
      );
      Qn(s, G), p.value = (T = s.el) == null ? void 0 : T.getBoundingClientRect(), Qn(null, G), l.removeChild(G);
    }
  };
}, ut = [
  { name: "clock-icon", use: ["time", "calendar", "shared"] },
  { name: "arrow-left", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-right", use: ["month-year", "calendar", "shared", "year-mode"] },
  { name: "arrow-up", use: ["time", "calendar", "month-year", "shared"] },
  { name: "arrow-down", use: ["time", "calendar", "month-year", "shared"] },
  { name: "calendar-icon", use: ["month-year", "time", "calendar", "shared", "year-mode"] },
  { name: "day", use: ["calendar", "shared"] },
  { name: "month-overlay-value", use: ["calendar", "month-year", "shared"] },
  { name: "year-overlay-value", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "year-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay", use: ["month-year", "shared"] },
  { name: "month-overlay-header", use: ["month-year", "shared"] },
  { name: "year-overlay-header", use: ["month-year", "shared"] },
  { name: "hours-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "minutes-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "seconds-overlay-value", use: ["calendar", "time", "shared"] },
  { name: "hours", use: ["calendar", "time", "shared"] },
  { name: "minutes", use: ["calendar", "time", "shared"] },
  { name: "month", use: ["calendar", "month-year", "shared"] },
  { name: "year", use: ["calendar", "month-year", "shared", "year-mode"] },
  { name: "action-buttons", use: ["action"] },
  { name: "action-preview", use: ["action"] },
  { name: "calendar-header", use: ["calendar", "shared"] },
  { name: "marker-tooltip", use: ["calendar", "shared"] },
  { name: "action-extra", use: ["menu"] },
  { name: "time-picker-overlay", use: ["calendar", "time", "shared"] },
  { name: "am-pm-button", use: ["calendar", "time", "shared"] },
  { name: "left-sidebar", use: ["menu"] },
  { name: "right-sidebar", use: ["menu"] },
  { name: "month-year", use: ["month-year", "shared"] },
  { name: "time-picker", use: ["menu", "shared"] },
  { name: "action-row", use: ["action"] },
  { name: "marker", use: ["calendar", "shared"] },
  { name: "quarter", use: ["shared"] }
], ml = [{ name: "trigger" }, { name: "input-icon" }, { name: "clear-icon" }, { name: "dp-input" }], gl = {
  all: () => ut,
  monthYear: () => ut.filter((e) => e.use.includes("month-year")),
  input: () => ml,
  timePicker: () => ut.filter((e) => e.use.includes("time")),
  action: () => ut.filter((e) => e.use.includes("action")),
  calendar: () => ut.filter((e) => e.use.includes("calendar")),
  menu: () => ut.filter((e) => e.use.includes("menu")),
  shared: () => ut.filter((e) => e.use.includes("shared")),
  yearMode: () => ut.filter((e) => e.use.includes("year-mode"))
}, Ke = (e, t, r) => {
  const a = [];
  return gl[t]().forEach((n) => {
    e[n.name] && a.push(n.name);
  }), r != null && r.length && r.forEach((n) => {
    n.slot && a.push(n.slot);
  }), a;
}, Lt = (e) => {
  const t = j(() => (a) => e.value ? a ? e.value.open : e.value.close : ""), r = j(() => (a) => e.value ? a ? e.value.menuAppearTop : e.value.menuAppearBottom : "");
  return { transitionName: t, showTransition: !!e.value, menuTransition: r };
}, Ut = (e, t) => {
  const r = B(xe(/* @__PURE__ */ new Date(), e.timezone)), a = ee([{ month: pe(r), year: ve(r) }]), n = Ht({
    hours: e.range ? [Je(r), Je(r)] : Je(r),
    minutes: e.range ? [at(r), at(r)] : at(r),
    seconds: e.range ? [0, 0] : 0
  }), o = j({
    get: () => e.internalModelValue,
    set: (p) => {
      !e.readonly && !e.disabled && t("update:internal-model-value", p);
    }
  }), i = j(
    () => (p) => a.value[p] ? a.value[p].month : 0
  ), c = j(
    () => (p) => a.value[p] ? a.value[p].year : 0
  );
  return {
    calendars: a,
    time: n,
    modelValue: o,
    month: i,
    year: c
  };
}, yl = (e, t) => {
  const { defaultedMultiCalendars: r, defaultedHighlight: a } = Pe(t), { isDisabled: n, matchDate: o } = Mt(t), i = ee(null), c = ee(B(xe(/* @__PURE__ */ new Date(), t.timezone))), p = (l) => {
    !l.current && t.hideOffsetDates || (i.value = l.value);
  }, M = () => {
    i.value = null;
  }, $ = (l) => Array.isArray(e.value) && t.range && e.value[0] && i.value ? l ? Ee(i.value, e.value[0]) : Ye(i.value, e.value[0]) : !0, C = (l, h) => {
    const s = () => e.value ? h ? e.value[0] || null : e.value[1] : null, X = e.value && Array.isArray(e.value) ? s() : null;
    return ke(B(l.value), X);
  }, k = (l) => {
    const h = Array.isArray(e.value) ? e.value[0] : null;
    return l ? !Ye(i.value ?? null, h) : !0;
  }, I = (l, h = !0) => (t.range || t.weekPicker) && Array.isArray(e.value) && e.value.length === 2 ? t.hideOffsetDates && !l.current ? !1 : ke(B(l.value), e.value[h ? 0 : 1]) : t.range ? C(l, h) && k(h) || ke(l.value, Array.isArray(e.value) ? e.value[0] : null) && $(h) : !1, R = (l, h, s) => Array.isArray(e.value) && e.value[0] && e.value.length === 1 ? l ? !1 : s ? Ee(e.value[0], h.value) : Ye(e.value[0], h.value) : !1, A = (l) => !e.value || t.hideOffsetDates && !l.current ? !1 : t.range ? t.modelAuto && Array.isArray(e.value) ? ke(l.value, e.value[0] ? e.value[0] : c.value) : !1 : t.multiDates && Array.isArray(e.value) ? e.value.some((h) => ke(h, l.value)) : ke(l.value, e.value ? e.value : c.value), x = (l) => {
    if (t.autoRange || t.weekPicker) {
      if (i.value) {
        if (t.hideOffsetDates && !l.current)
          return !1;
        const h = pt(i.value, +t.autoRange), s = Jt(B(i.value), t.timezone, t.weekStart);
        return t.weekPicker ? ke(s[1], B(l.value)) : ke(h, B(l.value));
      }
      return !1;
    }
    return !1;
  }, g = (l) => {
    if (t.autoRange || t.weekPicker) {
      if (i.value) {
        const h = pt(i.value, +t.autoRange);
        if (t.hideOffsetDates && !l.current)
          return !1;
        const s = Jt(B(i.value), t.timezone, t.weekStart);
        return t.weekPicker ? Ee(l.value, s[0]) && Ye(l.value, s[1]) : Ee(l.value, i.value) && Ye(l.value, h);
      }
      return !1;
    }
    return !1;
  }, S = (l) => {
    if (t.autoRange || t.weekPicker) {
      if (i.value) {
        if (t.hideOffsetDates && !l.current)
          return !1;
        const h = Jt(B(i.value), t.timezone, t.weekStart);
        return t.weekPicker ? ke(h[0], l.value) : ke(i.value, l.value);
      }
      return !1;
    }
    return !1;
  }, F = (l) => tn(e.value, i.value, l.value), b = () => t.modelAuto && Array.isArray(t.internalModelValue) ? !!t.internalModelValue[0] : !1, P = () => t.modelAuto ? _a(t.internalModelValue) : !0, Q = (l) => {
    if (Array.isArray(e.value) && e.value.length || t.weekPicker)
      return !1;
    const h = t.range ? !I(l) && !I(l, !1) : !0;
    return !n(l.value) && !A(l) && !(!l.current && t.hideOffsetDates) && h;
  }, ae = (l) => t.range ? t.modelAuto ? b() && A(l) : !1 : A(l), L = (l) => {
    var h;
    return a.value ? typeof a.value == "function" ? a.value(l.value) : o(
      l.value,
      (h = t.arrMapValues) != null && h.highlightedDates ? t.arrMapValues.highlightedDates : a.value.dates
    ) : !1;
  }, ie = (l) => {
    const h = n(l.value);
    return h && (typeof a.value == "function" ? !a.value(l.value, h) : !a.value.options.highlightDisabled);
  }, E = (l) => {
    var h;
    return typeof a.value == "function" ? a.value(l.value) : (h = a.value.weekdays) == null ? void 0 : h.includes(l.value.getDay());
  }, f = (l) => (t.range || t.weekPicker) && (!(r.value.count > 0) || l.current) && P() && !(!l.current && t.hideOffsetDates) && !A(l) ? F(l) : !1, D = (l) => {
    const { isRangeStart: h, isRangeEnd: s } = _(l), X = t.range ? h || s : !1;
    return {
      dp__cell_offset: !l.current,
      dp__pointer: !t.disabled && !(!l.current && t.hideOffsetDates) && !n(l.value),
      dp__cell_disabled: n(l.value),
      dp__cell_highlight: !ie(l) && (L(l) || E(l)) && !ae(l) && !X && !S(l) && !(f(l) && t.weekPicker) && !s,
      dp__cell_highlight_active: !ie(l) && (L(l) || E(l)) && ae(l),
      dp__today: !t.noToday && ke(l.value, c.value) && l.current
    };
  }, H = (l) => ({
    dp__active_date: ae(l),
    dp__date_hover: Q(l)
  }), ne = (l) => ({
    ...d(l),
    ...O(l),
    dp__range_between_week: f(l) && t.weekPicker
  }), _ = (l) => {
    const h = r.value.count > 0 ? l.current && I(l) && P() : I(l) && P(), s = r.value.count > 0 ? l.current && I(l, !1) && P() : I(l, !1) && P();
    return { isRangeStart: h, isRangeEnd: s };
  }, d = (l) => {
    const { isRangeStart: h, isRangeEnd: s } = _(l);
    return {
      dp__range_start: h,
      dp__range_end: s,
      dp__range_between: f(l) && !t.weekPicker,
      dp__date_hover_start: R(Q(l), l, !0),
      dp__date_hover_end: R(Q(l), l, !1)
    };
  }, O = (l) => ({
    ...d(l),
    dp__cell_auto_range: g(l),
    dp__cell_auto_range_start: S(l),
    dp__cell_auto_range_end: x(l)
  }), G = (l) => t.range ? t.autoRange ? O(l) : t.modelAuto ? { ...H(l), ...d(l) } : d(l) : t.weekPicker ? ne(l) : H(l);
  return {
    setHoverDate: p,
    clearHoverDate: M,
    getDayClassData: (l) => t.hideOffsetDates && !l.current ? {} : {
      ...D(l),
      ...G(l),
      [t.dayClass ? t.dayClass(l.value) : ""]: !0,
      [t.calendarCellClassName]: !!t.calendarCellClassName
    }
  };
}, Mt = (e) => {
  const { defaultedFilters: t, defaultedHighlight: r } = Pe(e), a = () => {
    if (e.timezone)
      return e.timezone;
    if (e.utc)
      return "UTC";
  }, n = (f) => {
    const D = je(o(B(f))).toISOString(), [H] = D.split("T");
    return H;
  }, o = (f) => e.utc === "preserve" ? Ya(f, a()) : xe(f, a()), i = (f) => {
    var h;
    const D = e.maxDate ? Ee(f, o(B(e.maxDate))) : !1, H = e.minDate ? Ye(f, o(B(e.minDate))) : !1, ne = $(
      o(f),
      (h = e.arrMapValues) != null && h.disabledDates ? e.arrMapValues.disabledDates : e.disabledDates
    ), d = t.value.months.map((s) => +s).includes(pe(f)), O = e.disabledWeekDays.length ? e.disabledWeekDays.some((s) => +s === nr(f)) : !1, G = k(f), y = ve(f), l = y < +e.yearRange[0] || y > +e.yearRange[1];
    return !(D || H || ne || d || l || O || G);
  }, c = (f, D) => Ye(...dt(e.minDate, f, D)) || ke(...dt(e.minDate, f, D)), p = (f, D) => Ee(...dt(e.maxDate, f, D)) || ke(...dt(e.maxDate, f, D)), M = (f, D, H) => {
    let ne = !1;
    return e.maxDate && H && p(f, D) && (ne = !0), e.minDate && !H && c(f, D) && (ne = !0), ne;
  }, $ = (f, D) => f ? D instanceof Map ? !!D.get(n(f)) : Array.isArray(D) ? D.some((H) => ke(o(B(H)), f)) : D ? D(B(JSON.parse(JSON.stringify(f)))) : !1 : !0, C = (f, D, H, ne) => {
    let _ = !1;
    return ne ? e.minDate && e.maxDate ? _ = M(f, D, H) : (e.minDate && c(f, D) || e.maxDate && p(f, D)) && (_ = !0) : _ = !0, _;
  }, k = (f) => {
    var D, H, ne, _, d;
    return Array.isArray(e.allowedDates) && !((D = e.allowedDates) != null && D.length) ? !0 : (H = e.arrMapValues) != null && H.allowedDates ? !$(f, (ne = e.arrMapValues) == null ? void 0 : ne.allowedDates) : (_ = e.allowedDates) != null && _.length ? !((d = e.allowedDates) != null && d.some((O) => ke(o(B(O)), o(f)))) : !1;
  }, I = (f) => !i(f), R = (f) => e.noDisabledRange ? !ka({ start: f[0], end: f[1] }).some((H) => I(H)) : !0, A = (f, D, H = 0) => {
    if (Array.isArray(D) && D[H]) {
      const ne = ar(f, D[H]), _ = Na(D[H], f), d = _.length === 1 ? 0 : _.filter((G) => I(G)).length, O = Math.abs(ne) - d;
      if (e.minRange && e.maxRange)
        return O >= +e.minRange && O <= +e.maxRange;
      if (e.minRange)
        return O >= +e.minRange;
      if (e.maxRange)
        return O <= +e.maxRange;
    }
    return !0;
  }, x = (f) => new Map(f.map((D) => [n(D), !0])), g = (f) => Array.isArray(f) && f.length > 0, S = () => {
    const f = {
      disabledDates: null,
      allowedDates: null,
      highlightedDates: null
    };
    return g(e.allowedDates) && (f.allowedDates = x(e.allowedDates)), typeof r.value != "function" && g(r.value.dates) && (f.highlightedDates = x(r.value.dates)), g(e.disabledDates) && (f.disabledDates = x(e.disabledDates)), f;
  }, F = () => !e.enableTimePicker || e.monthPicker || e.yearPicker || e.ignoreTimeValidation, b = (f) => Array.isArray(f) ? [f[0] ? bn(f[0]) : null, f[1] ? bn(f[1]) : null] : bn(f), P = (f, D, H) => f.find(
    (ne) => +ne.hours === Je(D) && ne.minutes === "*" ? !0 : +ne.minutes === at(D) && +ne.hours === Je(D)
  ) && H, Q = (f, D, H) => {
    const [ne, _] = f, [d, O] = D;
    return !P(ne, d, H) && !P(_, O, H) && H;
  }, ae = (f, D) => {
    const H = Array.isArray(D) ? D : [D];
    return Array.isArray(e.disabledTimes) ? Array.isArray(e.disabledTimes[0]) ? Q(e.disabledTimes, H, f) : !H.some((ne) => P(e.disabledTimes, ne, f)) : f;
  }, L = (f, D) => {
    const H = Array.isArray(D) ? [kt(D[0]), D[1] ? kt(D[1]) : void 0] : kt(D), ne = !e.disabledTimes(H);
    return f && ne;
  }, ie = (f, D) => e.disabledTimes ? Array.isArray(e.disabledTimes) ? ae(D, f) : L(D, f) : D;
  return {
    isDisabled: I,
    validateDate: i,
    validateMonthYearInRange: C,
    isDateRangeAllowed: R,
    checkMinMaxRange: A,
    matchDate: $,
    mapDatesArrToMap: S,
    isValidTime: (f) => {
      let D = !0;
      if (!f || F())
        return !0;
      const H = !e.minDate && !e.maxDate ? b(f) : f;
      return (e.maxTime || e.maxDate) && (D = va(
        e.maxTime,
        e.maxDate,
        "max",
        Ce(H),
        D
      )), (e.minTime || e.minDate) && (D = va(
        e.minTime,
        e.minDate,
        "min",
        Ce(H),
        D
      )), ie(f, D);
    }
  };
}, nn = () => {
  const e = j(() => (a, n) => a == null ? void 0 : a.includes(n)), t = j(() => (a, n) => a.count ? a.solo ? !0 : n === 0 : !0), r = j(() => (a, n) => a.count ? a.solo ? !0 : n === a.count - 1 : !0);
  return { hideNavigationButtons: e, showLeftIcon: t, showRightIcon: r };
}, hl = (e, t, r) => {
  const a = ee(0), n = Ht({
    [wt.timePicker]: !e.enableTimePicker || e.timePicker || e.monthPicker,
    [wt.calendar]: !1,
    [wt.header]: !1
  }), o = j(() => e.monthPicker), i = (C) => {
    var k;
    if ((k = e.flow) != null && k.length) {
      if (!C && o.value)
        return $();
      n[C] = !0, Object.keys(n).filter((I) => !n[I]).length || $();
    }
  }, c = () => {
    var C;
    (C = e.flow) != null && C.length && a.value !== -1 && (a.value += 1, t("flow-step", a.value), $());
  }, p = () => {
    a.value = -1;
  }, M = (C, k, ...I) => {
    e.flow[a.value] === C && r.value && r.value[k](...I);
  }, $ = () => {
    M(tt.month, "toggleMonthPicker", !0), M(tt.year, "toggleYearPicker", !0), M(tt.calendar, "toggleTimePicker", !1, !0), M(tt.time, "toggleTimePicker", !0, !0);
    const C = e.flow[a.value];
    (C === tt.hours || C === tt.minutes || C === tt.seconds) && M(C, "toggleTimePicker", !0, !0, C);
  };
  return { childMount: i, updateFlowStep: c, resetFlow: p, flowStep: a };
}, an = {
  multiCalendars: { type: [Boolean, Number, String, Object], default: void 0 },
  modelValue: { type: [String, Date, Array, Object, Number], default: null },
  modelType: { type: String, default: null },
  position: { type: String, default: "center" },
  dark: { type: Boolean, default: !1 },
  format: {
    type: [String, Function],
    default: () => null
  },
  autoPosition: { type: Boolean, default: !0 },
  altPosition: { type: Function, default: null },
  transitions: { type: [Boolean, Object], default: !0 },
  formatLocale: { type: Object, default: null },
  utc: { type: [Boolean, String], default: !1 },
  ariaLabels: { type: Object, default: () => ({}) },
  offset: { type: [Number, String], default: 10 },
  hideNavigation: { type: Array, default: () => [] },
  timezone: { type: String, default: null },
  emitTimezone: { type: String, default: null },
  vertical: { type: Boolean, default: !1 },
  disableMonthYearSelect: { type: Boolean, default: !1 },
  disableYearSelect: { type: Boolean, default: !1 },
  menuClassName: { type: String, default: null },
  dayClass: { type: Function, default: null },
  yearRange: { type: Array, default: () => [1900, 2100] },
  calendarCellClassName: { type: String, default: null },
  enableTimePicker: { type: Boolean, default: !0 },
  autoApply: { type: Boolean, default: !1 },
  disabledDates: { type: [Array, Function], default: () => [] },
  monthNameFormat: { type: String, default: "short" },
  startDate: { type: [Date, String], default: null },
  startTime: { type: [Object, Array], default: null },
  hideOffsetDates: { type: Boolean, default: !1 },
  autoRange: { type: [Number, String], default: null },
  noToday: { type: Boolean, default: !1 },
  disabledWeekDays: { type: Array, default: () => [] },
  allowedDates: { type: Array, default: null },
  nowButtonLabel: { type: String, default: "Now" },
  markers: { type: Array, default: () => [] },
  escClose: { type: Boolean, default: !0 },
  spaceConfirm: { type: Boolean, default: !0 },
  monthChangeOnArrows: { type: Boolean, default: !0 },
  presetDates: { type: Array, default: () => [] },
  flow: { type: Array, default: () => [] },
  partialFlow: { type: Boolean, default: !1 },
  preventMinMaxNavigation: { type: Boolean, default: !1 },
  minRange: { type: [Number, String], default: null },
  maxRange: { type: [Number, String], default: null },
  multiDatesLimit: { type: [Number, String], default: null },
  reverseYears: { type: Boolean, default: !1 },
  weekPicker: { type: Boolean, default: !1 },
  filters: { type: Object, default: () => ({}) },
  arrowNavigation: { type: Boolean, default: !1 },
  disableTimeRangeValidation: { type: Boolean, default: !1 },
  highlight: {
    type: [Array, Function, Object],
    default: null
  },
  highlightWeekDays: {
    type: Array,
    default: null
  },
  highlightDisabledDays: { type: Boolean, default: !1 },
  teleport: { type: [String, Boolean, Object], default: null },
  teleportCenter: { type: Boolean, default: !1 },
  locale: { type: String, default: "en-Us" },
  weekNumName: { type: String, default: "W" },
  weekStart: { type: [Number, String], default: 1 },
  weekNumbers: {
    type: [String, Function, Object],
    default: null
  },
  calendarClassName: { type: String, default: null },
  monthChangeOnScroll: { type: [Boolean, String], default: !0 },
  dayNames: {
    type: [Function, Array],
    default: null
  },
  monthPicker: { type: Boolean, default: !1 },
  customProps: { type: Object, default: null },
  yearPicker: { type: Boolean, default: !1 },
  modelAuto: { type: Boolean, default: !1 },
  selectText: { type: String, default: "Select" },
  cancelText: { type: String, default: "Cancel" },
  previewFormat: {
    type: [String, Function],
    default: () => ""
  },
  multiDates: { type: Boolean, default: !1 },
  partialRange: { type: Boolean, default: !0 },
  ignoreTimeValidation: { type: Boolean, default: !1 },
  minDate: { type: [Date, String], default: null },
  maxDate: { type: [Date, String], default: null },
  minTime: { type: Object, default: null },
  maxTime: { type: Object, default: null },
  name: { type: String, default: null },
  placeholder: { type: String, default: "" },
  hideInputIcon: { type: Boolean, default: !1 },
  clearable: { type: Boolean, default: !0 },
  state: { type: Boolean, default: null },
  required: { type: Boolean, default: !1 },
  autocomplete: { type: String, default: "off" },
  inputClassName: { type: String, default: null },
  fixedStart: { type: Boolean, default: !1 },
  fixedEnd: { type: Boolean, default: !1 },
  timePicker: { type: Boolean, default: !1 },
  enableSeconds: { type: Boolean, default: !1 },
  is24: { type: Boolean, default: !0 },
  noHoursOverlay: { type: Boolean, default: !1 },
  noMinutesOverlay: { type: Boolean, default: !1 },
  noSecondsOverlay: { type: Boolean, default: !1 },
  hoursGridIncrement: { type: [String, Number], default: 1 },
  minutesGridIncrement: { type: [String, Number], default: 5 },
  secondsGridIncrement: { type: [String, Number], default: 5 },
  hoursIncrement: { type: [Number, String], default: 1 },
  minutesIncrement: { type: [Number, String], default: 1 },
  secondsIncrement: { type: [Number, String], default: 1 },
  range: { type: Boolean, default: !1 },
  uid: { type: String, default: null },
  disabled: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  inline: { type: [Boolean, Object], default: !1 },
  textInput: { type: [Boolean, Object], default: !1 },
  noDisabledRange: { type: Boolean, default: !1 },
  sixWeeks: { type: [Boolean, String], default: !1 },
  actionRow: { type: Object, default: () => ({}) },
  focusStartDate: { type: Boolean, default: !1 },
  disabledTimes: { type: [Function, Array], default: void 0 },
  showLastInRange: { type: Boolean, default: !0 },
  timePickerInline: { type: Boolean, default: !1 },
  calendar: { type: Function, default: null },
  config: { type: Object, default: void 0 },
  quarterPicker: { type: Boolean, default: !1 },
  yearFirst: { type: Boolean, default: !1 }
}, et = {
  ...an,
  shadow: { type: Boolean, default: !1 },
  flowStep: { type: Number, default: 0 },
  internalModelValue: { type: [Date, Array], default: null },
  arrMapValues: { type: Object, default: () => ({}) },
  noOverlayFocus: { type: Boolean, default: !1 }
}, pl = {
  key: 1,
  class: "dp__input_wrap"
}, bl = ["id", "name", "inputmode", "placeholder", "disabled", "readonly", "required", "value", "autocomplete", "aria-label", "aria-disabled", "aria-invalid"], kl = {
  key: 2,
  class: "dp__clear_icon"
}, wl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerInput",
  props: {
    isMenuOpen: { type: Boolean, default: !1 },
    inputValue: { type: String, default: "" },
    ...an
  },
  emits: [
    "clear",
    "open",
    "update:input-value",
    "set-input-date",
    "close",
    "select-date",
    "set-empty-date",
    "toggle",
    "focus-prev",
    "focus",
    "blur",
    "real-blur"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, {
      defaultedTextInput: o,
      defaultedAriaLabels: i,
      defaultedInline: c,
      defaultedConfig: p,
      getDefaultPattern: M,
      getDefaultStartTime: $
    } = Pe(n), { checkMinMaxRange: C } = Mt(n), k = ee(), I = ee(null), R = ee(!1), A = ee(!1), x = j(
      () => ({
        dp__pointer: !n.disabled && !n.readonly && !o.value.enabled,
        dp__disabled: n.disabled,
        dp__input_readonly: !o.value.enabled,
        dp__input: !0,
        dp__input_icon_pad: !n.hideInputIcon,
        dp__input_valid: !!n.state,
        dp__input_invalid: n.state === !1,
        dp__input_focus: R.value || n.isMenuOpen,
        dp__input_reg: !o.value.enabled,
        [n.inputClassName]: !!n.inputClassName
      })
    ), g = () => {
      a("set-input-date", null), n.autoApply && (a("set-empty-date"), k.value = null);
    }, S = (d) => {
      const O = $();
      return Kr(
        d,
        o.value.format ?? M(),
        O ?? Ia({}, n.enableSeconds),
        n.inputValue,
        A.value
      );
    }, F = (d) => {
      const { rangeSeparator: O } = o.value, [G, y] = d.split(`${O}`);
      if (G) {
        const l = S(G.trim()), h = y ? S(y.trim()) : null, s = l && h ? [l, h] : [l];
        C(h, s, 0) && (k.value = l ? s : null);
      }
    }, b = () => {
      A.value = !0;
    }, P = (d) => {
      if (n.range)
        F(d);
      else if (n.multiDates) {
        const O = d.split(";");
        k.value = O.map((G) => S(G.trim())).filter((G) => G);
      } else
        k.value = S(d);
    }, Q = (d) => {
      var G;
      const O = typeof d == "string" ? d : (G = d.target) == null ? void 0 : G.value;
      O !== "" ? (o.value.openMenu && !n.isMenuOpen && a("open"), P(O), a("set-input-date", k.value)) : g(), A.value = !1, a("update:input-value", O);
    }, ae = (d) => {
      o.value.enabled ? (P(d.target.value), o.value.enterSubmit && On(k.value) && n.inputValue !== "" ? (a("set-input-date", k.value, !0), k.value = null) : o.value.enterSubmit && n.inputValue === "" && (k.value = null, a("clear"))) : E(d);
    }, L = (d) => {
      o.value.enabled && o.value.tabSubmit && P(d.target.value), o.value.tabSubmit && On(k.value) && n.inputValue !== "" ? (a("set-input-date", k.value, !0, !0), k.value = null) : o.value.tabSubmit && n.inputValue === "" && (k.value = null, a("clear", !0));
    }, ie = () => {
      var d;
      R.value = !0, a("focus"), o.value.enabled && o.value.selectOnFocus && ((d = I.value) == null || d.select());
    }, E = (d) => {
      d.preventDefault(), ft(d, p.value, !0), o.value.enabled && o.value.openMenu && !c.value.input && !n.isMenuOpen ? a("open") : o.value.enabled || a("toggle");
    }, f = () => {
      a("real-blur"), R.value = !1, (!n.isMenuOpen || c.value.enabled && c.value.input) && a("blur"), n.autoApply && o.value.enabled && k.value && !n.isMenuOpen && (a("set-input-date", k.value), a("select-date"), k.value = null);
    }, D = (d) => {
      ft(d, p.value, !0), a("clear");
    }, H = (d) => {
      if (!o.value.enabled) {
        if (d.code === "Tab")
          return;
        d.preventDefault();
      }
    };
    return t({
      focusInput: () => {
        var d;
        (d = I.value) == null || d.focus({ preventScroll: !0 });
      },
      setParsedDate: (d) => {
        k.value = d;
      }
    }), (d, O) => {
      var G;
      return w(), V("div", { onClick: E }, [
        d.$slots.trigger && !d.$slots["dp-input"] && !v(c).enabled ? le(d.$slots, "trigger", { key: 0 }) : W("", !0),
        !d.$slots.trigger && (!v(c).enabled || v(c).input) ? (w(), V("div", pl, [
          d.$slots["dp-input"] && !d.$slots.trigger && !v(c).enabled ? le(d.$slots, "dp-input", {
            key: 0,
            value: e.inputValue,
            isMenuOpen: e.isMenuOpen,
            onInput: Q,
            onEnter: ae,
            onTab: L,
            onClear: D,
            onBlur: f,
            onKeypress: H,
            onPaste: b,
            openMenu: () => d.$emit("open"),
            closeMenu: () => d.$emit("close"),
            toggleMenu: () => d.$emit("toggle")
          }) : W("", !0),
          d.$slots["dp-input"] ? W("", !0) : (w(), V("input", {
            key: 1,
            id: d.uid ? `dp-input-${d.uid}` : void 0,
            ref_key: "inputRef",
            ref: I,
            name: d.name,
            class: we(x.value),
            inputmode: v(o).enabled ? "text" : "none",
            placeholder: d.placeholder,
            disabled: d.disabled,
            readonly: d.readonly,
            required: d.required,
            value: e.inputValue,
            autocomplete: d.autocomplete,
            "aria-label": (G = v(i)) == null ? void 0 : G.input,
            "aria-disabled": d.disabled || void 0,
            "aria-invalid": d.state === !1 ? !0 : void 0,
            onInput: Q,
            onKeydown: [
              ce(ae, ["enter"]),
              ce(L, ["tab"]),
              H
            ],
            onBlur: f,
            onFocus: ie,
            onKeypress: H,
            onPaste: b
          }, null, 42, bl)),
          fe("div", {
            onClick: O[2] || (O[2] = (y) => a("toggle"))
          }, [
            d.$slots["input-icon"] && !d.hideInputIcon ? (w(), V("span", {
              key: 0,
              class: "dp__input_icon",
              onClick: O[0] || (O[0] = (y) => a("toggle"))
            }, [
              le(d.$slots, "input-icon")
            ])) : W("", !0),
            !d.$slots["input-icon"] && !d.hideInputIcon && !d.$slots["dp-input"] ? (w(), he(v(Vt), {
              key: 1,
              class: "dp__input_icon dp__input_icons",
              onClick: O[1] || (O[1] = (y) => a("toggle"))
            })) : W("", !0)
          ]),
          d.$slots["clear-icon"] && e.inputValue && d.clearable && !d.disabled && !d.readonly ? (w(), V("span", kl, [
            le(d.$slots, "clear-icon", { clear: D })
          ])) : W("", !0),
          d.clearable && !d.$slots["clear-icon"] && e.inputValue && !d.disabled && !d.readonly ? (w(), he(v(Ta), {
            key: 3,
            class: "dp__clear_icon dp__input_icons",
            onClick: O[3] || (O[3] = De((y) => D(y), ["prevent"]))
          })) : W("", !0)
        ])) : W("", !0)
      ]);
    };
  }
}), Dl = ["title"], Ml = { class: "dp__action_buttons" }, $l = ["disabled"], Tl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "ActionRow",
  props: {
    menuMount: { type: Boolean, default: !1 },
    calendarWidth: { type: Number, default: 0 },
    ...et
  },
  emits: ["close-picker", "select-date", "select-now", "invalid-select"],
  setup(e, { emit: t }) {
    const r = t, a = e, {
      defaultedActionRow: n,
      defaultedPreviewFormat: o,
      defaultedMultiCalendars: i,
      defaultedTextInput: c,
      defaultedInline: p,
      getDefaultPattern: M
    } = Pe(a), { isValidTime: $ } = Mt(a), { buildMatrix: C } = yt(), k = ee(null), I = ee(null);
    Le(() => {
      a.arrowNavigation && C([_e(k), _e(I)], "actionRow");
    });
    const R = j(() => a.range && !a.partialRange && a.internalModelValue ? a.internalModelValue.length === 2 : !0), A = j(() => !x.value || !g.value || !R.value), x = j(() => !a.enableTimePicker || a.ignoreTimeValidation ? !0 : $(a.internalModelValue)), g = j(() => a.monthPicker ? a.range && Array.isArray(a.internalModelValue) ? !a.internalModelValue.filter((f) => !L(f)).length : L(a.internalModelValue) : !0), S = () => {
      const E = o.value;
      return a.timePicker || a.monthPicker, E(Ce(a.internalModelValue));
    }, F = () => {
      const E = a.internalModelValue;
      return i.value.count > 0 ? `${b(E[0])} - ${b(E[1])}` : [b(E[0]), b(E[1])];
    }, b = (E) => Ea(
      E,
      o.value,
      a.formatLocale,
      c.value.rangeSeparator,
      a.modelAuto,
      M()
    ), P = j(() => !a.internalModelValue || !a.menuMount ? "" : typeof o.value == "string" ? Array.isArray(a.internalModelValue) ? a.internalModelValue.length === 2 && a.internalModelValue[1] ? F() : a.multiDates ? a.internalModelValue.map((E) => `${b(E)}`) : a.modelAuto ? `${b(a.internalModelValue[0])}` : `${b(a.internalModelValue[0])} -` : b(a.internalModelValue) : S()), Q = () => a.multiDates ? "; " : " - ", ae = j(
      () => Array.isArray(P.value) ? P.value.join(Q()) : P.value
    ), L = (E) => {
      if (!a.monthPicker)
        return !0;
      let f = !0;
      const D = B(Qe(E));
      if (a.minDate && a.maxDate) {
        const H = B(Qe(a.minDate)), ne = B(Qe(a.maxDate));
        return Ee(D, H) && Ye(D, ne) || ke(D, H) || ke(D, ne);
      }
      if (a.minDate) {
        const H = B(Qe(a.minDate));
        f = Ee(D, H) || ke(D, H);
      }
      if (a.maxDate) {
        const H = B(Qe(a.maxDate));
        f = Ye(D, H) || ke(D, H);
      }
      return f;
    }, ie = () => {
      x.value && g.value && R.value ? r("select-date") : r("invalid-select");
    };
    return (E, f) => (w(), V("div", {
      class: "dp__action_row",
      style: Xe(e.calendarWidth ? { width: `${e.calendarWidth}px` } : {})
    }, [
      E.$slots["action-row"] ? le(E.$slots, "action-row", Re(Ne({ key: 0 }, {
        internalModelValue: E.internalModelValue,
        disabled: A.value,
        selectDate: () => E.$emit("select-date"),
        closePicker: () => E.$emit("close-picker")
      }))) : (w(), V(ye, { key: 1 }, [
        v(n).showPreview ? (w(), V("div", {
          key: 0,
          class: "dp__selection_preview",
          title: ae.value
        }, [
          E.$slots["action-preview"] ? le(E.$slots, "action-preview", {
            key: 0,
            value: E.internalModelValue
          }) : W("", !0),
          E.$slots["action-preview"] ? W("", !0) : (w(), V(ye, { key: 1 }, [
            it(Be(ae.value), 1)
          ], 64))
        ], 8, Dl)) : W("", !0),
        fe("div", Ml, [
          E.$slots["action-buttons"] ? le(E.$slots, "action-buttons", {
            key: 0,
            value: E.internalModelValue
          }) : W("", !0),
          E.$slots["action-buttons"] ? W("", !0) : (w(), V(ye, { key: 1 }, [
            !v(p).enabled && v(n).showCancel ? (w(), V("button", {
              key: 0,
              ref_key: "cancelButtonRef",
              ref: k,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: f[0] || (f[0] = (D) => E.$emit("close-picker")),
              onKeydown: [
                f[1] || (f[1] = ce((D) => E.$emit("close-picker"), ["enter"])),
                f[2] || (f[2] = ce((D) => E.$emit("close-picker"), ["space"]))
              ]
            }, Be(E.cancelText), 545)) : W("", !0),
            v(n).showNow ? (w(), V("button", {
              key: 1,
              ref_key: "cancelButtonRef",
              ref: k,
              type: "button",
              class: "dp__action_button dp__action_cancel",
              onClick: f[3] || (f[3] = (D) => E.$emit("select-now")),
              onKeydown: [
                f[4] || (f[4] = ce((D) => E.$emit("select-now"), ["enter"])),
                f[5] || (f[5] = ce((D) => E.$emit("select-now"), ["space"]))
              ]
            }, Be(E.nowButtonLabel), 545)) : W("", !0),
            v(n).showSelect ? (w(), V("button", {
              key: 2,
              ref_key: "selectButtonRef",
              ref: I,
              type: "button",
              class: "dp__action_button dp__action_select",
              disabled: A.value,
              onKeydown: [
                ce(ie, ["enter"]),
                ce(ie, ["space"])
              ],
              onClick: ie
            }, Be(E.selectText), 41, $l)) : W("", !0)
          ], 64))
        ])
      ], 64))
    ], 4));
  }
}), Al = ["onKeydown"], Sl = { class: "dp__selection_grid_header" }, Pl = ["aria-selected", "aria-disabled", "onClick", "onKeydown", "onMouseover"], Cl = ["aria-label"], zt = /* @__PURE__ */ Ie({
  __name: "SelectionOverlay",
  props: {
    items: {},
    type: {},
    isLast: { type: Boolean },
    arrowNavigation: { type: Boolean },
    skipButtonRef: { type: Boolean },
    headerRefs: {},
    hideNavigation: {},
    escClose: { type: Boolean },
    useRelative: { type: Boolean },
    height: {},
    textInput: { type: [Boolean, Object] },
    config: {},
    noOverlayFocus: { type: Boolean },
    focusValue: {}
  },
  emits: ["selected", "toggle", "reset-flow", "hover-value"],
  setup(e, { expose: t, emit: r }) {
    const { setSelectionGrid: a, buildMultiLevelMatrix: n, setMonthPicker: o } = yt(), i = r, c = e, { defaultedAriaLabels: p, defaultedTextInput: M, defaultedConfig: $ } = Pe(
      c
    ), { hideNavigationButtons: C } = nn(), k = ee(!1), I = ee(null), R = ee(null), A = ee([]), x = ee(), g = ee(null), S = ee(0), F = ee(null);
    qa(() => {
      I.value = null;
    }), Le(() => {
      gt().then(() => f()), c.noOverlayFocus || P(), b(!0);
    }), Yn(() => b(!1));
    const b = (y) => {
      var l;
      c.arrowNavigation && ((l = c.headerRefs) != null && l.length ? o(y) : a(y));
    }, P = () => {
      var l;
      const y = _e(R);
      y && (M.value.enabled || (I.value ? (l = I.value) == null || l.focus({ preventScroll: !0 }) : y.focus({ preventScroll: !0 })), k.value = y.clientHeight < y.scrollHeight);
    }, Q = j(
      () => ({
        dp__overlay: !0,
        "dp--overlay-absolute": !c.useRelative,
        "dp--overlay-relative": c.useRelative
      })
    ), ae = j(
      () => c.useRelative ? { height: `${c.height}px`, width: "260px" } : void 0
    ), L = j(() => ({
      dp__overlay_col: !0
    })), ie = j(
      () => ({
        dp__btn: !0,
        dp__button: !0,
        dp__overlay_action: !0,
        dp__over_action_scroll: k.value,
        dp__button_bottom: c.isLast
      })
    ), E = j(() => {
      var y, l;
      return {
        dp__overlay_container: !0,
        dp__container_flex: ((y = c.items) == null ? void 0 : y.length) <= 6,
        dp__container_block: ((l = c.items) == null ? void 0 : l.length) > 6
      };
    });
    mt(
      () => c.items,
      () => f(),
      { deep: !0 }
    );
    const f = () => {
      gt().then(() => {
        const y = _e(I), l = _e(R), h = _e(g), s = _e(F), X = h ? h.getBoundingClientRect().height : 0;
        l && (l.getBoundingClientRect().height ? S.value = l.getBoundingClientRect().height - X : S.value = $.value.modeHeight - X), y && s && (s.scrollTop = y.offsetTop - s.offsetTop - (S.value / 2 - y.getBoundingClientRect().height) - X);
      });
    }, D = (y) => {
      y.disabled || i("selected", y.value);
    }, H = () => {
      i("toggle"), i("reset-flow");
    }, ne = () => {
      c.escClose && H();
    }, _ = (y, l, h, s) => {
      y && ((l.active || l.value === c.focusValue) && (I.value = y), c.arrowNavigation && (Array.isArray(A.value[h]) ? A.value[h][s] = y : A.value[h] = [y], d()));
    }, d = () => {
      var l, h;
      const y = (l = c.headerRefs) != null && l.length ? [c.headerRefs].concat(A.value) : A.value.concat([c.skipButtonRef ? [] : [g.value]]);
      n(Ce(y), (h = c.headerRefs) != null && h.length ? "monthPicker" : "selectionGrid");
    }, O = (y) => {
      c.arrowNavigation || ft(y, $.value, !0);
    }, G = (y) => {
      x.value = y, i("hover-value", y);
    };
    return t({ focusGrid: P }), (y, l) => {
      var h;
      return w(), V("div", {
        ref_key: "gridWrapRef",
        ref: R,
        class: we(Q.value),
        style: Xe(ae.value),
        role: "dialog",
        tabindex: "0",
        onKeydown: [
          ce(De(ne, ["prevent"]), ["esc"]),
          l[0] || (l[0] = ce(De((s) => O(s), ["prevent"]), ["left"])),
          l[1] || (l[1] = ce(De((s) => O(s), ["prevent"]), ["up"])),
          l[2] || (l[2] = ce(De((s) => O(s), ["prevent"]), ["down"])),
          l[3] || (l[3] = ce(De((s) => O(s), ["prevent"]), ["right"]))
        ]
      }, [
        fe("div", {
          ref_key: "containerRef",
          ref: F,
          class: we(E.value),
          role: "grid",
          style: Xe({ height: `${S.value}px` })
        }, [
          fe("div", Sl, [
            le(y.$slots, "header")
          ]),
          y.$slots.overlay ? le(y.$slots, "overlay", { key: 0 }) : (w(!0), V(ye, { key: 1 }, Ae(y.items, (s, X) => (w(), V("div", {
            key: X,
            class: we(["dp__overlay_row", { dp__flex_row: y.items.length >= 3 }]),
            role: "row"
          }, [
            (w(!0), V(ye, null, Ae(s, (de, T) => (w(), V("div", {
              key: de.value,
              ref_for: !0,
              ref: (u) => _(u, de, X, T),
              role: "gridcell",
              class: we(L.value),
              "aria-selected": de.active,
              "aria-disabled": de.disabled || void 0,
              tabindex: "0",
              onClick: (u) => D(de),
              onKeydown: [
                ce(De((u) => D(de), ["prevent"]), ["enter"]),
                ce(De((u) => D(de), ["prevent"]), ["space"])
              ],
              onMouseover: (u) => G(de.value)
            }, [
              fe("div", {
                class: we(de.className)
              }, [
                y.$slots.item ? le(y.$slots, "item", {
                  key: 0,
                  item: de
                }) : W("", !0),
                y.$slots.item ? W("", !0) : (w(), V(ye, { key: 1 }, [
                  it(Be(de.text), 1)
                ], 64))
              ], 2)
            ], 42, Pl))), 128))
          ], 2))), 128))
        ], 6),
        y.$slots["button-icon"] ? Zt((w(), V("button", {
          key: 0,
          ref_key: "toggleButton",
          ref: g,
          type: "button",
          "aria-label": (h = v(p)) == null ? void 0 : h.toggleOverlay,
          class: we(ie.value),
          tabindex: "0",
          onClick: H,
          onKeydown: [
            ce(H, ["enter"]),
            ce(H, ["tab"])
          ]
        }, [
          le(y.$slots, "button-icon")
        ], 42, Cl)), [
          [Qt, !v(C)(y.hideNavigation, y.type)]
        ]) : W("", !0)
      ], 46, Al);
    };
  }
}), rn = /* @__PURE__ */ Ie({
  __name: "InstanceWrap",
  props: {
    multiCalendars: {},
    stretch: { type: Boolean }
  },
  setup(e) {
    const t = e, r = j(
      () => t.multiCalendars > 0 ? [...Array(t.multiCalendars).keys()] : [0]
    ), a = j(() => ({
      dp__instance_calendar: t.multiCalendars > 0
    }));
    return (n, o) => (w(), V("div", {
      class: we({
        dp__menu_inner: !n.stretch,
        "dp--menu--inner-stretched": n.stretch,
        dp__flex_display: n.multiCalendars > 0
      })
    }, [
      (w(!0), V(ye, null, Ae(r.value, (i, c) => (w(), V("div", {
        key: i,
        class: we(a.value)
      }, [
        le(n.$slots, "default", {
          instance: i,
          index: c
        })
      ], 2))), 128))
    ], 2));
  }
}), _l = ["aria-label", "aria-disabled"], Nt = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "ArrowBtn",
  props: {
    ariaLabel: {},
    disabled: { type: Boolean }
  },
  emits: ["activate", "set-ref"],
  setup(e, { emit: t }) {
    const r = t, a = ee(null);
    return Le(() => r("set-ref", a)), (n, o) => (w(), V("button", {
      ref_key: "elRef",
      ref: a,
      type: "button",
      class: "dp__btn dp--arrow-btn-nav",
      tabindex: "0",
      "aria-label": n.ariaLabel,
      "aria-disabled": n.disabled || void 0,
      onClick: o[0] || (o[0] = (i) => n.$emit("activate")),
      onKeydown: [
        o[1] || (o[1] = ce(De((i) => n.$emit("activate"), ["prevent"]), ["enter"])),
        o[2] || (o[2] = ce(De((i) => n.$emit("activate"), ["prevent"]), ["space"]))
      ]
    }, [
      fe("span", {
        class: we(["dp__inner_nav", { dp__inner_nav_disabled: n.disabled }])
      }, [
        le(n.$slots, "default")
      ], 2)
    ], 40, _l));
  }
}), Rl = { class: "dp--year-mode-picker" }, Ol = ["aria-label"], Va = /* @__PURE__ */ Ie({
  __name: "YearModePicker",
  props: {
    ...et,
    showYearPicker: { type: Boolean, default: !1 },
    items: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    isDisabled: { type: Function, default: () => !1 }
  },
  emits: ["toggle-year-picker", "year-select", "handle-year"],
  setup(e, { emit: t }) {
    const r = t, a = e, { showRightIcon: n, showLeftIcon: o } = nn(), { defaultedConfig: i, defaultedMultiCalendars: c, defaultedAriaLabels: p, defaultedTransitions: M } = Pe(a), { showTransition: $, transitionName: C } = Lt(M), k = (A = !1, x) => {
      r("toggle-year-picker", { flow: A, show: x });
    }, I = (A) => {
      r("year-select", A);
    }, R = (A = !1) => {
      r("handle-year", A);
    };
    return (A, x) => {
      var g, S, F;
      return w(), V("div", Rl, [
        v(o)(v(c), e.instance) ? (w(), he(Nt, {
          key: 0,
          ref: "mpPrevIconRef",
          "aria-label": (g = v(p)) == null ? void 0 : g.prevYear,
          disabled: e.isDisabled(!1),
          onActivate: x[0] || (x[0] = (b) => R(!1))
        }, {
          default: ge(() => [
            A.$slots["arrow-left"] ? le(A.$slots, "arrow-left", { key: 0 }) : W("", !0),
            A.$slots["arrow-left"] ? W("", !0) : (w(), he(v(En), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : W("", !0),
        fe("button", {
          ref: "mpYearButtonRef",
          class: "dp__btn dp--year-select",
          type: "button",
          "aria-label": (S = v(p)) == null ? void 0 : S.openYearsOverlay,
          onClick: x[1] || (x[1] = () => k(!1)),
          onKeydown: x[2] || (x[2] = ce(() => k(!1), ["enter"]))
        }, [
          A.$slots.year ? le(A.$slots, "year", {
            key: 0,
            year: e.year
          }) : W("", !0),
          A.$slots.year ? W("", !0) : (w(), V(ye, { key: 1 }, [
            it(Be(e.year), 1)
          ], 64))
        ], 40, Ol),
        v(n)(v(c), e.instance) ? (w(), he(Nt, {
          key: 1,
          ref: "mpNextIconRef",
          "aria-label": (F = v(p)) == null ? void 0 : F.nextYear,
          disabled: e.isDisabled(!0),
          onActivate: x[3] || (x[3] = (b) => R(!0))
        }, {
          default: ge(() => [
            A.$slots["arrow-right"] ? le(A.$slots, "arrow-right", { key: 0 }) : W("", !0),
            A.$slots["arrow-right"] ? W("", !0) : (w(), he(v(Fn), { key: 1 }))
          ]),
          _: 3
        }, 8, ["aria-label", "disabled"])) : W("", !0),
        qe(Rt, {
          name: v(C)(e.showYearPicker),
          css: v($)
        }, {
          default: ge(() => [
            e.showYearPicker ? (w(), he(zt, {
              key: 0,
              items: e.items,
              "text-input": A.textInput,
              "esc-close": A.escClose,
              config: A.config,
              "is-last": A.autoApply && !v(i).keepActionRow,
              type: "year",
              onToggle: k,
              onSelected: x[4] || (x[4] = (b) => I(b))
            }, Ve({
              "button-icon": ge(() => [
                A.$slots["calendar-icon"] ? le(A.$slots, "calendar-icon", { key: 0 }) : W("", !0),
                A.$slots["calendar-icon"] ? W("", !0) : (w(), he(v(Vt), { key: 1 }))
              ]),
              _: 2
            }, [
              A.$slots["year-overlay-value"] ? {
                name: "item",
                fn: ge(({ item: b }) => [
                  le(A.$slots, "year-overlay-value", {
                    text: b.text,
                    value: b.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "text-input", "esc-close", "config", "is-last"])) : W("", !0)
          ]),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Gn = (e, t, r) => {
  if (t.value && Array.isArray(t.value))
    if (t.value.some((a) => ke(e, a))) {
      const a = t.value.filter((n) => !ke(n, e));
      t.value = a.length ? a : null;
    } else
      (r && +r > t.value.length || !r) && t.value.push(e);
  else
    t.value = [e];
}, qn = (e, t, r) => {
  let a = e.value ? e.value.slice() : [];
  return a.length === 2 && a[1] !== null && (a = []), a.length ? Ye(t, a[0]) ? (a.unshift(t), r("range-start", a[0]), r("range-start", a[1])) : (a[1] = t, r("range-end", t)) : (a = [t], r("range-start", t)), e.value = a, a;
}, ln = (e, t, r, a) => {
  e[0] && e[1] && r && t("auto-apply"), e[0] && !e[1] && a && r && t("auto-apply");
}, La = (e) => {
  Array.isArray(e.value) && e.value.length <= 2 && e.range ? e.modelValue.value = e.value.map((t) => xe(B(t), e.timezone)) : Array.isArray(e.value) || (e.modelValue.value = xe(B(e.value), e.timezone));
}, Ua = ({
  multiCalendars: e,
  highlight: t,
  calendars: r,
  modelValue: a,
  props: n,
  year: o,
  month: i,
  emit: c
}) => {
  const p = j(() => jn(n.yearRange, n.reverseYears)), M = ee([!1]), $ = j(() => (b, P) => {
    const Q = Te(Qe(/* @__PURE__ */ new Date()), {
      month: i.value(b),
      year: o.value(b)
    });
    return Ba(Q, n.maxDate, n.minDate, n.preventMinMaxNavigation, P);
  }), C = () => {
    for (let b = 0; b < e.value.count; b++)
      if (b === 0)
        r.value[b] = r.value[0];
      else {
        const P = Te(B(), r.value[b - 1]);
        r.value[b] = { month: pe(P), year: ve(Da(P, 1)) };
      }
  }, k = (b) => {
    if (!b)
      return C();
    const P = Te(B(), r.value[b]);
    return r.value[0].year = ve(Ma(P, e.value.count - 1)), C();
  }, I = (b) => n.focusStartDate ? b[0] : b[1] ? b[1] : b[0], R = () => {
    if (a.value) {
      const b = Array.isArray(a.value) ? I(a.value) : a.value;
      r.value[0] = { month: pe(b), year: ve(b) };
    }
  };
  Le(() => {
    R(), e.value.count && C();
  });
  const A = (b, P) => {
    r.value[P].year = b, e.value.count && !e.value.solo && k(P);
  }, x = j(() => (b) => Ct(p.value, (P) => {
    const Q = o.value(b) === P.value, ae = Ft(P.value, _t(n.minDate), _t(n.maxDate)), L = Kn(t.value, P.value);
    return { active: Q, disabled: ae, highlighted: L };
  })), g = (b, P) => {
    A(b, P), F(P);
  }, S = (b, P = !1) => {
    if (!$.value(b, P)) {
      const Q = P ? o.value(b) + 1 : o.value(b) - 1;
      A(Q, b);
    }
  }, F = (b, P = !1, Q) => {
    P || c("reset-flow"), Q !== void 0 ? M.value[b] = Q : M.value[b] = !M.value[b], M.value || c("overlay-closed");
  };
  return {
    isDisabled: $,
    groupedYears: x,
    showYearPicker: M,
    selectYear: A,
    toggleYearPicker: F,
    handleYearSelect: g,
    handleYear: S
  };
}, Yl = (e, t) => {
  const { defaultedMultiCalendars: r, defaultedAriaLabels: a, defaultedTransitions: n, defaultedConfig: o, defaultedHighlight: i } = Pe(e), { modelValue: c, year: p, month: M, calendars: $ } = Ut(e, t), C = j(() => Ca(e.formatLocale, e.locale, e.monthNameFormat)), k = ee(null), {
    selectYear: I,
    groupedYears: R,
    showYearPicker: A,
    toggleYearPicker: x,
    handleYearSelect: g,
    handleYear: S,
    isDisabled: F
  } = Ua({
    modelValue: c,
    multiCalendars: r,
    highlight: i,
    calendars: $,
    year: p,
    month: M,
    props: e,
    emit: t
  });
  Le(() => {
    e.startDate && (c.value && e.focusStartDate || !c.value) && I(ve(B(e.startDate)), 0);
  });
  const b = (y) => y ? { month: pe(y), year: ve(y) } : { month: null, year: null }, P = () => c.value ? Array.isArray(c.value) ? c.value.map((y) => b(y)) : b(c.value) : b(), Q = (y, l) => {
    const h = $.value[y], s = P();
    return Array.isArray(s) ? s.some((X) => X.year === (h == null ? void 0 : h.year) && X.month === l) : (h == null ? void 0 : h.year) === s.year && l === s.month;
  }, ae = (y, l, h) => {
    var X, de;
    const s = P();
    return Array.isArray(s) ? p.value(l) === ((X = s[h]) == null ? void 0 : X.year) && y === ((de = s[h]) == null ? void 0 : de.month) : !1;
  }, L = (y, l) => {
    if (e.range) {
      const h = P();
      if (Array.isArray(c.value) && Array.isArray(h)) {
        const s = ae(y, l, 0) || ae(y, l, 1), X = st(Qe(B()), y, p.value(l));
        return tn(c.value, k.value, X) && !s;
      }
      return !1;
    }
    return !1;
  }, ie = j(() => (y) => Ct(C.value, (l) => {
    const h = Q(y, l.value), s = Ft(
      l.value,
      Ra(p.value(y), e.minDate),
      Oa(p.value(y), e.maxDate)
    ) || xr(e.disabledDates, p.value(y)).includes(l.value), X = L(l.value, y), de = Fa(i.value, l.value, p.value(y));
    return { active: h, disabled: s, isBetween: X, highlighted: de };
  })), E = (y, l) => st(Qe(B()), y, p.value(l)), f = (y, l) => {
    const h = c.value ? c.value : Qe(/* @__PURE__ */ new Date());
    c.value = st(h, y, p.value(l)), t("auto-apply");
  }, D = (y, l) => {
    const h = qn(c, E(y, l), t);
    ln(h, t, e.autoApply, e.modelAuto);
  }, H = (y, l) => {
    Gn(E(y, l), c, e.multiDatesLimit), t("auto-apply", !0);
  }, ne = (y, l) => ($.value[l].month = y, d(l, $.value[l].year, y), e.multiDates ? H(y, l) : e.range ? D(y, l) : f(y, l)), _ = (y, l) => {
    I(y, l), d(l, y, null);
  }, d = (y, l, h) => {
    let s = h;
    if (!s) {
      const X = P();
      s = Array.isArray(X) ? X[y].month : X.month;
    }
    t("update-month-year", { instance: y, year: l, month: s });
  };
  return {
    groupedMonths: ie,
    groupedYears: R,
    year: p,
    isDisabled: F,
    defaultedMultiCalendars: r,
    defaultedAriaLabels: a,
    defaultedTransitions: n,
    defaultedConfig: o,
    showYearPicker: A,
    modelValue: c,
    presetDate: (y, l) => {
      La({ value: y, modelValue: c, range: e.range, timezone: l ? void 0 : e.timezone }), t("auto-apply");
    },
    setHoverDate: (y, l) => {
      k.value = E(y, l);
    },
    selectMonth: ne,
    selectYear: _,
    toggleYearPicker: x,
    handleYearSelect: g,
    handleYear: S,
    getModelMonthYear: P
  };
}, Nl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "MonthPicker",
  props: {
    ...et
  },
  emits: [
    "update:internal-model-value",
    "overlay-closed",
    "reset-flow",
    "range-start",
    "range-end",
    "auto-apply",
    "update-month-year",
    "mount"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = Dt(), o = Ke(n, "yearMode"), i = e;
    Le(() => {
      i.shadow || a("mount", null);
    });
    const {
      groupedMonths: c,
      groupedYears: p,
      year: M,
      isDisabled: $,
      defaultedMultiCalendars: C,
      defaultedConfig: k,
      showYearPicker: I,
      modelValue: R,
      presetDate: A,
      setHoverDate: x,
      selectMonth: g,
      selectYear: S,
      toggleYearPicker: F,
      handleYearSelect: b,
      handleYear: P,
      getModelMonthYear: Q
    } = Yl(i, a);
    return t({ getSidebarProps: () => ({
      modelValue: R,
      year: M,
      getModelMonthYear: Q,
      selectMonth: g,
      selectYear: S,
      handleYear: P
    }), presetDate: A, toggleYearPicker: (L) => F(0, L) }), (L, ie) => (w(), he(rn, {
      "multi-calendars": v(C).count,
      stretch: ""
    }, {
      default: ge(({ instance: E }) => [
        L.$slots["month-year"] ? le(L.$slots, "month-year", Re(Ne({ key: 0 }, {
          year: v(M),
          months: v(c)(E),
          years: v(p)(E),
          selectMonth: v(g),
          selectYear: v(S),
          instance: E
        }))) : (w(), he(zt, {
          key: 1,
          items: v(c)(E),
          "arrow-navigation": L.arrowNavigation,
          "is-last": L.autoApply && !v(k).keepActionRow,
          "esc-close": L.escClose,
          height: v(k).modeHeight,
          config: L.config,
          "no-overlay-focus": L.noOverlayFocus,
          "use-relative": "",
          type: "month",
          onSelected: (f) => v(g)(f, E),
          onHoverValue: (f) => v(x)(f, E)
        }, {
          header: ge(() => [
            qe(Va, Ne(L.$props, {
              items: v(p)(E),
              instance: E,
              "show-year-picker": v(I)[E],
              year: v(M)(E),
              "is-disabled": (f) => v($)(E, f),
              onHandleYear: (f) => v(P)(E, f),
              onYearSelect: (f) => v(b)(f, E),
              onToggleYearPicker: (f) => v(F)(E, f == null ? void 0 : f.flow, f == null ? void 0 : f.show)
            }), Ve({ _: 2 }, [
              Ae(v(o), (f, D) => ({
                name: f,
                fn: ge((H) => [
                  le(L.$slots, f, Re(We(H)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          _: 2
        }, 1032, ["items", "arrow-navigation", "is-last", "esc-close", "height", "config", "no-overlay-focus", "onSelected", "onHoverValue"]))
      ]),
      _: 3
    }, 8, ["multi-calendars"]));
  }
}), Il = (e, t) => {
  const { modelValue: r } = Ut(e, t), a = ee(null), { defaultedHighlight: n } = Pe(e), o = ee();
  Le(() => {
    e.startDate && (r.value && e.focusStartDate || !r.value) && (o.value = ve(B(e.startDate)));
  });
  const i = (k) => Array.isArray(r.value) ? r.value.some((I) => ve(I) === k) : r.value ? ve(r.value) === k : !1, c = (k) => e.range && Array.isArray(r.value) ? tn(r.value, a.value, M(k)) : !1, p = j(() => Ct(jn(e.yearRange, e.reverseYears), (k) => {
    const I = i(k.value), R = Ft(k.value, _t(e.minDate), _t(e.maxDate)), A = c(k.value), x = Kn(n.value, k.value);
    return { active: I, disabled: R, isBetween: A, highlighted: x };
  })), M = (k) => nt(Qe(/* @__PURE__ */ new Date()), k);
  return {
    groupedYears: p,
    modelValue: r,
    focusYear: o,
    setHoverValue: (k) => {
      a.value = nt(Qe(/* @__PURE__ */ new Date()), k);
    },
    selectYear: (k) => {
      var I;
      if (e.multiDates)
        return r.value ? Array.isArray(r.value) && (((I = r.value) == null ? void 0 : I.map((A) => ve(A))).includes(k) ? r.value = r.value.filter((A) => ve(A) !== k) : r.value.push(nt(je(B()), k))) : r.value = [nt(je(B()), k)], t("auto-apply", !0);
      if (e.range) {
        const R = qn(r, M(k), t);
        return ln(R, t, e.autoApply, e.modelAuto);
      }
      r.value = M(k), t("auto-apply");
    }
  };
}, Bl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "YearPicker",
  props: {
    ...et
  },
  emits: ["update:internal-model-value", "reset-flow", "range-start", "range-end", "auto-apply"],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { groupedYears: o, modelValue: i, focusYear: c, selectYear: p, setHoverValue: M } = Il(n, a), { defaultedConfig: $ } = Pe(n);
    return t({ getSidebarProps: () => ({
      modelValue: i,
      selectYear: p
    }) }), (k, I) => (w(), V("div", null, [
      k.$slots["month-year"] ? le(k.$slots, "month-year", Re(Ne({ key: 0 }, {
        years: v(o),
        selectYear: v(p)
      }))) : (w(), he(zt, {
        key: 1,
        items: v(o),
        "is-last": k.autoApply && !v($).keepActionRow,
        height: v($).modeHeight,
        config: k.config,
        "no-overlay-focus": k.noOverlayFocus,
        "focus-value": v(c),
        type: "year",
        "use-relative": "",
        onSelected: v(p),
        onHoverValue: v(M)
      }, Ve({ _: 2 }, [
        k.$slots["year-overlay-value"] ? {
          name: "item",
          fn: ge(({ item: R }) => [
            le(k.$slots, "year-overlay-value", {
              text: R.text,
              value: R.value
            })
          ]),
          key: "0"
        } : void 0
      ]), 1032, ["items", "is-last", "height", "config", "no-overlay-focus", "focus-value", "onSelected", "onHoverValue"]))
    ]));
  }
}), El = {
  key: 0,
  class: "dp__time_input"
}, Fl = ["aria-label", "onKeydown", "onClick"], Hl = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), Vl = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), Ll = ["aria-label", "disabled", "onKeydown", "onClick"], Ul = ["aria-label", "onKeydown", "onClick"], zl = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_l" }, null, -1), Wl = /* @__PURE__ */ fe("span", { class: "dp__tp_inline_btn_bar dp__tp_btn_in_r" }, null, -1), jl = { key: 0 }, Kl = ["aria-label", "onKeydown"], Gl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "TimeInput",
  props: {
    hours: { type: Number, default: 0 },
    minutes: { type: Number, default: 0 },
    seconds: { type: Number, default: 0 },
    closeTimePickerBtn: { type: Object, default: null },
    order: { type: Number, default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: { type: Function, default: () => !1 },
    ...et
  },
  emits: [
    "set-hours",
    "set-minutes",
    "update:hours",
    "update:minutes",
    "update:seconds",
    "reset-flow",
    "mounted",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { setTimePickerElements: o, setTimePickerBackRef: i } = yt(), { defaultedAriaLabels: c, defaultedTransitions: p, defaultedFilters: M, defaultedConfig: $ } = Pe(n), { transitionName: C, showTransition: k } = Lt(p), I = Ht({
      hours: !1,
      minutes: !1,
      seconds: !1
    }), R = ee("AM"), A = ee(null), x = ee([]);
    Le(() => {
      a("mounted");
    });
    const g = (u) => Te(/* @__PURE__ */ new Date(), {
      hours: u.hours,
      minutes: u.minutes,
      seconds: n.enableSeconds ? u.seconds : 0,
      milliseconds: 0
    }), S = j(
      () => (u) => ne(u, n[u]) || b(u, n[u])
    ), F = j(() => ({ hours: n.hours, minutes: n.minutes, seconds: n.seconds })), b = (u, N) => n.range && !n.disableTimeRangeValidation ? !n.validateTime(u, N) : !1, P = (u, N) => {
      if (n.range && !n.disableTimeRangeValidation) {
        const q = N ? +n[`${u}Increment`] : -+n[`${u}Increment`], K = n[u] + q;
        return !n.validateTime(u, K);
      }
      return !1;
    }, Q = j(() => (u) => !d(+n[u] + +n[`${u}Increment`], u) || P(u, !0)), ae = j(() => (u) => !d(+n[u] - +n[`${u}Increment`], u) || P(u, !1)), L = (u, N) => $a(Te(B(), u), N), ie = (u, N) => rr(Te(B(), u), N), E = j(
      () => ({
        dp__time_col: !0,
        dp__time_col_block: !n.timePickerInline,
        dp__time_col_reg_block: !n.enableSeconds && n.is24 && !n.timePickerInline,
        dp__time_col_reg_inline: !n.enableSeconds && n.is24 && n.timePickerInline,
        dp__time_col_reg_with_button: !n.enableSeconds && !n.is24,
        dp__time_col_sec: n.enableSeconds && n.is24,
        dp__time_col_sec_with_button: n.enableSeconds && !n.is24
      })
    ), f = j(() => {
      const u = [{ type: "hours" }, { type: "", separator: !0 }, { type: "minutes" }];
      return n.enableSeconds ? u.concat([{ type: "", separator: !0 }, { type: "seconds" }]) : u;
    }), D = j(() => f.value.filter((u) => !u.separator)), H = j(() => (u) => {
      if (u === "hours") {
        const N = h(+n.hours);
        return { text: N < 10 ? `0${N}` : `${N}`, value: N };
      }
      return { text: n[u] < 10 ? `0${n[u]}` : `${n[u]}`, value: n[u] };
    }), ne = (u, N) => {
      var K;
      if (!n.disabledTimesConfig)
        return !1;
      const q = n.disabledTimesConfig(n.order, u === "hours" ? N : void 0);
      return q[u] ? !!((K = q[u]) != null && K.includes(N)) : !0;
    }, _ = (u) => {
      const N = n.is24 ? 24 : 12, q = u === "hours" ? N : 60, K = +n[`${u}GridIncrement`], te = u === "hours" && !n.is24 ? K : 0, re = [];
      for (let be = te; be < q; be += K)
        re.push({ value: be, text: be < 10 ? `0${be}` : `${be}` });
      return u === "hours" && !n.is24 && re.push({ value: 0, text: "12" }), Ct(re, (be) => ({ active: !1, disabled: M.value.times[u].includes(be.value) || !d(be.value, u) || ne(u, be.value) || b(u, be.value) }));
    }, d = (u, N) => {
      const q = n.minTime ? g(yn(n.minTime)) : null, K = n.maxTime ? g(yn(n.maxTime)) : null, te = g(yn(F.value, N, u));
      return q && K ? (It(te, K) || St(te, K)) && (Bt(te, q) || St(te, q)) : q ? Bt(te, q) || St(te, q) : K ? It(te, K) || St(te, K) : !0;
    }, O = (u) => n[`no${u[0].toUpperCase() + u.slice(1)}Overlay`], G = (u) => {
      O(u) || (I[u] = !I[u], I[u] || a("overlay-closed"));
    }, y = (u) => u === "hours" ? Je : u === "minutes" ? at : Pt, l = (u, N = !0) => {
      const q = N ? L : ie, K = N ? +n[`${u}Increment`] : -+n[`${u}Increment`];
      d(+n[u] + K, u) && a(
        `update:${u}`,
        y(u)(q({ [u]: +n[u] }, { [u]: +n[`${u}Increment`] }))
      );
    }, h = (u) => n.is24 ? u : (u >= 12 ? R.value = "PM" : R.value = "AM", Hr(u)), s = () => {
      R.value === "PM" ? (R.value = "AM", a("update:hours", n.hours - 12)) : (R.value = "PM", a("update:hours", n.hours + 12)), a("am-pm-change", R.value);
    }, X = (u) => {
      I[u] = !0;
    }, de = (u, N, q) => {
      if (u && n.arrowNavigation) {
        Array.isArray(x.value[N]) ? x.value[N][q] = u : x.value[N] = [u];
        const K = x.value.reduce(
          (te, re) => re.map((be, Y) => [...te[Y] || [], re[Y]]),
          []
        );
        i(n.closeTimePickerBtn), A.value && (K[1] = K[1].concat(A.value)), o(K, n.order);
      }
    }, T = (u, N) => (G(u), u === "hours" && !n.is24 ? a(`update:${u}`, R.value === "PM" ? N + 12 : N) : a(`update:${u}`, N));
    return t({ openChildCmp: X }), (u, N) => {
      var q;
      return u.disabled ? W("", !0) : (w(), V("div", El, [
        (w(!0), V(ye, null, Ae(f.value, (K, te) => {
          var re, be, Y;
          return w(), V("div", {
            key: te,
            class: we(E.value)
          }, [
            K.separator ? (w(), V(ye, { key: 0 }, [
              it(" : ")
            ], 64)) : (w(), V(ye, { key: 1 }, [
              fe("button", {
                ref_for: !0,
                ref: (U) => de(U, te, 0),
                type: "button",
                class: we({
                  dp__btn: !0,
                  dp__inc_dec_button: !u.timePickerInline,
                  dp__inc_dec_button_inline: u.timePickerInline,
                  dp__tp_inline_btn_top: u.timePickerInline,
                  dp__inc_dec_button_disabled: Q.value(K.type)
                }),
                "aria-label": (re = v(c)) == null ? void 0 : re.incrementValue(K.type),
                tabindex: "0",
                onKeydown: [
                  ce(De((U) => l(K.type), ["prevent"]), ["enter"]),
                  ce(De((U) => l(K.type), ["prevent"]), ["space"])
                ],
                onClick: (U) => l(K.type)
              }, [
                n.timePickerInline ? (w(), V(ye, { key: 1 }, [
                  Hl,
                  Vl
                ], 64)) : (w(), V(ye, { key: 0 }, [
                  u.$slots["arrow-up"] ? le(u.$slots, "arrow-up", { key: 0 }) : W("", !0),
                  u.$slots["arrow-up"] ? W("", !0) : (w(), he(v(Vn), { key: 1 }))
                ], 64))
              ], 42, Fl),
              fe("button", {
                ref_for: !0,
                ref: (U) => de(U, te, 1),
                type: "button",
                "aria-label": (be = v(c)) == null ? void 0 : be.openTpOverlay(K.type),
                class: we({
                  dp__time_display: !0,
                  dp__time_display_block: !u.timePickerInline,
                  dp__time_display_inline: u.timePickerInline,
                  "dp--time-invalid": S.value(K.type),
                  "dp--time-overlay-btn": !S.value(K.type)
                }),
                disabled: O(K.type),
                tabindex: "0",
                onKeydown: [
                  ce(De((U) => G(K.type), ["prevent"]), ["enter"]),
                  ce(De((U) => G(K.type), ["prevent"]), ["space"])
                ],
                onClick: (U) => G(K.type)
              }, [
                u.$slots[K.type] ? le(u.$slots, K.type, {
                  key: 0,
                  text: H.value(K.type).text,
                  value: H.value(K.type).value
                }) : W("", !0),
                u.$slots[K.type] ? W("", !0) : (w(), V(ye, { key: 1 }, [
                  it(Be(H.value(K.type).text), 1)
                ], 64))
              ], 42, Ll),
              fe("button", {
                ref_for: !0,
                ref: (U) => de(U, te, 2),
                type: "button",
                class: we({
                  dp__btn: !0,
                  dp__inc_dec_button: !u.timePickerInline,
                  dp__inc_dec_button_inline: u.timePickerInline,
                  dp__tp_inline_btn_bottom: u.timePickerInline,
                  dp__inc_dec_button_disabled: ae.value(K.type)
                }),
                "aria-label": (Y = v(c)) == null ? void 0 : Y.decrementValue(K.type),
                tabindex: "0",
                onKeydown: [
                  ce(De((U) => l(K.type, !1), ["prevent"]), ["enter"]),
                  ce(De((U) => l(K.type, !1), ["prevent"]), ["space"])
                ],
                onClick: (U) => l(K.type, !1)
              }, [
                n.timePickerInline ? (w(), V(ye, { key: 1 }, [
                  zl,
                  Wl
                ], 64)) : (w(), V(ye, { key: 0 }, [
                  u.$slots["arrow-down"] ? le(u.$slots, "arrow-down", { key: 0 }) : W("", !0),
                  u.$slots["arrow-down"] ? W("", !0) : (w(), he(v(Ln), { key: 1 }))
                ], 64))
              ], 42, Ul)
            ], 64))
          ], 2);
        }), 128)),
        u.is24 ? W("", !0) : (w(), V("div", jl, [
          u.$slots["am-pm-button"] ? le(u.$slots, "am-pm-button", {
            key: 0,
            toggle: s,
            value: R.value
          }) : W("", !0),
          u.$slots["am-pm-button"] ? W("", !0) : (w(), V("button", {
            key: 1,
            ref_key: "amPmButton",
            ref: A,
            type: "button",
            class: "dp__pm_am_button",
            role: "button",
            "aria-label": (q = v(c)) == null ? void 0 : q.amPmButton,
            tabindex: "0",
            onClick: s,
            onKeydown: [
              ce(De(s, ["prevent"]), ["enter"]),
              ce(De(s, ["prevent"]), ["space"])
            ]
          }, Be(R.value), 41, Kl))
        ])),
        (w(!0), V(ye, null, Ae(D.value, (K, te) => (w(), he(Rt, {
          key: te,
          name: v(C)(I[K.type]),
          css: v(k)
        }, {
          default: ge(() => [
            I[K.type] ? (w(), he(zt, {
              key: 0,
              items: _(K.type),
              "is-last": u.autoApply && !v($).keepActionRow,
              "esc-close": u.escClose,
              type: K.type,
              "text-input": u.textInput,
              config: u.config,
              "arrow-navigation": u.arrowNavigation,
              onSelected: (re) => T(K.type, re),
              onToggle: (re) => G(K.type),
              onResetFlow: N[0] || (N[0] = (re) => u.$emit("reset-flow"))
            }, Ve({
              "button-icon": ge(() => [
                u.$slots["clock-icon"] ? le(u.$slots, "clock-icon", { key: 0 }) : W("", !0),
                u.$slots["clock-icon"] ? W("", !0) : (w(), he(v(Hn), { key: 1 }))
              ]),
              _: 2
            }, [
              u.$slots[`${K.type}-overlay-value`] ? {
                name: "item",
                fn: ge(({ item: re }) => [
                  le(u.$slots, `${K.type}-overlay-value`, {
                    text: re.text,
                    value: re.value
                  })
                ]),
                key: "0"
              } : void 0
            ]), 1032, ["items", "is-last", "esc-close", "type", "text-input", "config", "arrow-navigation", "onSelected", "onToggle"])) : W("", !0)
          ]),
          _: 2
        }, 1032, ["name", "css"]))), 128))
      ]));
    };
  }
}), ql = { class: "dp--tp-wrap" }, Zl = ["aria-label", "tabindex"], Ql = ["tabindex"], Xl = ["aria-label"], za = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePicker",
  props: {
    hours: { type: [Number, Array], default: 0 },
    minutes: { type: [Number, Array], default: 0 },
    seconds: { type: [Number, Array], default: 0 },
    disabledTimesConfig: { type: Function, default: null },
    validateTime: {
      type: Function,
      default: () => !1
    },
    ...et
  },
  emits: [
    "update:hours",
    "update:minutes",
    "update:seconds",
    "mount",
    "reset-flow",
    "overlay-opened",
    "overlay-closed",
    "am-pm-change"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { buildMatrix: o, setTimePicker: i } = yt(), c = Dt(), { defaultedTransitions: p, defaultedAriaLabels: M, defaultedTextInput: $, defaultedConfig: C } = Pe(n), { transitionName: k, showTransition: I } = Lt(p), { hideNavigationButtons: R } = nn(), A = ee(null), x = ee(null), g = ee([]), S = ee(null);
    Le(() => {
      a("mount"), !n.timePicker && n.arrowNavigation ? o([_e(A.value)], "time") : i(!0, n.timePicker);
    });
    const F = j(() => n.range && n.modelAuto ? _a(n.internalModelValue) : !0), b = ee(!1), P = (_) => ({
      hours: Array.isArray(n.hours) ? n.hours[_] : n.hours,
      minutes: Array.isArray(n.minutes) ? n.minutes[_] : n.minutes,
      seconds: Array.isArray(n.seconds) ? n.seconds[_] : n.seconds
    }), Q = j(() => {
      const _ = [];
      if (n.range)
        for (let d = 0; d < 2; d++)
          _.push(P(d));
      else
        _.push(P(0));
      return _;
    }), ae = (_, d = !1, O = "") => {
      d || a("reset-flow"), b.value = _, a(_ ? "overlay-opened" : "overlay-closed"), n.arrowNavigation && i(_), gt(() => {
        O !== "" && g.value[0] && g.value[0].openChildCmp(O);
      });
    }, L = j(() => ({
      dp__btn: !0,
      dp__button: !0,
      dp__button_bottom: n.autoApply && !C.value.keepActionRow
    })), ie = Ke(c, "timePicker"), E = (_, d, O) => n.range ? d === 0 ? [_, Q.value[1][O]] : [Q.value[0][O], _] : _, f = (_) => {
      a("update:hours", _);
    }, D = (_) => {
      a("update:minutes", _);
    }, H = (_) => {
      a("update:seconds", _);
    }, ne = () => {
      if (S.value && !$.value.enabled && !n.noOverlayFocus) {
        const _ = Lr(S.value);
        _ && _.focus({ preventScroll: !0 });
      }
    };
    return t({ toggleTimePicker: ae }), (_, d) => {
      var O;
      return w(), V("div", ql, [
        !_.timePicker && !_.timePickerInline ? Zt((w(), V("button", {
          key: 0,
          ref_key: "openTimePickerBtn",
          ref: A,
          type: "button",
          class: we(L.value),
          "aria-label": (O = v(M)) == null ? void 0 : O.openTimePicker,
          tabindex: _.noOverlayFocus ? void 0 : 0,
          onKeydown: [
            d[0] || (d[0] = ce((G) => ae(!0), ["enter"])),
            d[1] || (d[1] = ce((G) => ae(!0), ["space"]))
          ],
          onClick: d[2] || (d[2] = (G) => ae(!0))
        }, [
          _.$slots["clock-icon"] ? le(_.$slots, "clock-icon", { key: 0 }) : W("", !0),
          _.$slots["clock-icon"] ? W("", !0) : (w(), he(v(Hn), { key: 1 }))
        ], 42, Zl)), [
          [Qt, !v(R)(_.hideNavigation, "time")]
        ]) : W("", !0),
        qe(Rt, {
          name: v(k)(b.value),
          css: v(I) && !_.timePickerInline
        }, {
          default: ge(() => {
            var G;
            return [
              b.value || _.timePicker || _.timePickerInline ? (w(), V("div", {
                key: 0,
                ref_key: "overlayRef",
                ref: S,
                class: we({
                  dp__overlay: !_.timePickerInline,
                  "dp--overlay-absolute": !n.timePicker && !_.timePickerInline,
                  "dp--overlay-relative": n.timePicker
                }),
                style: Xe(_.timePicker ? { height: `${v(C).modeHeight}px` } : void 0),
                tabindex: _.timePickerInline ? void 0 : 0
              }, [
                fe("div", {
                  class: we(
                    _.timePickerInline ? "dp__time_picker_inline_container" : "dp__overlay_container dp__container_flex dp__time_picker_overlay_container"
                  ),
                  style: { display: "flex" }
                }, [
                  _.$slots["time-picker-overlay"] ? le(_.$slots, "time-picker-overlay", {
                    key: 0,
                    hours: e.hours,
                    minutes: e.minutes,
                    seconds: e.seconds,
                    setHours: f,
                    setMinutes: D,
                    setSeconds: H
                  }) : W("", !0),
                  _.$slots["time-picker-overlay"] ? W("", !0) : (w(), V("div", {
                    key: 1,
                    class: we(_.timePickerInline ? "dp__flex" : "dp__overlay_row dp__flex_row")
                  }, [
                    (w(!0), V(ye, null, Ae(Q.value, (y, l) => Zt((w(), he(Gl, Ne({ key: l }, {
                      ..._.$props,
                      order: l,
                      hours: y.hours,
                      minutes: y.minutes,
                      seconds: y.seconds,
                      closeTimePickerBtn: x.value,
                      disabledTimesConfig: e.disabledTimesConfig,
                      disabled: l === 0 ? _.fixedStart : _.fixedEnd
                    }, {
                      ref_for: !0,
                      ref_key: "timeInputRefs",
                      ref: g,
                      "validate-time": (h, s) => e.validateTime(h, E(s, l, h)),
                      "onUpdate:hours": (h) => f(E(h, l, "hours")),
                      "onUpdate:minutes": (h) => D(E(h, l, "minutes")),
                      "onUpdate:seconds": (h) => H(E(h, l, "seconds")),
                      onMounted: ne,
                      onOverlayClosed: ne,
                      onAmPmChange: d[3] || (d[3] = (h) => _.$emit("am-pm-change", h))
                    }), Ve({ _: 2 }, [
                      Ae(v(ie), (h, s) => ({
                        name: h,
                        fn: ge((X) => [
                          le(_.$slots, h, Re(We(X)))
                        ])
                      }))
                    ]), 1040, ["validate-time", "onUpdate:hours", "onUpdate:minutes", "onUpdate:seconds"])), [
                      [Qt, l === 0 ? !0 : F.value]
                    ])), 128))
                  ], 2)),
                  !_.timePicker && !_.timePickerInline ? Zt((w(), V("button", {
                    key: 2,
                    ref_key: "closeTimePickerBtn",
                    ref: x,
                    type: "button",
                    class: we(L.value),
                    "aria-label": (G = v(M)) == null ? void 0 : G.closeTimePicker,
                    tabindex: "0",
                    onKeydown: [
                      d[4] || (d[4] = ce((y) => ae(!1), ["enter"])),
                      d[5] || (d[5] = ce((y) => ae(!1), ["space"]))
                    ],
                    onClick: d[6] || (d[6] = (y) => ae(!1))
                  }, [
                    _.$slots["calendar-icon"] ? le(_.$slots, "calendar-icon", { key: 0 }) : W("", !0),
                    _.$slots["calendar-icon"] ? W("", !0) : (w(), he(v(Vt), { key: 1 }))
                  ], 42, Xl)), [
                    [Qt, !v(R)(_.hideNavigation, "time")]
                  ]) : W("", !0)
                ], 2)
              ], 14, Ql)) : W("", !0)
            ];
          }),
          _: 3
        }, 8, ["name", "css"])
      ]);
    };
  }
}), Wa = (e, t, r, a) => {
  const n = (g, S) => Array.isArray(t[g]) ? t[g][S] : t[g], o = (g) => e.enableSeconds ? Array.isArray(t.seconds) ? t.seconds[g] : t.seconds : 0, i = (g, S) => g ? S !== void 0 ? vt(g, n("hours", S), n("minutes", S), o(S)) : vt(g, t.hours, t.minutes, o()) : In(B(), o(S)), c = (g, S) => {
    t[g] = S;
  }, p = (g, S) => {
    const F = Object.fromEntries(
      Object.keys(t).map((b) => b === g ? [b, S] : [b, t[b]].slice())
    );
    if (e.range && !e.disableTimeRangeValidation) {
      const b = (Q) => r.value ? vt(
        r.value[Q],
        F.hours[Q],
        F.minutes[Q],
        F.seconds[Q]
      ) : null, P = (Q) => Bn(r.value[Q], 0);
      return !(ke(b(0), b(1)) && (Bt(b(0), P(1)) || It(b(1), P(0))));
    }
    return !0;
  }, M = (g, S) => {
    p(g, S) && (c(g, S), a && a());
  }, $ = (g) => {
    M("hours", g);
  }, C = (g) => {
    M("minutes", g);
  }, k = (g) => {
    M("seconds", g);
  }, I = (g, S, F, b) => {
    S && $(g), !S && !F && C(g), F && k(g), r.value && b(r.value);
  }, R = (g) => {
    if (g) {
      const S = Array.isArray(g), F = S ? [+g[0].hours, +g[1].hours] : +g.hours, b = S ? [+g[0].minutes, +g[1].minutes] : +g.minutes, P = S ? [+g[0].seconds, +g[1].seconds] : +g.seconds;
      c("hours", F), c("minutes", b), e.enableSeconds && c("seconds", P);
    }
  }, A = (g, S) => {
    const F = {
      hours: Array.isArray(t.hours) ? t.hours[g] : t.hours,
      disabledArr: []
    };
    return (S || S === 0) && (F.hours = S), Array.isArray(e.disabledTimes) && (F.disabledArr = e.range && Array.isArray(e.disabledTimes[g]) ? e.disabledTimes[g] : e.disabledTimes), F;
  }, x = j(() => (g, S) => {
    var F;
    if (Array.isArray(e.disabledTimes)) {
      const { disabledArr: b, hours: P } = A(g, S), Q = b.filter((ae) => +ae.hours === P);
      return ((F = Q[0]) == null ? void 0 : F.minutes) === "*" ? { hours: [P], minutes: void 0, seconds: void 0 } : {
        hours: [],
        minutes: (Q == null ? void 0 : Q.map((ae) => +ae.minutes)) ?? [],
        seconds: (Q == null ? void 0 : Q.map((ae) => ae.seconds ? +ae.seconds : void 0)) ?? []
      };
    }
    return { hours: [], minutes: [], seconds: [] };
  });
  return {
    setTime: c,
    updateHours: $,
    updateMinutes: C,
    updateSeconds: k,
    getSetDateTime: i,
    updateTimeValues: I,
    getSecondsValue: o,
    assignStartTime: R,
    validateTime: p,
    disabledTimesConfig: x
  };
}, Jl = (e, t) => {
  const { modelValue: r, time: a } = Ut(e, t), { defaultedStartTime: n } = Pe(e), { updateTimeValues: o, getSetDateTime: i, setTime: c, assignStartTime: p, disabledTimesConfig: M, validateTime: $ } = Wa(e, a, r), C = (F) => {
    const { hours: b, minutes: P, seconds: Q } = F;
    return { hours: +b, minutes: +P, seconds: Q ? +Q : 0 };
  }, k = () => {
    if (e.startTime) {
      if (Array.isArray(e.startTime)) {
        const b = C(e.startTime[0]), P = C(e.startTime[1]);
        return [Te(B(), b), Te(B(), P)];
      }
      const F = C(e.startTime);
      return Te(B(), F);
    }
    return e.range ? [null, null] : null;
  }, I = () => {
    if (e.range) {
      const [F, b] = k();
      r.value = [i(F, 0), i(b, 1)];
    } else
      r.value = i(k());
  }, R = (F) => Array.isArray(F) ? [kt(B(F[0])), kt(B(F[1]))] : [kt(F ?? B())], A = (F, b, P) => {
    c("hours", F), c("minutes", b), c("seconds", e.enableSeconds ? P : 0);
  }, x = () => {
    const [F, b] = R(r.value);
    return e.range ? A(
      [F.hours, b.hours],
      [F.minutes, b.minutes],
      [F.seconds, b.minutes]
    ) : A(F.hours, F.minutes, F.seconds);
  };
  Le(() => {
    if (!e.shadow)
      return p(n.value), r.value ? x() : I();
  });
  const g = () => {
    Array.isArray(r.value) ? r.value = r.value.map((F, b) => F && i(F, b)) : r.value = i(r.value), t("time-update");
  };
  return {
    modelValue: r,
    time: a,
    disabledTimesConfig: M,
    updateTime: (F, b = !0, P = !1) => {
      o(F, b, P, g);
    },
    validateTime: $
  };
}, xl = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "TimePickerSolo",
  props: {
    ...et
  },
  emits: ["update:internal-model-value", "time-update", "am-pm-change"],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, o = Dt(), i = Ke(o, "timePicker"), { time: c, modelValue: p, disabledTimesConfig: M, updateTime: $, validateTime: C } = Jl(n, a);
    return t({ getSidebarProps: () => ({
      modelValue: p,
      time: c,
      updateTime: $
    }) }), (I, R) => (w(), he(rn, {
      "multi-calendars": 0,
      stretch: ""
    }, {
      default: ge(() => [
        qe(za, Ne(I.$props, {
          hours: v(c).hours,
          minutes: v(c).minutes,
          seconds: v(c).seconds,
          "internal-model-value": I.internalModelValue,
          "disabled-times-config": v(M),
          "validate-time": v(C),
          "onUpdate:hours": R[0] || (R[0] = (A) => v($)(A)),
          "onUpdate:minutes": R[1] || (R[1] = (A) => v($)(A, !1)),
          "onUpdate:seconds": R[2] || (R[2] = (A) => v($)(A, !1, !0)),
          onAmPmChange: R[3] || (R[3] = (A) => I.$emit("am-pm-change", A))
        }), Ve({ _: 2 }, [
          Ae(v(i), (A, x) => ({
            name: A,
            fn: ge((g) => [
              le(I.$slots, A, Re(We(g)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"])
      ]),
      _: 3
    }));
  }
}), eo = { class: "dp__month_year_row" }, to = ["aria-label", "onClick", "onKeydown"], no = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DpHeader",
  props: {
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    instance: { type: Number, default: 0 },
    years: { type: Array, default: () => [] },
    months: { type: Array, default: () => [] },
    ...et
  },
  emits: ["update-month-year", "mount", "reset-flow", "overlay-closed"],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, {
      defaultedTransitions: o,
      defaultedAriaLabels: i,
      defaultedMultiCalendars: c,
      defaultedFilters: p,
      defaultedConfig: M,
      defaultedHighlight: $
    } = Pe(n), { transitionName: C, showTransition: k } = Lt(o), { buildMatrix: I } = yt(), { handleMonthYearChange: R, isDisabled: A, updateMonthYear: x } = fl(n, a), { showLeftIcon: g, showRightIcon: S } = nn(), F = ee(!1), b = ee(!1), P = ee([null, null, null, null]);
    Le(() => {
      a("mount");
    });
    const Q = (l) => ({
      get: () => n[l],
      set: (h) => {
        const s = l === Ze.month ? Ze.year : Ze.month;
        a("update-month-year", { [l]: h, [s]: n[s] }), l === Ze.month ? ne(!0) : _(!0);
      }
    }), ae = j(Q(Ze.month)), L = j(Q(Ze.year)), ie = j(() => (l) => ({
      month: n.month,
      year: n.year,
      items: l === Ze.month ? n.months : n.years,
      instance: n.instance,
      updateMonthYear: x,
      toggle: l === Ze.month ? ne : _
    })), E = j(() => {
      const l = n.months.find((h) => h.value === n.month);
      return l || { text: "", value: 0 };
    }), f = j(() => Ct(n.months, (l) => {
      const h = n.month === l.value, s = Ft(
        l.value,
        Ra(n.year, n.minDate),
        Oa(n.year, n.maxDate)
      ) || p.value.months.includes(l.value), X = Fa($.value, l.value, n.year);
      return { active: h, disabled: s, highlighted: X };
    })), D = j(() => Ct(n.years, (l) => {
      const h = n.year === l.value, s = Ft(l.value, _t(n.minDate), _t(n.maxDate)) || p.value.years.includes(l.value), X = Kn($.value, l.value);
      return { active: h, disabled: s, highlighted: X };
    })), H = (l, h) => {
      h !== void 0 ? l.value = h : l.value = !l.value, l.value || a("overlay-closed");
    }, ne = (l = !1, h) => {
      d(l), H(F, h);
    }, _ = (l = !1, h) => {
      d(l), H(b, h);
    }, d = (l) => {
      l || a("reset-flow");
    }, O = (l, h) => {
      n.arrowNavigation && (P.value[h] = _e(l), I(P.value, "monthYear"));
    }, G = j(() => {
      var l, h;
      return [
        {
          type: Ze.month,
          index: 1,
          toggle: ne,
          modelValue: ae.value,
          updateModelValue: (s) => ae.value = s,
          text: E.value.text,
          showSelectionGrid: F.value,
          items: f.value,
          ariaLabel: (l = i.value) == null ? void 0 : l.openMonthsOverlay
        },
        {
          type: Ze.year,
          index: 2,
          toggle: _,
          modelValue: L.value,
          updateModelValue: (s) => L.value = s,
          text: n.year,
          showSelectionGrid: b.value,
          items: D.value,
          ariaLabel: (h = i.value) == null ? void 0 : h.openYearsOverlay
        }
      ];
    }), y = j(() => n.disableYearSelect ? [G.value[0]] : n.yearFirst ? [...G.value].reverse() : G.value);
    return t({
      toggleMonthPicker: ne,
      toggleYearPicker: _,
      handleMonthYearChange: R
    }), (l, h) => {
      var s, X, de;
      return w(), V("div", eo, [
        l.$slots["month-year"] ? le(l.$slots, "month-year", Re(Ne({ key: 0 }, { month: e.month, year: e.year, months: e.months, years: e.years, updateMonthYear: v(x), handleMonthYearChange: v(R), instance: e.instance }))) : (w(), V(ye, { key: 1 }, [
          v(g)(v(c), e.instance) && !l.vertical ? (w(), he(Nt, {
            key: 0,
            "aria-label": (s = v(i)) == null ? void 0 : s.prevMonth,
            disabled: v(A)(!1),
            onActivate: h[0] || (h[0] = (T) => v(R)(!1, !0)),
            onSetRef: h[1] || (h[1] = (T) => O(T, 0))
          }, {
            default: ge(() => [
              l.$slots["arrow-left"] ? le(l.$slots, "arrow-left", { key: 0 }) : W("", !0),
              l.$slots["arrow-left"] ? W("", !0) : (w(), he(v(En), { key: 1 }))
            ]),
            _: 3
          }, 8, ["aria-label", "disabled"])) : W("", !0),
          fe("div", {
            class: we(["dp__month_year_wrap", {
              dp__year_disable_select: l.disableYearSelect
            }])
          }, [
            (w(!0), V(ye, null, Ae(y.value, (T, u) => (w(), V(ye, {
              key: T.type
            }, [
              fe("button", {
                ref_for: !0,
                ref: (N) => O(N, u + 1),
                type: "button",
                class: "dp__btn dp__month_year_select",
                tabindex: "0",
                "aria-label": T.ariaLabel,
                onClick: T.toggle,
                onKeydown: [
                  ce(De(T.toggle, ["prevent"]), ["enter"]),
                  ce(De(T.toggle, ["prevent"]), ["space"])
                ]
              }, [
                l.$slots[T.type] ? le(l.$slots, T.type, {
                  key: 0,
                  text: T.text,
                  value: n[T.type]
                }) : W("", !0),
                l.$slots[T.type] ? W("", !0) : (w(), V(ye, { key: 1 }, [
                  it(Be(T.text), 1)
                ], 64))
              ], 40, to),
              qe(Rt, {
                name: v(C)(T.showSelectionGrid),
                css: v(k)
              }, {
                default: ge(() => [
                  T.showSelectionGrid ? (w(), he(zt, {
                    key: 0,
                    items: T.items,
                    "arrow-navigation": l.arrowNavigation,
                    "hide-navigation": l.hideNavigation,
                    "is-last": l.autoApply && !v(M).keepActionRow,
                    "skip-button-ref": !1,
                    config: l.config,
                    type: T.type,
                    "header-refs": [],
                    "esc-close": l.escClose,
                    "text-input": l.textInput,
                    onSelected: T.updateModelValue,
                    onToggle: T.toggle
                  }, Ve({
                    "button-icon": ge(() => [
                      l.$slots["calendar-icon"] ? le(l.$slots, "calendar-icon", { key: 0 }) : W("", !0),
                      l.$slots["calendar-icon"] ? W("", !0) : (w(), he(v(Vt), { key: 1 }))
                    ]),
                    _: 2
                  }, [
                    l.$slots[`${T.type}-overlay-value`] ? {
                      name: "item",
                      fn: ge(({ item: N }) => [
                        le(l.$slots, `${T.type}-overlay-value`, {
                          text: N.text,
                          value: N.value
                        })
                      ]),
                      key: "0"
                    } : void 0,
                    l.$slots[`${T.type}-overlay`] ? {
                      name: "overlay",
                      fn: ge(() => [
                        le(l.$slots, `${T.type}-overlay`, Re(We(ie.value(T.type))))
                      ]),
                      key: "1"
                    } : void 0,
                    l.$slots[`${T.type}-overlay-header`] ? {
                      name: "header",
                      fn: ge(() => [
                        le(l.$slots, `${T.type}-overlay-header`, {
                          toggle: T.toggle
                        })
                      ]),
                      key: "2"
                    } : void 0
                  ]), 1032, ["items", "arrow-navigation", "hide-navigation", "is-last", "config", "type", "esc-close", "text-input", "onSelected", "onToggle"])) : W("", !0)
                ]),
                _: 2
              }, 1032, ["name", "css"])
            ], 64))), 128))
          ], 2),
          v(g)(v(c), e.instance) && l.vertical ? (w(), he(Nt, {
            key: 1,
            "aria-label": (X = v(i)) == null ? void 0 : X.prevMonth,
            disabled: v(A)(!1),
            onActivate: h[2] || (h[2] = (T) => v(R)(!1, !0))
          }, {
            default: ge(() => [
              l.$slots["arrow-up"] ? le(l.$slots, "arrow-up", { key: 0 }) : W("", !0),
              l.$slots["arrow-up"] ? W("", !0) : (w(), he(v(Vn), { key: 1 }))
            ]),
            _: 3
          }, 8, ["aria-label", "disabled"])) : W("", !0),
          v(S)(v(c), e.instance) ? (w(), he(Nt, {
            key: 2,
            ref: "rightIcon",
            disabled: v(A)(!0),
            "aria-label": (de = v(i)) == null ? void 0 : de.nextMonth,
            onActivate: h[3] || (h[3] = (T) => v(R)(!0, !0)),
            onSetRef: h[4] || (h[4] = (T) => O(T, l.disableYearSelect ? 2 : 3))
          }, {
            default: ge(() => [
              l.$slots[l.vertical ? "arrow-down" : "arrow-right"] ? le(l.$slots, l.vertical ? "arrow-down" : "arrow-right", { key: 0 }) : W("", !0),
              l.$slots[l.vertical ? "arrow-down" : "arrow-right"] ? W("", !0) : (w(), he(Nn(l.vertical ? v(Ln) : v(Fn)), { key: 1 }))
            ]),
            _: 3
          }, 8, ["disabled", "aria-label"])) : W("", !0)
        ], 64))
      ]);
    };
  }
}), ao = ["aria-label"], ro = {
  class: "dp__calendar_header",
  role: "row"
}, lo = {
  key: 0,
  class: "dp__calendar_header_item",
  role: "gridcell"
}, oo = /* @__PURE__ */ fe("div", { class: "dp__calendar_header_separator" }, null, -1), so = ["aria-label"], io = {
  key: 0,
  role: "gridcell",
  class: "dp__calendar_item dp__week_num"
}, uo = { class: "dp__cell_inner" }, co = ["id", "aria-selected", "aria-disabled", "aria-label", "onClick", "onKeydown", "onMouseenter", "onMouseleave"], fo = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DpCalendar",
  props: {
    mappedDates: { type: Array, default: () => [] },
    instance: { type: Number, default: 0 },
    month: { type: Number, default: 0 },
    year: { type: Number, default: 0 },
    ...et
  },
  emits: [
    "select-date",
    "set-hover-date",
    "handle-scroll",
    "mount",
    "handle-swipe",
    "handle-space",
    "tooltip-open",
    "tooltip-close"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, { buildMultiLevelMatrix: o } = yt(), {
      defaultedTransitions: i,
      defaultedConfig: c,
      defaultedAriaLabels: p,
      defaultedMultiCalendars: M,
      defaultedWeekNumbers: $
    } = Pe(n), C = ee(null), k = ee({
      bottom: "",
      left: "",
      transform: ""
    }), I = ee([]), R = ee(null), A = ee(!0), x = ee(""), g = ee({ startX: 0, endX: 0, startY: 0, endY: 0 }), S = ee([]), F = ee({ left: "50%" }), b = j(() => n.calendar ? n.calendar(n.mappedDates) : n.mappedDates), P = j(() => n.dayNames ? Array.isArray(n.dayNames) ? n.dayNames : n.dayNames(n.locale, +n.weekStart) : Fr(n.formatLocale, n.locale, +n.weekStart));
    Le(() => {
      a("mount", { cmp: "calendar", refs: I }), c.value.noSwipe || R.value && (R.value.addEventListener("touchstart", _, { passive: !1 }), R.value.addEventListener("touchend", d, { passive: !1 }), R.value.addEventListener("touchmove", O, { passive: !1 })), n.monthChangeOnScroll && R.value && R.value.addEventListener("wheel", l, { passive: !1 });
    });
    const Q = (T) => T ? n.vertical ? "vNext" : "next" : n.vertical ? "vPrevious" : "previous", ae = (T, u) => {
      if (n.transitions) {
        const N = je(st(B(), n.month, n.year));
        x.value = Ee(je(st(B(), T, u)), N) ? i.value[Q(!0)] : i.value[Q(!1)], A.value = !1, gt(() => {
          A.value = !0;
        });
      }
    }, L = j(
      () => ({
        [n.calendarClassName]: !!n.calendarClassName
      })
    ), ie = j(() => (T) => {
      const u = Vr(T);
      return {
        dp__marker_dot: u.type === "dot",
        dp__marker_line: u.type === "line"
      };
    }), E = j(() => (T) => ke(T, C.value)), f = j(() => ({
      dp__calendar: !0,
      dp__calendar_next: M.value.count > 0 && n.instance !== 0
    })), D = j(() => (T) => n.hideOffsetDates ? T.current : !0), H = async (T, u, N) => {
      var q, K;
      if (a("set-hover-date", T), (K = (q = T.marker) == null ? void 0 : q.tooltip) != null && K.length) {
        const te = _e(I.value[u][N]);
        if (te) {
          const { width: re, height: be } = te.getBoundingClientRect();
          C.value = T.value;
          let Y = { left: `${re / 2}px` }, U = -50;
          if (await gt(), S.value[0]) {
            const { left: Me, width: Z } = S.value[0].getBoundingClientRect();
            Me < 0 && (Y = { left: "0" }, U = 0, F.value.left = `${re / 2}px`), window.innerWidth < Me + Z && (Y = { right: "0" }, U = 0, F.value.left = `${Z - re / 2}px`);
          }
          k.value = {
            bottom: `${be}px`,
            ...Y,
            transform: `translateX(${U}%)`
          }, a("tooltip-open", T.marker);
        }
      }
    }, ne = (T) => {
      C.value && (C.value = null, k.value = JSON.parse(JSON.stringify({ bottom: "", left: "", transform: "" })), a("tooltip-close", T.marker));
    }, _ = (T) => {
      g.value.startX = T.changedTouches[0].screenX, g.value.startY = T.changedTouches[0].screenY;
    }, d = (T) => {
      g.value.endX = T.changedTouches[0].screenX, g.value.endY = T.changedTouches[0].screenY, G();
    }, O = (T) => {
      n.vertical && !n.inline && T.preventDefault();
    }, G = () => {
      const T = n.vertical ? "Y" : "X";
      Math.abs(g.value[`start${T}`] - g.value[`end${T}`]) > 10 && a("handle-swipe", g.value[`start${T}`] > g.value[`end${T}`] ? "right" : "left");
    }, y = (T, u, N) => {
      T && (Array.isArray(I.value[u]) ? I.value[u][N] = T : I.value[u] = [T]), n.arrowNavigation && o(I.value, "calendar");
    }, l = (T) => {
      n.monthChangeOnScroll && (T.preventDefault(), a("handle-scroll", T));
    }, h = (T) => $.value.type === "local" ? lr(T.value, { weekStartsOn: +n.weekStart }) : $.value.type === "iso" ? or(T.value) : typeof $.value.type == "function" ? $.value.type(T.value) : "", s = (T) => {
      const u = T[0];
      return $.value.hideOnOffsetDates ? T.some((N) => N.current) ? h(u) : "" : h(u);
    }, X = (T, u) => {
      ft(T, c.value), a("select-date", u);
    }, de = (T) => {
      ft(T, c.value);
    };
    return t({ triggerTransition: ae }), (T, u) => {
      var N;
      return w(), V("div", {
        class: we(f.value)
      }, [
        fe("div", {
          ref_key: "calendarWrapRef",
          ref: R,
          role: "grid",
          class: we(L.value),
          "aria-label": (N = v(p)) == null ? void 0 : N.calendarWrap
        }, [
          (w(), V(ye, { key: 0 }, [
            fe("div", ro, [
              T.weekNumbers ? (w(), V("div", lo, Be(T.weekNumName), 1)) : W("", !0),
              (w(!0), V(ye, null, Ae(P.value, (q, K) => (w(), V("div", {
                key: K,
                class: "dp__calendar_header_item",
                role: "gridcell"
              }, [
                T.$slots["calendar-header"] ? le(T.$slots, "calendar-header", {
                  key: 0,
                  day: q,
                  index: K
                }) : W("", !0),
                T.$slots["calendar-header"] ? W("", !0) : (w(), V(ye, { key: 1 }, [
                  it(Be(q), 1)
                ], 64))
              ]))), 128))
            ]),
            oo,
            qe(Rt, {
              name: x.value,
              css: !!T.transitions
            }, {
              default: ge(() => {
                var q;
                return [
                  A.value ? (w(), V("div", {
                    key: 0,
                    class: "dp__calendar",
                    role: "rowgroup",
                    "aria-label": ((q = v(p)) == null ? void 0 : q.calendarDays) || void 0
                  }, [
                    (w(!0), V(ye, null, Ae(b.value, (K, te) => (w(), V("div", {
                      key: te,
                      class: "dp__calendar_row",
                      role: "row"
                    }, [
                      T.weekNumbers ? (w(), V("div", io, [
                        fe("div", uo, Be(s(K.days)), 1)
                      ])) : W("", !0),
                      (w(!0), V(ye, null, Ae(K.days, (re, be) => {
                        var Y, U, Me;
                        return w(), V("div", {
                          id: re.value.toISOString().split("T")[0],
                          ref_for: !0,
                          ref: (Z) => y(Z, te, be),
                          key: be + te,
                          role: "gridcell",
                          class: "dp__calendar_item",
                          "aria-selected": re.classData.dp__active_date || re.classData.dp__range_start || re.classData.dp__range_start,
                          "aria-disabled": re.classData.dp__cell_disabled || void 0,
                          "aria-label": (U = (Y = v(p)) == null ? void 0 : Y.day) == null ? void 0 : U.call(Y, re),
                          tabindex: "0",
                          onClick: De((Z) => X(Z, re), ["prevent"]),
                          onKeydown: [
                            ce((Z) => T.$emit("select-date", re), ["enter"]),
                            ce((Z) => T.$emit("handle-space", re), ["space"])
                          ],
                          onMouseenter: (Z) => H(re, te, be),
                          onMouseleave: (Z) => ne(re)
                        }, [
                          fe("div", {
                            class: we(["dp__cell_inner", re.classData])
                          }, [
                            T.$slots.day && D.value(re) ? le(T.$slots, "day", {
                              key: 0,
                              day: +re.text,
                              date: re.value
                            }) : W("", !0),
                            T.$slots.day ? W("", !0) : (w(), V(ye, { key: 1 }, [
                              it(Be(re.text), 1)
                            ], 64)),
                            re.marker && D.value(re) ? (w(), V(ye, { key: 2 }, [
                              T.$slots.marker ? le(T.$slots, "marker", {
                                key: 0,
                                marker: re.marker,
                                day: +re.text,
                                date: re.value
                              }) : (w(), V("div", {
                                key: 1,
                                class: we(ie.value(re.marker)),
                                style: Xe(re.marker.color ? { backgroundColor: re.marker.color } : {})
                              }, null, 6))
                            ], 64)) : W("", !0),
                            E.value(re.value) ? (w(), V("div", {
                              key: 3,
                              ref_for: !0,
                              ref_key: "activeTooltip",
                              ref: S,
                              class: "dp__marker_tooltip",
                              style: Xe(k.value)
                            }, [
                              (Me = re.marker) != null && Me.tooltip ? (w(), V("div", {
                                key: 0,
                                class: "dp__tooltip_content",
                                onClick: de
                              }, [
                                (w(!0), V(ye, null, Ae(re.marker.tooltip, (Z, Ue) => (w(), V("div", {
                                  key: Ue,
                                  class: "dp__tooltip_text"
                                }, [
                                  T.$slots["marker-tooltip"] ? le(T.$slots, "marker-tooltip", {
                                    key: 0,
                                    tooltip: Z,
                                    day: re.value
                                  }) : W("", !0),
                                  T.$slots["marker-tooltip"] ? W("", !0) : (w(), V(ye, { key: 1 }, [
                                    fe("div", {
                                      class: "dp__tooltip_mark",
                                      style: Xe(Z.color ? { backgroundColor: Z.color } : {})
                                    }, null, 4),
                                    fe("div", null, Be(Z.text), 1)
                                  ], 64))
                                ]))), 128)),
                                fe("div", {
                                  class: "dp__arrow_bottom_tp",
                                  style: Xe(F.value)
                                }, null, 4)
                              ])) : W("", !0)
                            ], 4)) : W("", !0)
                          ], 2)
                        ], 40, co);
                      }), 128))
                    ]))), 128))
                  ], 8, so)) : W("", !0)
                ];
              }),
              _: 3
            }, 8, ["name", "css"])
          ], 64))
        ], 10, ao)
      ], 2);
    };
  }
}), ya = (e) => Array.isArray(e), vo = (e, t, r, a) => {
  const n = ee([]), { modelValue: o, calendars: i, time: c } = Ut(e, t), { defaultedMultiCalendars: p, defaultedStartTime: M } = Pe(e), { validateMonthYearInRange: $, isDisabled: C, isDateRangeAllowed: k, checkMinMaxRange: I } = Mt(e), { updateTimeValues: R, getSetDateTime: A, setTime: x, assignStartTime: g, validateTime: S, disabledTimesConfig: F } = Wa(e, c, o, a), b = j(
    () => (m) => i.value[m] ? i.value[m].month : 0
  ), P = j(
    () => (m) => i.value[m] ? i.value[m].year : 0
  ), Q = (m, z, oe) => {
    var me, Se;
    i.value[m] || (i.value[m] = { month: 0, year: 0 }), i.value[m].month = ca(z) ? (me = i.value[m]) == null ? void 0 : me.month : z, i.value[m].year = ca(oe) ? (Se = i.value[m]) == null ? void 0 : Se.year : oe;
  }, ae = () => {
    e.autoApply && t("select-date");
  };
  mt(o, (m, z) => {
    JSON.stringify(m) !== JSON.stringify(z) && E();
  }), Le(() => {
    e.shadow || (o.value || (l(), M.value && g(M.value)), E(!0), e.focusStartDate && e.startDate && l());
  });
  const L = j(() => {
    var m;
    return (m = e.flow) != null && m.length && !e.partialFlow ? e.flowStep === e.flow.length : !0;
  }), ie = () => {
    e.autoApply && L.value && t("auto-apply", e.partialFlow);
  }, E = (m = !1) => {
    if (o.value)
      return Array.isArray(o.value) ? (n.value = o.value, d(m)) : D(o.value, m);
    if (p.value.count && m && !e.startDate)
      return f(B(), m);
  }, f = (m, z = !1) => {
    if ((!p.value.count || !p.value.static || z) && Q(0, pe(m), ve(m)), p.value.count && !p.value.solo)
      for (let oe = 1; oe < p.value.count; oe++) {
        const me = Te(B(), { month: b.value(oe - 1), year: P.value(oe - 1) }), Se = $a(me, { months: 1 });
        i.value[oe] = { month: pe(Se), year: ve(Se) };
      }
  }, D = (m, z) => {
    f(m), x("hours", Je(m)), x("minutes", at(m)), x("seconds", Pt(m)), p.value.count && z && y();
  }, H = (m) => {
    if (p.value.count) {
      if (p.value.solo)
        return 0;
      const z = pe(m[0]), oe = pe(m[1]);
      return Math.abs(oe - z) < p.value.count ? 0 : 1;
    }
    return 1;
  }, ne = (m, z) => {
    m[1] && e.showLastInRange ? f(m[H(m)], z) : f(m[0], z);
    const oe = (me, Se) => [
      me(m[0]),
      m[1] ? me(m[1]) : c[Se][1]
    ];
    x("hours", oe(Je, "hours")), x("minutes", oe(at, "minutes")), x("seconds", oe(Pt, "seconds"));
  }, _ = (m, z) => {
    if ((e.range || e.weekPicker) && !e.multiDates)
      return ne(m, z);
    if (e.multiDates && z) {
      const oe = m[m.length - 1];
      return D(oe, z);
    }
  }, d = (m) => {
    const z = o.value;
    _(z, m), p.value.count && p.value.solo && y();
  }, O = (m, z) => {
    const oe = Te(B(), { month: b.value(z), year: P.value(z) }), me = m < 0 ? bt(oe, 1) : Et(oe, 1);
    $(pe(me), ve(me), m < 0, e.preventMinMaxNavigation) && (Q(z, pe(me), ve(me)), t("update-month-year", { instance: z, month: pe(me), year: ve(me) }), p.value.count && !p.value.solo && G(z), r());
  }, G = (m) => {
    for (let z = m - 1; z >= 0; z--) {
      const oe = Et(Te(B(), { month: b.value(z + 1), year: P.value(z + 1) }), 1);
      Q(z, pe(oe), ve(oe));
    }
    for (let z = m + 1; z <= p.value.count - 1; z++) {
      const oe = bt(Te(B(), { month: b.value(z - 1), year: P.value(z - 1) }), 1);
      Q(z, pe(oe), ve(oe));
    }
  }, y = () => {
    if (Array.isArray(o.value) && o.value.length === 2) {
      const m = B(
        B(o.value[1] ? o.value[1] : bt(o.value[0], 1))
      ), [z, oe] = [pe(o.value[0]), ve(o.value[0])], [me, Se] = [pe(o.value[1]), ve(o.value[1])];
      (z !== me || z === me && oe !== Se) && p.value.solo && Q(1, pe(m), ve(m));
    } else
      o.value && !Array.isArray(o.value) && (Q(0, pe(o.value), ve(o.value)), f(B()));
  }, l = () => {
    e.startDate && (Q(0, pe(B(e.startDate)), ve(B(e.startDate))), p.value.count && G(0));
  }, h = jr((m, z) => {
    e.monthChangeOnScroll && O(e.monthChangeOnScroll !== "inverse" ? -m.deltaY : m.deltaY, z);
  }, 50), s = (m, z, oe = !1) => {
    e.monthChangeOnArrows && e.vertical === oe && X(m, z);
  }, X = (m, z) => {
    O(m === "right" ? -1 : 1, z);
  }, de = (m) => e.markers.find(
    (z) => ke(qr(m.value), xe(B(z.date), e.timezone))
  ), T = (m, z) => {
    switch (e.sixWeeks === !0 ? "append" : e.sixWeeks) {
      case "prepend":
        return [!0, !1];
      case "center":
        return [m == 0, !0];
      case "fair":
        return [m == 0 || z > m, !0];
      case "append":
        return [!1, !1];
      default:
        return [!1, !1];
    }
  }, u = (m, z, oe, me) => {
    if (e.sixWeeks && m.length < 6) {
      const Se = 6 - m.length, J = (z.getDay() + 7 - me) % 7, se = 6 - (oe.getDay() + 7 - me) % 7, [rt, lt] = T(J, se);
      for (let ot = 1; ot <= Se; ot++)
        if (lt ? !!(ot % 2) == rt : rt) {
          const Kt = m[0].days[0], cn = N(pt(Kt.value, -7), pe(z));
          m.unshift({ days: cn });
        } else {
          const Kt = m[m.length - 1], cn = Kt.days[Kt.days.length - 1], Ka = N(pt(cn.value, 1), pe(z));
          m.push({ days: Ka });
        }
    }
    return m;
  }, N = (m, z) => {
    const oe = B(m), me = [];
    for (let Se = 0; Se < 7; Se++) {
      const J = pt(oe, Se), ue = pe(J) !== z;
      me.push({
        text: e.hideOffsetDates && ue ? "" : J.getDate(),
        value: J,
        current: !ue,
        classData: {}
      });
    }
    return me;
  }, q = (m, z) => {
    const oe = [], me = new Date(z, m), Se = new Date(z, m + 1, 0), J = e.weekStart, ue = wa(me, { weekStartsOn: J }), se = (rt) => {
      const lt = N(rt, m);
      if (oe.push({ days: lt }), !oe[oe.length - 1].days.some(
        (ot) => ke(je(ot.value), je(Se))
      )) {
        const ot = pt(rt, 7);
        se(ot);
      }
    };
    return se(ue), u(oe, me, Se, J);
  }, K = (m) => (o.value = Jt(B(m.value), e.timezone, e.weekStart), t("date-update", m.value), ie()), te = (m) => {
    const z = vt(B(m.value), c.hours, c.minutes, ze());
    t("date-update", z), e.multiDates ? Gn(z, o, e.multiDatesLimit) : o.value = z, a(), gt().then(() => {
      ie();
    });
  }, re = (m) => e.noDisabledRange ? Na(n.value[0], m).some((oe) => C(oe)) : !1, be = () => {
    n.value = o.value ? o.value.slice() : [], n.value.length === 2 && !(e.fixedStart || e.fixedEnd) && (n.value = []);
  }, Y = (m, z) => {
    const oe = [B(m.value), pt(B(m.value), +e.autoRange)];
    k(oe) ? (z && U(m.value), n.value = oe) : t("invalid-date", m.value);
  }, U = (m) => {
    const z = pe(B(m)), oe = ve(B(m));
    if (Q(0, z, oe), p.value.count > 0)
      for (let me = 1; me < p.value.count; me++) {
        const Se = Zr(
          Te(B(m), { year: b.value(me - 1), month: P.value(me - 1) })
        );
        Q(me, Se.month, Se.year);
      }
  }, Me = (m) => Array.isArray(o.value) && o.value.length === 2 ? e.fixedStart && (Ee(m, o.value[0]) || ke(m, o.value[0])) ? [o.value[0], m] : e.fixedEnd && (Ye(m, o.value[1]) || ke(m, o.value[1])) ? [m, o.value[1]] : (t("invalid-fixed-range", m), o.value) : [], Z = (m) => {
    if (re(m.value) || !I(m.value, o.value, e.fixedStart ? 0 : 1))
      return t("invalid-date", m.value);
    n.value = Me(B(m.value));
  }, Ue = (m, z) => {
    if (be(), e.autoRange)
      return Y(m, z);
    if (e.fixedStart || e.fixedEnd)
      return Z(m);
    n.value[0] ? I(B(m.value), o.value) && !re(m.value) ? Ye(B(m.value), B(n.value[0])) ? (n.value.unshift(B(m.value)), t("range-end", n.value[0])) : (n.value[1] = B(m.value), t("range-end", n.value[1])) : (e.autoApply && t("auto-apply-invalid", m.value), t("invalid-date", m.value)) : (n.value[0] = B(m.value), t("range-start", n.value[0]));
  }, ze = (m = !0) => e.enableSeconds ? Array.isArray(c.seconds) ? m ? c.seconds[0] : c.seconds[1] : c.seconds : 0, $t = (m) => {
    n.value[m] = vt(
      n.value[m],
      c.hours[m],
      c.minutes[m],
      ze(m !== 1)
    );
  }, Wt = () => {
    var m, z;
    n.value[0] && n.value[1] && +((m = n.value) == null ? void 0 : m[0]) > +((z = n.value) == null ? void 0 : z[1]) && (n.value.reverse(), t("range-start", n.value[0]), t("range-end", n.value[1]));
  }, on = () => {
    n.value.length && (n.value[0] && !n.value[1] ? $t(0) : ($t(0), $t(1), a()), Wt(), o.value = n.value.slice(), ln(n.value, t, e.autoApply, e.modelAuto));
  }, Ot = (m, z = !1) => {
    if (C(m.value) || !m.current && e.hideOffsetDates)
      return t("invalid-date", m.value);
    if (e.weekPicker)
      return K(m);
    if (!e.range)
      return te(m);
    ya(c.hours) && ya(c.minutes) && !e.multiDates && (Ue(m, z), on());
  }, Ge = (m, z) => {
    var me;
    Q(m, z.month, z.year), p.value.count && !p.value.solo && G(m), t("update-month-year", { instance: m, month: z.month, year: z.year }), r(p.value.solo ? m : void 0);
    const oe = (me = e.flow) != null && me.length ? e.flow[e.flowStep] : void 0;
    !z.fromNav && (oe === tt.month || oe === tt.year) && a();
  }, sn = (m, z) => {
    La({ value: m, modelValue: o, range: e.range, timezone: z ? void 0 : e.timezone }), ae(), e.multiCalendars && gt().then(() => E(!0));
  }, un = () => {
    e.range ? o.value && Array.isArray(o.value) && o.value[0] ? o.value = Ye(B(), o.value[0]) ? [B(), o.value[0]] : [o.value[0], B()] : o.value = [B()] : o.value = B(), ae();
  }, jt = () => {
    if (Array.isArray(o.value))
      if (e.multiDates) {
        const m = dn();
        o.value[o.value.length - 1] = A(m);
      } else
        o.value = o.value.map((m, z) => m && A(m, z));
    else
      o.value = A(o.value);
    t("time-update");
  }, dn = () => Array.isArray(o.value) && o.value.length ? o.value[o.value.length - 1] : null;
  return {
    calendars: i,
    modelValue: o,
    month: b,
    year: P,
    time: c,
    disabledTimesConfig: F,
    validateTime: S,
    getCalendarDays: q,
    getMarker: de,
    handleScroll: h,
    handleSwipe: X,
    handleArrow: s,
    selectDate: Ot,
    updateMonthYear: Ge,
    presetDate: sn,
    selectCurrentDate: un,
    updateTime: (m, z = !0, oe = !1) => {
      R(m, z, oe, jt);
    }
  };
}, mo = { key: 0 }, go = /* @__PURE__ */ Ie({
  __name: "DatePicker",
  props: {
    ...et
  },
  emits: [
    "tooltip-open",
    "tooltip-close",
    "mount",
    "update:internal-model-value",
    "update-flow-step",
    "reset-flow",
    "auto-apply",
    "focus-menu",
    "select-date",
    "range-start",
    "range-end",
    "invalid-fixed-range",
    "time-update",
    "am-pm-change",
    "time-picker-open",
    "time-picker-close",
    "recalculate-position",
    "update-month-year",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, {
      calendars: o,
      month: i,
      year: c,
      modelValue: p,
      time: M,
      disabledTimesConfig: $,
      validateTime: C,
      getCalendarDays: k,
      getMarker: I,
      handleArrow: R,
      handleScroll: A,
      handleSwipe: x,
      selectDate: g,
      updateMonthYear: S,
      presetDate: F,
      selectCurrentDate: b,
      updateTime: P
    } = vo(n, a, y, l), Q = Dt(), { setHoverDate: ae, getDayClassData: L, clearHoverDate: ie } = yl(p, n), { defaultedMultiCalendars: E } = Pe(n), f = ee([]), D = ee([]), H = ee(null), ne = Ke(Q, "calendar"), _ = Ke(Q, "monthYear"), d = Ke(Q, "timePicker"), O = (u) => {
      n.shadow || a("mount", u);
    };
    mt(
      o,
      () => {
        n.shadow || setTimeout(() => {
          a("recalculate-position");
        }, 0);
      },
      { deep: !0 }
    );
    const G = j(() => (u) => k(i.value(u), c.value(u)).map((N) => ({
      ...N,
      days: N.days.map((q) => (q.marker = I(q), q.classData = L(q), q))
    })));
    function y(u) {
      var N;
      u || u === 0 ? (N = D.value[u]) == null || N.triggerTransition(i.value(u), c.value(u)) : D.value.forEach((q, K) => q.triggerTransition(i.value(K), c.value(K)));
    }
    function l() {
      a("update-flow-step");
    }
    const h = (u, N = !1) => {
      g(u, N), n.spaceConfirm && a("select-date");
    };
    return t({
      clearHoverDate: ie,
      presetDate: F,
      selectCurrentDate: b,
      toggleMonthPicker: (u, N, q = 0) => {
        var K;
        (K = f.value[q]) == null || K.toggleMonthPicker(u, N);
      },
      toggleYearPicker: (u, N, q = 0) => {
        var K;
        (K = f.value[q]) == null || K.toggleYearPicker(u, N);
      },
      toggleTimePicker: (u, N, q) => {
        var K;
        (K = H.value) == null || K.toggleTimePicker(u, N, q);
      },
      handleArrow: R,
      updateMonthYear: S,
      getSidebarProps: () => ({
        modelValue: p,
        month: i,
        year: c,
        time: M,
        updateTime: P,
        updateMonthYear: S,
        selectDate: g,
        presetDate: F
      })
    }), (u, N) => (w(), V(ye, null, [
      qe(rn, {
        "multi-calendars": v(E).count
      }, {
        default: ge(({ instance: q, index: K }) => [
          u.disableMonthYearSelect ? W("", !0) : (w(), he(no, Ne({
            key: 0,
            ref: (te) => {
              te && (f.value[K] = te);
            },
            months: v(Ca)(u.formatLocale, u.locale, u.monthNameFormat),
            years: v(jn)(u.yearRange, u.reverseYears),
            month: v(i)(q),
            year: v(c)(q),
            instance: q
          }, u.$props, {
            onMount: N[0] || (N[0] = (te) => O(v(wt).header)),
            onResetFlow: N[1] || (N[1] = (te) => u.$emit("reset-flow")),
            onUpdateMonthYear: (te) => v(S)(q, te),
            onOverlayClosed: N[2] || (N[2] = (te) => u.$emit("focus-menu"))
          }), Ve({ _: 2 }, [
            Ae(v(_), (te, re) => ({
              name: te,
              fn: ge((be) => [
                le(u.$slots, te, Re(We(be)))
              ])
            }))
          ]), 1040, ["months", "years", "month", "year", "instance", "onUpdateMonthYear"])),
          qe(fo, Ne({
            ref: (te) => {
              te && (D.value[K] = te);
            },
            "mapped-dates": G.value(q),
            month: v(i)(q),
            year: v(c)(q),
            instance: q
          }, u.$props, {
            onSelectDate: (te) => v(g)(te, q !== 1),
            onHandleSpace: (te) => h(te, q !== 1),
            onSetHoverDate: N[3] || (N[3] = (te) => v(ae)(te)),
            onHandleScroll: (te) => v(A)(te, q),
            onHandleSwipe: (te) => v(x)(te, q),
            onMount: N[4] || (N[4] = (te) => O(v(wt).calendar)),
            onResetFlow: N[5] || (N[5] = (te) => u.$emit("reset-flow")),
            onTooltipOpen: N[6] || (N[6] = (te) => u.$emit("tooltip-open", te)),
            onTooltipClose: N[7] || (N[7] = (te) => u.$emit("tooltip-close", te))
          }), Ve({ _: 2 }, [
            Ae(v(ne), (te, re) => ({
              name: te,
              fn: ge((be) => [
                le(u.$slots, te, Re(We({ ...be })))
              ])
            }))
          ]), 1040, ["mapped-dates", "month", "year", "instance", "onSelectDate", "onHandleSpace", "onHandleScroll", "onHandleSwipe"])
        ]),
        _: 3
      }, 8, ["multi-calendars"]),
      u.enableTimePicker ? (w(), V("div", mo, [
        u.$slots["time-picker"] ? le(u.$slots, "time-picker", Re(Ne({ key: 0 }, { time: v(M), updateTime: v(P) }))) : (w(), he(za, Ne({
          key: 1,
          ref_key: "timePickerRef",
          ref: H
        }, u.$props, {
          hours: v(M).hours,
          minutes: v(M).minutes,
          seconds: v(M).seconds,
          "internal-model-value": u.internalModelValue,
          "disabled-times-config": v($),
          "validate-time": v(C),
          onMount: N[8] || (N[8] = (q) => O(v(wt).timePicker)),
          "onUpdate:hours": N[9] || (N[9] = (q) => v(P)(q)),
          "onUpdate:minutes": N[10] || (N[10] = (q) => v(P)(q, !1)),
          "onUpdate:seconds": N[11] || (N[11] = (q) => v(P)(q, !1, !0)),
          onResetFlow: N[12] || (N[12] = (q) => u.$emit("reset-flow")),
          onOverlayClosed: N[13] || (N[13] = (q) => u.$emit("time-picker-close")),
          onOverlayOpened: N[14] || (N[14] = (q) => u.$emit("time-picker-open", q)),
          onAmPmChange: N[15] || (N[15] = (q) => u.$emit("am-pm-change", q))
        }), Ve({ _: 2 }, [
          Ae(v(d), (q, K) => ({
            name: q,
            fn: ge((te) => [
              le(u.$slots, q, Re(We(te)))
            ])
          }))
        ]), 1040, ["hours", "minutes", "seconds", "internal-model-value", "disabled-times-config", "validate-time"]))
      ])) : W("", !0)
    ], 64));
  }
}), yo = (e, t) => {
  const r = ee(), { defaultedMultiCalendars: a, defaultedConfig: n, defaultedHighlight: o } = Pe(e), { modelValue: i, year: c, month: p, calendars: M } = Ut(e, t), { isDisabled: $ } = Mt(e), { selectYear: C, groupedYears: k, showYearPicker: I, isDisabled: R, toggleYearPicker: A, handleYearSelect: x, handleYear: g } = Ua({
    modelValue: i,
    multiCalendars: a,
    highlight: o,
    calendars: M,
    month: p,
    year: c,
    props: e,
    emit: t
  }), S = (f, D) => [f, D].map((H) => ct(H, "MMMM", { locale: e.formatLocale })).join("-"), F = j(() => (f) => i.value ? Array.isArray(i.value) ? i.value.some((D) => Jn(f, D)) : Jn(i.value, f) : !1), b = (f) => {
    if (e.range) {
      if (Array.isArray(i.value)) {
        const D = ke(f, i.value[0]) || ke(f, i.value[1]);
        return tn(i.value, r.value, f) && !D;
      }
      return !1;
    }
    return !1;
  }, P = j(() => (f) => {
    const D = Te(/* @__PURE__ */ new Date(), { year: c.value(f) });
    return sr({
      start: ir(D),
      end: ur(D)
    }).map((H) => {
      const ne = dr(H), _ = xn(H), d = $(H), O = b(ne), G = typeof o.value == "function" ? o.value({ quarter: ea(ne), year: ve(ne) }) : !!o.value.quarters.find(
        (y) => y.quarter === ea(ne) && y.year === ve(ne)
      );
      return {
        text: S(ne, _),
        value: ne,
        active: F.value(ne),
        highlighted: G,
        disabled: d,
        isBetween: O
      };
    });
  }), Q = (f) => {
    Gn(f, i, e.multiDatesLimit), t("auto-apply", !0);
  }, ae = (f) => {
    const D = qn(i, f, t);
    ln(D, t, e.autoApply, e.modelAuto);
  }, L = (f) => {
    i.value = f, t("auto-apply");
  };
  return {
    defaultedConfig: n,
    defaultedMultiCalendars: a,
    groupedYears: k,
    year: c,
    isDisabled: R,
    quarters: P,
    showYearPicker: I,
    modelValue: i,
    setHoverDate: (f) => {
      r.value = f;
    },
    selectYear: C,
    selectQuarter: (f, D, H) => {
      if (!H)
        return M.value[D].month = pe(xn(f)), e.multiDates ? Q(f) : e.range ? ae(f) : L(f);
    },
    toggleYearPicker: A,
    handleYearSelect: x,
    handleYear: g
  };
}, ho = { class: "dp--quarter-items" }, po = ["disabled", "onClick", "onMouseover"], bo = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "QuarterPicker",
  props: {
    ...et
  },
  emits: [
    "update:internal-model-value",
    "reset-flow",
    "overlay-closed",
    "auto-apply",
    "range-start",
    "range-end"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, o = Dt(), i = Ke(o, "yearMode"), {
      defaultedMultiCalendars: c,
      defaultedConfig: p,
      groupedYears: M,
      year: $,
      isDisabled: C,
      quarters: k,
      modelValue: I,
      showYearPicker: R,
      setHoverDate: A,
      selectQuarter: x,
      toggleYearPicker: g,
      handleYearSelect: S,
      handleYear: F
    } = yo(n, a);
    return t({ getSidebarProps: () => ({
      modelValue: I,
      year: $,
      selectQuarter: x,
      handleYearSelect: S,
      handleYear: F
    }) }), (P, Q) => (w(), he(rn, {
      "multi-calendars": v(c).count,
      stretch: ""
    }, {
      default: ge(({ instance: ae }) => [
        fe("div", {
          class: "dp-quarter-picker-wrap",
          style: Xe({ minHeight: `${v(p).modeHeight}px` })
        }, [
          fe("div", null, [
            qe(Va, Ne(P.$props, {
              items: v(M)(ae),
              instance: ae,
              "show-year-picker": v(R)[ae],
              year: v($)(ae),
              "is-disabled": (L) => v(C)(ae, L),
              onHandleYear: (L) => v(F)(ae, L),
              onYearSelect: (L) => v(S)(L, ae),
              onToggleYearPicker: (L) => v(g)(ae, L == null ? void 0 : L.flow, L == null ? void 0 : L.show)
            }), Ve({ _: 2 }, [
              Ae(v(i), (L, ie) => ({
                name: L,
                fn: ge((E) => [
                  le(P.$slots, L, Re(We(E)))
                ])
              }))
            ]), 1040, ["items", "instance", "show-year-picker", "year", "is-disabled", "onHandleYear", "onYearSelect", "onToggleYearPicker"])
          ]),
          fe("div", ho, [
            (w(!0), V(ye, null, Ae(v(k)(ae), (L, ie) => (w(), V("div", { key: ie }, [
              fe("button", {
                type: "button",
                class: we(["dp--qr-btn", {
                  "dp--qr-btn-active": L.active,
                  "dp--qr-btn-between": L.isBetween,
                  "dp--qr-btn-disabled": L.disabled,
                  "dp--highlighted": L.highlighted
                }]),
                disabled: L.disabled,
                onClick: (E) => v(x)(L.value, ae, L.disabled),
                onMouseover: (E) => v(A)(L.value)
              }, [
                P.$slots.quarter ? le(P.$slots, "quarter", {
                  key: 0,
                  value: L.value,
                  text: L.text
                }) : (w(), V(ye, { key: 1 }, [
                  it(Be(L.text), 1)
                ], 64))
              ], 42, po)
            ]))), 128))
          ])
        ], 4)
      ]),
      _: 3
    }, 8, ["multi-calendars"]));
  }
}), ko = ["id"], wo = {
  key: 0,
  class: "dp__sidebar_left"
}, Do = {
  key: 1,
  class: "dp--preset-dates"
}, Mo = ["onClick", "onKeydown"], $o = {
  key: 2,
  class: "dp__sidebar_right"
}, To = {
  key: 3,
  class: "dp__action_extra"
}, ha = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "DatepickerMenu",
  props: {
    ...an,
    shadow: { type: Boolean, default: !1 },
    openOnTop: { type: Boolean, default: !1 },
    internalModelValue: { type: [Date, Array], default: null },
    arrMapValues: { type: Object, default: () => ({}) },
    noOverlayFocus: { type: Boolean, default: !1 }
  },
  emits: [
    "close-picker",
    "select-date",
    "auto-apply",
    "time-update",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "update:internal-model-value",
    "recalculate-position",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "auto-apply-invalid",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, o = j(() => {
      const { openOnTop: Y, ...U } = n;
      return {
        ...U,
        flowStep: L.value,
        noOverlayFocus: n.noOverlayFocus
      };
    }), { setMenuFocused: i, setShiftKey: c, control: p } = Ha(), M = Dt(), { defaultedTextInput: $, defaultedInline: C, defaultedConfig: k } = Pe(n), I = ee(null), R = ee(0), A = ee(null), x = ee(null), g = ee(!1), S = ee(null);
    Le(() => {
      if (!n.shadow) {
        g.value = !0, F(), window.addEventListener("resize", F);
        const Y = _e(A);
        if (Y && !$.value.enabled && !C.value.enabled && (i(!0), H()), Y) {
          const U = (Me) => {
            k.value.allowPreventDefault && Me.preventDefault(), ft(Me, k.value, !0);
          };
          Y.addEventListener("pointerdown", U), Y.addEventListener("mousedown", U);
        }
      }
    }), Yn(() => {
      window.removeEventListener("resize", F);
    });
    const F = () => {
      const Y = _e(x);
      Y && (R.value = Y.getBoundingClientRect().width);
    }, { arrowRight: b, arrowLeft: P, arrowDown: Q, arrowUp: ae } = yt(), { flowStep: L, updateFlowStep: ie, childMount: E, resetFlow: f } = hl(n, a, S), D = j(() => n.monthPicker ? Nl : n.yearPicker ? Bl : n.timePicker ? xl : n.quarterPicker ? bo : go), H = () => {
      const Y = _e(A);
      Y && Y.focus({ preventScroll: !0 });
    }, ne = j(() => {
      var Y;
      return ((Y = S.value) == null ? void 0 : Y.getSidebarProps()) || {};
    }), _ = () => {
      n.openOnTop && a("recalculate-position");
    }, d = Ke(M, "action"), O = j(() => n.monthPicker || n.yearPicker ? Ke(M, "monthYear") : n.timePicker ? Ke(M, "timePicker") : Ke(M, "shared")), G = j(() => n.openOnTop ? "dp__arrow_bottom" : "dp__arrow_top"), y = j(() => ({
      dp__menu_disabled: n.disabled,
      dp__menu_readonly: n.readonly
    })), l = j(
      () => ({
        dp__menu: !0,
        dp__menu_index: !C.value.enabled,
        dp__relative: C.value.enabled,
        [n.menuClassName]: !!n.menuClassName
      })
    ), h = (Y) => {
      ft(Y, k.value, !0);
    }, s = () => {
      n.escClose && a("close-picker");
    }, X = (Y) => {
      if (n.arrowNavigation) {
        if (Y === "up")
          return ae();
        if (Y === "down")
          return Q();
        if (Y === "left")
          return P();
        if (Y === "right")
          return b();
      } else
        Y === "left" || Y === "up" ? q("handleArrow", "left", 0, Y === "up") : q("handleArrow", "right", 0, Y === "down");
    }, de = (Y) => {
      c(Y.shiftKey), !n.disableMonthYearSelect && Y.code === "Tab" && Y.target.classList.contains("dp__menu") && p.value.shiftKeyInMenu && (Y.preventDefault(), ft(Y, k.value, !0), a("close-picker"));
    }, T = () => {
      H(), a("time-picker-close");
    }, u = (Y) => {
      var U, Me, Z;
      (U = S.value) == null || U.toggleTimePicker(!1, !1), (Me = S.value) == null || Me.toggleMonthPicker(!1, !1, Y), (Z = S.value) == null || Z.toggleYearPicker(!1, !1, Y);
    }, N = (Y, U = 0) => {
      var Me, Z, Ue;
      return Y === "month" ? (Me = S.value) == null ? void 0 : Me.toggleMonthPicker(!1, !0, U) : Y === "year" ? (Z = S.value) == null ? void 0 : Z.toggleYearPicker(!1, !0, U) : Y === "time" ? (Ue = S.value) == null ? void 0 : Ue.toggleTimePicker(!0, !1) : u(U);
    }, q = (Y, ...U) => {
      var Me, Z;
      (Me = S.value) != null && Me[Y] && ((Z = S.value) == null || Z[Y](...U));
    }, K = () => {
      q("selectCurrentDate");
    }, te = (Y, U) => {
      q("presetDate", Y, U);
    }, re = () => {
      q("clearHoverDate");
    };
    return t({
      updateMonthYear: (Y, U) => {
        q("updateMonthYear", Y, U);
      },
      switchView: N
    }), (Y, U) => {
      var Me;
      return w(), V("div", {
        id: Y.uid ? `dp-menu-${Y.uid}` : void 0,
        ref_key: "dpMenuRef",
        ref: A,
        tabindex: "0",
        role: "dialog",
        class: we(l.value),
        onMouseleave: re,
        onClick: h,
        onKeydown: [
          ce(s, ["esc"]),
          U[18] || (U[18] = ce(De((Z) => X("left"), ["prevent"]), ["left"])),
          U[19] || (U[19] = ce(De((Z) => X("up"), ["prevent"]), ["up"])),
          U[20] || (U[20] = ce(De((Z) => X("down"), ["prevent"]), ["down"])),
          U[21] || (U[21] = ce(De((Z) => X("right"), ["prevent"]), ["right"])),
          de
        ]
      }, [
        (Y.disabled || Y.readonly) && v(C).enabled ? (w(), V("div", {
          key: 0,
          class: we(y.value)
        }, null, 2)) : W("", !0),
        !v(C).enabled && !Y.teleportCenter ? (w(), V("div", {
          key: 1,
          class: we(G.value)
        }, null, 2)) : W("", !0),
        fe("div", {
          ref_key: "innerMenuRef",
          ref: x,
          class: we({
            dp__menu_content_wrapper: ((Me = Y.presetDates) == null ? void 0 : Me.length) || !!Y.$slots["left-sidebar"] || !!Y.$slots["right-sidebar"]
          }),
          style: Xe({ "--dp-menu-width": `${R.value}px` })
        }, [
          Y.$slots["left-sidebar"] ? (w(), V("div", wo, [
            le(Y.$slots, "left-sidebar", Re(We(ne.value)))
          ])) : W("", !0),
          Y.presetDates.length ? (w(), V("div", Do, [
            (w(!0), V(ye, null, Ae(Y.presetDates, (Z, Ue) => (w(), V(ye, { key: Ue }, [
              Z.slot ? le(Y.$slots, Z.slot, {
                key: 0,
                presetDate: te,
                label: Z.label,
                value: Z.value
              }) : (w(), V("button", {
                key: 1,
                type: "button",
                style: Xe(Z.style || {}),
                class: "dp__btn dp--preset-range",
                onClick: De((ze) => te(Z.value, Z.noTz), ["prevent"]),
                onKeydown: [
                  ce(De((ze) => te(Z.value, Z.noTz), ["prevent"]), ["enter"]),
                  ce(De((ze) => te(Z.value, Z.noTz), ["prevent"]), ["space"])
                ]
              }, Be(Z.label), 45, Mo))
            ], 64))), 128))
          ])) : W("", !0),
          fe("div", {
            ref_key: "calendarWrapperRef",
            ref: I,
            class: "dp__instance_calendar",
            role: "document"
          }, [
            (w(), he(Nn(D.value), Ne({
              ref_key: "dynCmpRef",
              ref: S
            }, o.value, {
              "flow-step": v(L),
              onMount: v(E),
              onUpdateFlowStep: v(ie),
              onResetFlow: v(f),
              onFocusMenu: H,
              onSelectDate: U[0] || (U[0] = (Z) => Y.$emit("select-date")),
              onDateUpdate: U[1] || (U[1] = (Z) => Y.$emit("date-update", Z)),
              onTooltipOpen: U[2] || (U[2] = (Z) => Y.$emit("tooltip-open", Z)),
              onTooltipClose: U[3] || (U[3] = (Z) => Y.$emit("tooltip-close", Z)),
              onAutoApply: U[4] || (U[4] = (Z) => Y.$emit("auto-apply", Z)),
              onRangeStart: U[5] || (U[5] = (Z) => Y.$emit("range-start", Z)),
              onRangeEnd: U[6] || (U[6] = (Z) => Y.$emit("range-end", Z)),
              onInvalidFixedRange: U[7] || (U[7] = (Z) => Y.$emit("invalid-fixed-range", Z)),
              onTimeUpdate: U[8] || (U[8] = (Z) => Y.$emit("time-update")),
              onAmPmChange: U[9] || (U[9] = (Z) => Y.$emit("am-pm-change", Z)),
              onTimePickerOpen: U[10] || (U[10] = (Z) => Y.$emit("time-picker-open", Z)),
              onTimePickerClose: T,
              onRecalculatePosition: _,
              onUpdateMonthYear: U[11] || (U[11] = (Z) => Y.$emit("update-month-year", Z)),
              onAutoApplyInvalid: U[12] || (U[12] = (Z) => Y.$emit("auto-apply-invalid", Z)),
              onInvalidDate: U[13] || (U[13] = (Z) => Y.$emit("invalid-date", Z)),
              "onUpdate:internalModelValue": U[14] || (U[14] = (Z) => Y.$emit("update:internal-model-value", Z))
            }), Ve({ _: 2 }, [
              Ae(O.value, (Z, Ue) => ({
                name: Z,
                fn: ge((ze) => [
                  le(Y.$slots, Z, Re(We({ ...ze })))
                ])
              }))
            ]), 1040, ["flow-step", "onMount", "onUpdateFlowStep", "onResetFlow"]))
          ], 512),
          Y.$slots["right-sidebar"] ? (w(), V("div", $o, [
            le(Y.$slots, "right-sidebar", Re(We(ne.value)))
          ])) : W("", !0),
          Y.$slots["action-extra"] ? (w(), V("div", To, [
            Y.$slots["action-extra"] ? le(Y.$slots, "action-extra", {
              key: 0,
              selectCurrentDate: K
            }) : W("", !0)
          ])) : W("", !0)
        ], 6),
        !Y.autoApply || v(k).keepActionRow ? (w(), he(Tl, Ne({
          key: 2,
          "menu-mount": g.value
        }, o.value, {
          "calendar-width": R.value,
          onClosePicker: U[15] || (U[15] = (Z) => Y.$emit("close-picker")),
          onSelectDate: U[16] || (U[16] = (Z) => Y.$emit("select-date")),
          onInvalidSelect: U[17] || (U[17] = (Z) => Y.$emit("invalid-select")),
          onSelectNow: K
        }), Ve({ _: 2 }, [
          Ae(v(d), (Z, Ue) => ({
            name: Z,
            fn: ge((ze) => [
              le(Y.$slots, Z, Re(We({ ...ze })))
            ])
          }))
        ]), 1040, ["menu-mount", "calendar-width"])) : W("", !0)
      ], 42, ko);
    };
  }
}), Ao = typeof window < "u" ? window : void 0, $n = () => {
}, So = (e) => Za() ? (Qa(e), !0) : !1, Po = (e, t, r, a) => {
  if (!e)
    return $n;
  let n = $n;
  const o = mt(
    () => v(e),
    (c) => {
      n(), c && (c.addEventListener(t, r, a), n = () => {
        c.removeEventListener(t, r, a), n = $n;
      });
    },
    { immediate: !0, flush: "post" }
  ), i = () => {
    o(), n();
  };
  return So(i), i;
}, Co = (e, t, r, a = {}) => {
  const { window: n = Ao, event: o = "pointerdown" } = a;
  return n ? Po(n, o, (c) => {
    const p = _e(e), M = _e(t);
    !p || !M || p === c.target || c.composedPath().includes(p) || c.composedPath().includes(M) || r(c);
  }, { passive: !0 }) : void 0;
}, _o = /* @__PURE__ */ Ie({
  compatConfig: {
    MODE: 3
  },
  __name: "VueDatePicker",
  props: {
    ...an
  },
  emits: [
    "update:model-value",
    "update:model-timezone-value",
    "text-submit",
    "closed",
    "cleared",
    "open",
    "focus",
    "blur",
    "internal-model-change",
    "recalculate-position",
    "flow-step",
    "update-month-year",
    "invalid-select",
    "invalid-fixed-range",
    "tooltip-open",
    "tooltip-close",
    "time-picker-open",
    "time-picker-close",
    "am-pm-change",
    "range-start",
    "range-end",
    "date-update",
    "invalid-date"
  ],
  setup(e, { expose: t, emit: r }) {
    const a = r, n = e, o = Dt(), i = ee(!1), c = xt(n, "modelValue"), p = xt(n, "timezone"), M = ee(null), $ = ee(null), C = ee(null), k = ee(!1), I = ee(null), R = ee(!1), A = ee(!1), { setMenuFocused: x, setShiftKey: g } = Ha(), { clearArrowNav: S } = yt(), { mapDatesArrToMap: F, validateDate: b, isValidTime: P } = Mt(n), { defaultedTransitions: Q, defaultedTextInput: ae, defaultedInline: L, defaultedConfig: ie } = Pe(n), { menuTransition: E, showTransition: f } = Lt(Q);
    Le(() => {
      X(n.modelValue), gt().then(() => {
        if (!L.value.enabled) {
          const J = y(I.value);
          J == null || J.addEventListener("scroll", re), window == null || window.addEventListener("resize", be);
        }
      }), L.value.enabled && (i.value = !0), window == null || window.addEventListener("keyup", Y), window == null || window.addEventListener("keydown", U);
    });
    const D = j(() => F());
    Yn(() => {
      if (!L.value.enabled) {
        const J = y(I.value);
        J == null || J.removeEventListener("scroll", re), window == null || window.removeEventListener("resize", be);
      }
      window == null || window.removeEventListener("keyup", Y), window == null || window.removeEventListener("keydown", U);
    });
    const H = Ke(o, "all", n.presetDates), ne = Ke(o, "input");
    mt(
      [c, p],
      () => {
        X(c.value);
      },
      { deep: !0 }
    );
    const { openOnTop: _, menuStyle: d, xCorrect: O, setMenuPosition: G, getScrollableParent: y, shadowRender: l } = vl({
      menuRef: M,
      menuRefInner: $,
      inputRef: C,
      pickerWrapperRef: I,
      inline: L,
      emit: a,
      props: n,
      slots: o
    }), {
      inputValue: h,
      internalModelValue: s,
      parseExternalModelValue: X,
      emitModelValue: de,
      formatInputValue: T,
      checkBeforeEmit: u
    } = cl(a, n, k), N = j(
      () => ({
        dp__main: !0,
        dp__theme_dark: n.dark,
        dp__theme_light: !n.dark,
        dp__flex_display: L.value.enabled,
        dp__flex_display_with_input: L.value.input
      })
    ), q = j(() => n.dark ? "dp__theme_dark" : "dp__theme_light"), K = j(() => n.teleport ? {
      to: typeof n.teleport == "boolean" ? "body" : n.teleport,
      disabled: L.value.enabled
    } : { class: "dp__outer_menu_wrap" }), te = j(() => L.value.enabled && (n.timePicker || n.monthPicker || n.yearPicker || n.quarterPicker)), re = () => {
      i.value && (ie.value.closeOnScroll ? Ge() : G());
    }, be = () => {
      i.value && G();
    }, Y = (J) => {
      J.key === "Tab" && !L.value.enabled && !n.teleport && ie.value.tabOutClosesMenu && (I.value.contains(document.activeElement) || Ge()), A.value = J.shiftKey;
    }, U = (J) => {
      A.value = J.shiftKey;
    }, Me = () => {
      !n.disabled && !n.readonly && (l(ha, n), G(!1), i.value = !0, i.value && a("open"), i.value || Ot(), X(n.modelValue));
    }, Z = () => {
      var J;
      h.value = "", Ot(), (J = C.value) == null || J.setParsedDate(null), a("update:model-value", null), a("update:model-timezone-value", null), a("cleared"), ie.value.closeOnClearValue && Ge();
    }, Ue = () => {
      const J = s.value;
      return !J || !Array.isArray(J) && b(J) ? !0 : Array.isArray(J) ? n.multiDates || J.length === 2 && b(J[0]) && b(J[1]) ? !0 : n.partialRange && !n.timePicker ? b(J[0]) : !1 : !1;
    }, ze = () => {
      u() && Ue() ? (de(), Ge()) : a("invalid-select", s.value);
    }, $t = (J) => {
      Wt(), de(), ie.value.closeOnAutoApply && !J && Ge();
    }, Wt = () => {
      C.value && ae.value.enabled && C.value.setParsedDate(s.value);
    }, on = (J = !1) => {
      n.autoApply && P(s.value) && Ue() && (n.range && Array.isArray(s.value) ? (n.partialRange || s.value.length === 2) && $t(J) : $t(J));
    }, Ot = () => {
      ae.value.enabled || (s.value = null);
    }, Ge = () => {
      L.value.enabled || (i.value && (i.value = !1, O.value = !1, x(!1), g(!1), S(), a("closed"), h.value && X(c.value)), Ot(), a("blur"));
    }, sn = (J, ue, se = !1) => {
      if (!J) {
        s.value = null;
        return;
      }
      const rt = Array.isArray(J) ? !J.some((ot) => !b(ot)) : b(J), lt = P(J);
      rt && lt && (s.value = J, ue && (R.value = se, ze(), a("text-submit")));
    }, un = () => {
      n.autoApply && P(s.value) && de(), Wt();
    }, jt = () => i.value ? Ge() : Me(), dn = (J) => {
      s.value = J;
    }, Zn = () => {
      ae.value.enabled && (k.value = !0, T()), a("focus");
    }, m = () => {
      if (ae.value.enabled && (k.value = !1, X(n.modelValue), R.value)) {
        const J = Wr(I.value, A.value);
        J == null || J.focus();
      }
      a("blur");
    }, z = (J) => {
      $.value && $.value.updateMonthYear(0, {
        month: da(J.month),
        year: da(J.year)
      });
    }, oe = (J) => {
      X(J ?? n.modelValue);
    }, me = (J, ue) => {
      var se;
      (se = $.value) == null || se.switchView(J, ue);
    }, Se = (J) => ie.value.onClickOutside ? ie.value.onClickOutside(J) : Ge();
    return Co(M, C, () => Se(Ue)), t({
      closeMenu: Ge,
      selectDate: ze,
      clearValue: Z,
      openMenu: Me,
      onScroll: re,
      formatInputValue: T,
      // exposed for testing purposes
      updateInternalModelValue: dn,
      // modify internal modelValue
      setMonthYear: z,
      parseModel: oe,
      switchView: me,
      toggleMenu: jt
    }), (J, ue) => (w(), V("div", {
      ref_key: "pickerWrapperRef",
      ref: I,
      class: we(N.value),
      "data-datepicker-instance": ""
    }, [
      qe(wl, Ne({
        ref_key: "inputRef",
        ref: C,
        "input-value": v(h),
        "onUpdate:inputValue": ue[0] || (ue[0] = (se) => Xn(h) ? h.value = se : null),
        "is-menu-open": i.value
      }, J.$props, {
        onClear: Z,
        onOpen: Me,
        onSetInputDate: sn,
        onSetEmptyDate: v(de),
        onSelectDate: ze,
        onToggle: jt,
        onClose: Ge,
        onFocus: Zn,
        onBlur: m,
        onRealBlur: ue[1] || (ue[1] = (se) => k.value = !1)
      }), Ve({ _: 2 }, [
        Ae(v(ne), (se, rt) => ({
          name: se,
          fn: ge((lt) => [
            le(J.$slots, se, Re(We(lt)))
          ])
        }))
      ]), 1040, ["input-value", "is-menu-open", "onSetEmptyDate"]),
      qe(Rt, {
        name: v(E)(v(_)),
        css: v(f) && !v(L).enabled
      }, {
        default: ge(() => [
          i.value ? (w(), he(Nn(J.teleport ? Xa : "div"), Ne({
            key: 0,
            ref_key: "dpWrapMenuRef",
            ref: M
          }, K.value, {
            class: { "dp--menu-wrapper": !v(L).enabled },
            style: v(L).enabled ? void 0 : v(d)
          }), {
            default: ge(() => [
              qe(ha, Ne({
                ref_key: "dpMenuRef",
                ref: $
              }, J.$props, {
                "internal-model-value": v(s),
                "onUpdate:internalModelValue": ue[2] || (ue[2] = (se) => Xn(s) ? s.value = se : null),
                class: { [q.value]: !0, "dp--menu-wrapper": J.teleport },
                style: J.teleport ? v(d) : void 0,
                "open-on-top": v(_),
                "arr-map-values": D.value,
                "no-overlay-focus": te.value,
                onClosePicker: Ge,
                onSelectDate: ze,
                onAutoApply: on,
                onTimeUpdate: un,
                onFlowStep: ue[3] || (ue[3] = (se) => J.$emit("flow-step", se)),
                onUpdateMonthYear: ue[4] || (ue[4] = (se) => J.$emit("update-month-year", se)),
                onInvalidSelect: ue[5] || (ue[5] = (se) => J.$emit("invalid-select", v(s))),
                onAutoApplyInvalid: ue[6] || (ue[6] = (se) => J.$emit("invalid-select", se)),
                onInvalidFixedRange: ue[7] || (ue[7] = (se) => J.$emit("invalid-fixed-range", se)),
                onRecalculatePosition: v(G),
                onTooltipOpen: ue[8] || (ue[8] = (se) => J.$emit("tooltip-open", se)),
                onTooltipClose: ue[9] || (ue[9] = (se) => J.$emit("tooltip-close", se)),
                onTimePickerOpen: ue[10] || (ue[10] = (se) => J.$emit("time-picker-open", se)),
                onTimePickerClose: ue[11] || (ue[11] = (se) => J.$emit("time-picker-close", se)),
                onAmPmChange: ue[12] || (ue[12] = (se) => J.$emit("am-pm-change", se)),
                onRangeStart: ue[13] || (ue[13] = (se) => J.$emit("range-start", se)),
                onRangeEnd: ue[14] || (ue[14] = (se) => J.$emit("range-end", se)),
                onDateUpdate: ue[15] || (ue[15] = (se) => J.$emit("date-update", se)),
                onInvalidDate: ue[16] || (ue[16] = (se) => J.$emit("invalid-date", se))
              }), Ve({ _: 2 }, [
                Ae(v(H), (se, rt) => ({
                  name: se,
                  fn: ge((lt) => [
                    le(J.$slots, se, Re(We({ ...lt })))
                  ])
                }))
              ]), 1040, ["internal-model-value", "class", "style", "open-on-top", "arr-map-values", "no-overlay-focus", "onRecalculatePosition"])
            ]),
            _: 3
          }, 16, ["class", "style"])) : W("", !0)
        ]),
        _: 3
      }, 8, ["name", "css"])
    ], 2));
  }
}), ja = /* @__PURE__ */ (() => {
  const e = _o;
  return e.install = (t) => {
    t.component("Vue3DatePicker", e);
  }, e;
})(), Ro = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  default: ja
}, Symbol.toStringTag, { value: "Module" }));
Object.entries(Ro).forEach(([e, t]) => {
  e !== "default" && (ja[e] = t);
});
export {
  ja as default
};
